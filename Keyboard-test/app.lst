     1                                  cpu 8086
     2                                  org 0
     3                                  
     4                                  GREEN equ 0x1c00
     5                                  COLS equ 72
     6                                  ROWS equ 50
     7                                  FONT equ 0xFF00
     8                                  
     9 00000000 EB02                    jmp setup
    10                                  
    11                                  cursor:
    12 00000002 00                      col: db 0
    13 00000003 00                      row: db 0
    14                                  
    15                                  ; FIXME
    16                                  ; text: times COLS*ROW
    17                                  
    18                                  setup:
    19 00000004 B000                      mov al,0
    20 00000006 E63A                      out 0x3a,al           ; keyboard \force state/
    21                                   
    22 00000008 B000                      mov al,0
    23 0000000A E63A                      out 0x3a,al           ; keyboard \force state/
    24                                    
    25 0000000C B0FF                      mov al,0xFF
    26 0000000E E63A                      out 0x3a,al           ; keyboard \reset/
    27                                    
    28 00000010 B0FF                      mov al,0xFF
    29 00000012 E63A                      out 0x3a,al           ; keyboard \mode/
    30                                    
    31 00000014 B037                      mov al,0x37
    32 00000016 E63A                      out 0x3a,al           ; keyboard \set command
    33                                  
    34 00000018 B005                      mov al, 5
    35 0000001A E610                      out 10h, al           ; select address 0x1c000 as green video page
    36                                    
    37 0000001C E87900                    call clear_green
    38                                  
    39                                  
    40                                    ; mov al,1
    41                                    ; call draw_char
    42                                    ; mov al,1
    43                                    ; call draw_char
    44                                    ; mov al,1
    45                                    ; call draw_char
    46                                  
    47                                    ; call rom_to_vram
    48                                    ; hlt
    49                                  
    50 0000001F FA                        cli
    51                                    
    52                                  draw:
    53                                  
    54                                  
    55 00000020 B94900                    mov cx,73
    56                                  .lp
    57 00000023 B041                      mov al,65
    58 00000025 E82300                    call draw_char  
    59 00000028 E2F9                      loop .lp
    60                                  
    61 0000002A F4                        hlt
    62                                  
    63                                    ; in al,0x3a
    64                                    ; test al,2
    65                                  
    66                                    ; ; jz .jiret
    67                                  
    68                                    ; in al,0x38  ;get data byte
    69                                    
    70                                    ; cmp al,0
    71                                    ; je draw
    72                                  
    73                                    ; cmp al, 0b00011111
    74                                    ; je draw
    75                                  
    76                                    ; ; call draw_char
    77                                    ; call draw_char
    78                                  
    79                                    ; mov al,0x37
    80                                    ; out 0x3a,al ; drop key
    81                                  
    82                                  
    83 0000002B 81FF4038                  cmp di,14400
    84 0000002F 72EF                      jb draw
    85 00000031 31FF                      xor di,di
    86 00000033 EBEB                      jmp draw
    87                                  
    88                                  rom_to_vram:
    89 00000035 B800FE                    mov ax, 0xFE00
    90 00000038 8ED8                      mov ds, ax       ; DS source segment
    91 0000003A B8001C                    mov ax, GREEN
    92 0000003D 8EC0                      mov es, ax       ; ES dest segment
    93 0000003F BE0010                    mov si, 0x1000   ; FONT offset in ROM
    94 00000042 BF0000                    mov di, 0        ; dest index
    95 00000045 B90040                    mov cx, 0x4000   ; 8000 bytes (0x4000 in hexadecimal)
    96 00000048 F3A4                      rep movsb        ; Kopieer CX bytes van DS:SI naar ES:DI
    97 0000004A C3                        ret
    98                                  
    99                                  
   100                                  draw_char:   ; al=char, changes ax,di,si,ds
   101 0000004B BE00FF                    mov si,FONT
   102 0000004E 8EDE                      mov ds,si
   103                                  
   104 00000050 D1E0                      shl ax,1
   105 00000052 D1E0                      shl ax,1
   106 00000054 D1E0                      shl ax,1
   107 00000056 89C6                      mov si,ax
   108 00000058 A5                        movsw
   109 00000059 A5                        movsw
   110 0000005A 57                        push di
   111 0000005B 81C71C01                  add di,4*COLS-4
   112 0000005F A5                        movsw
   113 00000060 A5                        movsw
   114 00000061 5F                        pop di
   115                                  
   116 00000062 0E                        push cs
   117 00000063 1F                        pop ds
   118                                  
   119 00000064 FE06[0200]                inc byte [col]
   120                                  
   121 00000068 803E[0200]19              cmp byte [col],25
   122 0000006D 7516                      jne .done
   123                                  
   124 0000006F C606[0200]00              mov byte [col],0
   125 00000074 FE06[0300]                inc byte [row]     ; 1 row = 4 lines
   126 00000078 FE06[0300]                inc byte [row]
   127                                  
   128 0000007C 53                        push bx
   129 0000007D 8B1E[0200]                mov bx,[cursor]
   130 00000081 E80200                    call calc_di
   131 00000084 5B                        pop bx
   132                                  
   133                                  
   134                                  .done
   135 00000085 C3                        ret
   136                                  
   137                                  calc_di:          ; input bl,bh [0,0,71,49]
   138 00000086 B89000                    mov ax,144      ; 2*72 cols
   139 00000089 F6E7                      mul bh          ; bh*=144 resultaat in AX
   140 0000008B D1E0                      shl ax,1        ; verdubbel AX
   141 0000008D 89C7                      mov di,ax       ; di=ax (=bh*288)
   142 0000008F D0E3                      shl bl,1        ; bl*=2
   143 00000091 D0E3                      shl bl,1        ; bl*=2
   144 00000093 B700                      mov bh,0
   145 00000095 01DF                      add di,bx       ; di+=bl
   146 00000097 C3                        ret
   147                                  
   148                                  clear_green:
   149 00000098 B9201C                    mov cx,COLS*ROWS*2
   150 0000009B B8001C                    mov ax,GREEN
   151 0000009E 8EC0                      mov es,ax
   152 000000A0 31FF                      xor di,di
   153 000000A2 31C0                      xor ax,ax
   154 000000A4 F3AB                      rep stosw         ; clear screen
   155 000000A6 31FF                      xor di,di
   156 000000A8 C3                        ret
   157                                  
   158                                  beep:
   159 000000A9 B90300                    mov cx,3
   160 000000AC E43A                    .lp in al,0x3a
   161 000000AE A801                      test al,1
   162 000000B0 74FA                      jz .lp
   163 000000B2 B018                      mov al,0x18
   164 000000B4 E638                      out 0x38,al
   165 000000B6 E2F4                      loop .lp
   166 000000B8 C3                        ret
   167                                  
   168 000000B9 00<rep 2CF47h>          times (180*1024)-($-$$) db 0
   169                                  
