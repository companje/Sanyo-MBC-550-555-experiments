     1                                  org 0
     2                                  cpu 8086
     3                                  
     4                                  RED   equ 0xf000
     5                                  GREEN equ 0x1c00
     6                                  BLUE  equ 0xf400
     7                                  COLS  equ 72
     8                                  
     9                                  ROM equ 0xFE00
    10                                  FONT equ 0xFF00
    11                                  
    12                                  LINES_PER_ROW equ 4
    13                                  COLS_PER_ROW equ 72
    14                                  
    15                                  ; DISK_STATUS equ 0x08
    16                                  ; DISK_CMD equ 0x08
    17                                  ; DISK_SECTOR equ 0x0C
    18                                  ; DISK_DATA equ 0x0E
    19                                  
    20                                  ; SEG_DST equ 0x0038
    21                                  ; SEG_DST equ RED
    22                                  
    23                                  PPI equ 0x1E
    24                                  
    25 00000000 EB1B                    jmp setup
    26                                  
    27 00000002 53616E796F312E3202-     db 'Sanyo1.2',2,0,1,0,0,2,112,0,0,0,2,0,253,2,0,9,0,2,0
    27 0000000B 000100000270000000-
    27 00000014 0200FD020009000200 
    28                                  
    29                                  ; row: db 0
    30                                  ; col: db 0
    31                                  
    32                                  setup:
    33 0000001D B800F0                    mov ax,RED
    34 00000020 8EC0                      mov es,ax                  ; segment for data from floppy
    35 00000022 31FF                      xor di,di
    36                                  
    37                                  DISK_STATUS equ 0x08
    38                                  DISK_CMD equ 0x08
    39                                  DISK_TRACK equ 0x0A
    40                                  DISK_SECTOR equ 0x0C
    41                                  DISK_DATA equ 0x0E
    42                                  
    43                                  DISK_DRIVE equ 0x1C
    44                                  
    45 00000024 FA                      cli
    46 00000025 FC                      cld
    47                                  
    48 00000026 B098                    mov al,0x98
    49 00000028 E61E                    out PPI,al                  ; PPI control: 0b10011000 (0x98) 'strobe'
    50                                  
    51 0000002A B004                    mov al,4
    52 0000002C E61C                      out DISK_DRIVE,al          ; set drive/head
    53                                  
    54 0000002E B001                      mov al,1
    55 00000030 E60C                      out DISK_SECTOR,al          ; set sector
    56 00000032 D40A<rep 4h>              times 4 aam                 ; delay
    57                                  
    58                                  
    59 0000003A B91E00                  mov cx,30
    60                                  readAllSectors:
    61                                    
    62                                  
    63 0000003D 88C8                      mov al,cl
    64 0000003F E60E                      out DISK_DATA,al            ; set track
    65 00000041 D40A<rep 4h>              times 4 aam                 ; delay
    66                                  
    67                                    
    68                                  
    69                                  ; wait1:
    70                                  ;   in al,DISK_STATUS
    71                                  ;   and al,0xff
    72                                  ;   jz wait1
    73                                  
    74                                  
    75 00000049 B080                      mov al,0x80                 ; read sector (to buffer of floppy controller?)
    76 0000004B E608                      out DISK_CMD,al
    77                                    ; times 4 aam                 ; delay
    78                                  
    79 0000004D E80300                    call readSector
    80                                  
    81 00000050 E2EB                      loop readAllSectors
    82                                  
    83 00000052 F4                      hlt
    84                                  
    85                                  readSector:
    86 00000053 51                        push cx
    87 00000054 B90002                    mov cx,512
    88                                    loadByte:
    89 00000057 E40E                        in al,DISK_DATA
    90                                      ; in al,DISK_STATUS
    91 00000059 AA                          stosb
    92 0000005A D40A<rep 4h>                times 4 aam                 ; delay
    93 00000062 E2F3                        loop loadByte
    94 00000064 59                        pop cx
    95 00000065 C3                        ret
    96                                  
    97                                  
    98                                  %assign num1 $-$$
    99 00000066 00<rep 59F9Ah>          times 368640-num1 db 0
   100                                  
   101                                  ; db 1
   102                                  
   103                                  ; _1E4A:
   104                                  ;   mov al,0xD8
   105                                  ;   out DISK_CMD,al           ; floppy command: 0b11011000 (0xD8)
   106                                  
   107                                  ;   mov al,0x98
   108                                  ;   out PPI,al                ; PPI control: 0b10011000 (0x98) 'strobe'
   109                                  
   110                                  ; _1E52:
   111                                  ; mov ax,0xffff
   112                                  ;   stosw
   113                                  ;   stosw
   114                                  
   115                                  ;   in al,DISK_STATUS         ; floppy status
   116                                  ;   test al,0x01
   117                                  ;   jnz _1E52                 ; loop until bit 1 is high
   118                                  
   119                                  ; _1E58:
   120                                  ;   mov al,0x08
   121                                  ;   out DISK_CMD,al           ; floppy command 0b00001000
   122                                  ;   aam                       ; wait?
   123                                  ;   aam                       ; wait?
   124                                  ;   aam                       ; wait?
   125                                  ;   aam                       ; wait?
   126                                  
   127                                  ; _1E64:
   128                                  ;   in al,DISK_STATUS          ; floppy status dx=0x08
   129                                  ;   test al,0x01
   130                                  ;   jnz _1E64                  ; wait until bit 1 is high
   131                                  ;   test al,0x80
   132                                  ;   jnz _1E58                  ; wait until bit 7 is high
   133                                  
   134                                  ; _1E6E:
   135                                  ;   cld                        ; clear direction flag
   136                                  ;   mov al,0x01
   137                                  ;   out DISK_SECTOR,al         ; floppy set sector bit 1
   138                                    
   139                                    
   140                                    
   141                                  ;   mov dx,DISK_STATUS              ; used to read floppy status
   142                                  ;   mov si,_1EA0               ; used for local jmp later on
   143                                    
   144                                  ;   mov bh,0
   145                                  ;   mov ah,0
   146                                  ;   mov al,0
   147                                  ;   out DISK_CMD,al            ; floppy
   148                                    
   149                                  ;   aam
   150                                  ;   aam
   151                                  ;   aam
   152                                  ;   aam
   153                                  
   154                                  
   155                                  
   156                                  ; _1E91:
   157                                    
   158                                  
   159                                  ;   in al,dx
   160                                  ;   ; in al,DISK_STATUS              ; floppy status dx=0x08
   161                                  ;   sar al,1
   162                                  
   163                                  ;   jnc _1EB2            ; floppy
   164                                  ;   jnz _1E91            ; floppy
   165                                  
   166                                   
   167                                    
   168                                    
   169                                  
   170                                  ;   ; mov cx,10*2*72
   171                                  ;   ; rep stosw
   172                                  
   173                                  ;   ; hlt
   174                                  
   175                                  
   176                                  ; _1E98:
   177                                  ;   in al,dx              ; floppy dx=0x08
   178                                  ;   and al,bh             ; bit 2 (?)
   179                                  ;   jz _1E98  
   180                                  
   181                                  ; _1E9D:
   182                                  ;   in al,DISK_DATA            ; read data from floppy
   183                                  ;   stosb                 ; store in es:di++    
   184                                  
   185                                  ; _1EA0:
   186                                  ;   in al,dx              ; floppy dx=0x08
   187                                  ;   dec ax
   188                                  ;   cmp al,bh             ; bh = 2 ?
   189                                  ;   jnz _1EB2
   190                                  
   191                                  ; _1EA8:
   192                                  ;   in al,DISK_DATA            ; read data from floppy
   193                                  ;   stosb                 ; store in es:di++
   194                                  
   195                                  ;   in al,dx
   196                                  ;   cmp al,bh
   197                                  ;   jz _1EA8
   198                                  
   199                                  ; _1EB0:
   200                                  ; ; hlt
   201                                  ;   jmp si                ; jump to 0x1EA0
   202                                  
   203                                  ; _1EB2:
   204                                    
   205                                  ;   mov ax,0xff00
   206                                  ;   stosw
   207                                  ;   stosw
   208                                  
   209                                  ;   ; in al,dx              ; floppy status dx=0x08
   210                                  ;   ; test al,0x1C           
   211                                  ;   ; jnz _1E52            ; floppy status
   212                                  
   213                                  ; _1EBC:
   214                                    
   215                                  
   216                                  ;   ; jmp 0x0038:0
   217                                  ;   ; hlt
   218                                  
   219                                  
   220                                  ; img: 
   221                                    ; incbin "zwembad.jpg"
   222                                  
   223                                  %assign num $-$$
   224                                  times 368640-num db  0
