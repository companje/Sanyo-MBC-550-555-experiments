     1                                  ; t: db 0
     2                                  ; i: db 0
     3                                  ; x: db 0
     4                                  ; y: db 0
     5                                  ; db t,i,x,y
     6                                  
     7                                  RED equ 0xf000
     8                                  GREEN equ 0x0c00
     9                                  BLUE equ 0xf400
    10                                  
    11                                  setup:
    12 00000000 E87900                      call cls
    13 00000003 0E                          push cs
    14 00000004 1F                          pop ds
    15 00000005 B800F0                      mov ax,RED
    16 00000008 8EC0                        mov es,ax
    17                                  
    18 0000000A B600                        mov dh,0          ; t
    19                                  draw:
    20 0000000C B200                        mov dl,0          ; i
    21 0000000E B300                        mov bl,0          ; y
    22 00000010 BF0000                      mov di,0          ; top left offset
    23 00000013 BE[9300]                    mov si,img
    24                                  y:
    25 00000016 B700                        mov bh,0          ; x
    26                                  x:
    27 00000018 B400                        mov ah,0
    28 0000001A 88F8                        mov al,bh
    29 0000001C B104                        mov cl,4
    30 0000001E F6E1                        mul cl
    31 00000020 89C6                        mov si,ax
    32 00000022 81C6[9300]                  add si,img
    33                                  
    34                                  
    35                                  
    36                                  ; TODO 'render' chars to mem and draw/stamp from mem
    37                                  
    38                                      ; mov cl,4    is already 4 from mul above            ; char is 4 nibbles
    39                                  draw_char:
    40 00000026 AC                          lodsb                   ; use lodsb instead of movsb to keep a copy in al
    41 00000027 AA                          stosb                   ; draw in left top nibble
    42 00000028 53                          push bx                 ; save cur x and y
    43 00000029 51                          push cx                 ; cur loop counter (4,3,2,1)
    44 0000002A 51                          push cx
    45 0000002B 5B                          pop bx                  ; bx = counter
    46 0000002C D1E3                        shl bx,1                ; bx *= 2
    47 0000002E 53                          push bx                 ; save counter*2 for right bottom
    48                                      
    49 0000002F 83FB02                      cmp bx,2                ; skip top line of left bottom nibble
    50 00000032 7405                        je .j1
    51 00000034 2688813901                  es mov [di+bx+314-1],al ; draw in left bottom starting at line 3 instead of 4
    52                                  .j1:
    53                                  
    54                                  .flip_bits:                 ; flips all bits dropping highest bit
    55 00000039 B108                        mov cl,8                ; 8 bits to flip
    56 0000003B B400                        mov ah,0
    57                                  .bit:
    58 0000003D BB0180                      mov bx,0x8001           ; bl=1, bh=128  bl doubles, bh halves
    59 00000040 D2E3                        shl bl,cl
    60 00000042 84D8                        test al,bl
    61 00000044 7406                        jz .next
    62 00000046 49                          dec cx
    63 00000047 D2EF                        shr bh,cl
    64 00000049 08FC                        or ah,bh
    65 0000004B 41                          inc cx
    66                                  .next:
    67 0000004C E2EF                        loop .bit               ; loop 8 bits for flipping
    68                                  
    69 0000004E 26886503                    es mov [di+3],ah        ; draw in right top nibble
    70 00000052 5B                          pop bx                  ; bx = counter*2
    71                                      
    72 00000053 83FB02                      cmp bx,2                ; skip top line of right bottom nibble
    73 00000056 7405                        je .j2
    74 00000058 2688A13D01                  es mov [di+bx+318-1],ah ; draw in right bottom starting at line 3 instead of 4
    75                                  .j2:
    76 0000005D 59                          pop cx                  ; restore loop counter
    77 0000005E 5B                          pop bx                  ; restore x and y
    78                                  
    79 0000005F E2C5                        loop draw_char
    80                                  
    81                                      %assign num $-draw_char
    82                                      %warning draw_char num bytes
    82          ******************       warning: draw_char 59 bytes [-w+user]
    83                                  
    84                                  
    85                                  
    86                                  
    87                                  ;;;;;;;;;;;;;;;;;;;;;
    88                                  
    89 00000061 83C704                      add di,4          ; next col
    90 00000064 FEC2                        inc dl            ; i++
    91 00000066 FEC7                        inc bh            ; x++
    92 00000068 80FF10                      cmp bh,16
    93 0000006B 7CAB                        jl x
    94                                  
    95 0000006D 81C70002                    add di,192+320    ; next row
    96 00000071 FEC3                        inc bl            ; y++
    97 00000073 80FB10                      cmp bl,16
    98 00000076 7C9E                        jl y
    99                                  
   100 00000078 FEC6                        inc dh            ; t++
   101 0000007A EB90                        jmp draw          ; next frame
   102                                  
   103                                  cls:
   104 0000007C B8000C                      mov ax,GREEN
   105 0000007F B90040                      mov cx,0x4000                        ; =16k
   106 00000082 31FF                        xor di,di
   107 00000084 8EC0                        mov es,ax                            ; es=GREEN
   108 00000086 F3AA                        rep stosb                        
   109 00000088 B4F0                        mov ah,0xf0                          ; ax=RED
   110 0000008A 8EC0                        mov es,ax                            ; red + blue 
   111 0000008C 31FF                        xor di,di
   112 0000008E B580                        mov ch,0x80                          ; cx=32k
   113 00000090 F3AA                        rep stosb
   114 00000092 C3                          ret
   115                                  
   116                                  img:
   117 00000093 00000000                    db 0, 0, 0, 0                        ; empty
   118 00000097 00000001                    db 0, 0, 0, 1                        ; dot
   119 0000009B 00000003                    db 0, 0, 0, 3                        ; minus
   120 0000009F 00000103                    db 0, 0, 1, 3                        ; plus
   121 000000A3 00000307                    db 0, 0, 3, 7                        ; hat
   122 000000A7 00000707                    db 0, 0, 7, 7                        ; block
   123 000000AB 0001070F                    db 0, 1, 7, 15                       ; star
   124 000000AF 00030F0F                    db 0, 3, 15, 15                      ; fat plus
   125 000000B3 000F1F3F                    db 0, 15, 31, 63                   
   126 000000B7 011F3F3F                    db 1, 31, 63, 63                     ; tol
   127 000000BB 071F1F3F                    db 7, 31, 31, 63                     ; robot head
   128 000000BF 0F1F3F3F                    db 15, 31, 63, 63
   129 000000C3 0F3F3F7F                    db 15, 63, 63, 127
   130 000000C7 1F3F7F7F                    db 31, 63, 127, 127
   131 000000CB 1F7FFFFF                    db 31, 127, 255, 255
   132 000000CF 3F7FFFFF                    db 63, 127, 255, 255
   133                                  
   134                                      ; db 0,0,0,0,0,0,0,0
   135                                      ; db 0,0,0,1,0,0,0,0
   136                                      ; db 0,0,0,3,0,0,0,128
   137                                      ; db 0,0,1,3,0,0,0,128
   138                                      ; db 0,0,3,7,0,0,128,192
   139                                      ; db 0,0,7,7,0,0,192,192
   140                                      ; db 0,1,7,15,0,0,192,224
   141                                      ; db 0,3,15,15,0,128,224,224
   142                                      ; db 0,15,31,63,0,224,240,248
   143                                      ; db 1,31,63,63,0,240,248,248
   144                                      ; db 7,31,31,63,192,240,240,248
   145                                      ; db 15,31,63,63,224,240,248,248
   146                                      ; db 15,63,63,127,224,248,248,252
   147                                      ; db 31,63,127,127,240,248,252,252
   148                                      ; db 31,127,255,255,240,252,254,254
   149                                      ; db 63,127,255,255,248,252,254,254
   150                                  
   151                                      ; dit zijn mijn originele dots. die hierboven zijn symmetrischer
   152                                      ; db 0,0,0,0,  0,0,0,0, 
   153                                      ; db 0,0,0,0,  0,0,0,128
   154                                      ; db 0,0,0,1,  0,0,0,192,  
   155                                      ; db 0,0,0,1,  0,0,0,192
   156                                      ; db 0,0,0,3,  0,0,128,224,  
   157                                      ; db 0,0,0,3,  0,0,128,224
   158                                      ; db 0,0,3,7,  0,0,224,240,  
   159                                      ; db 0,0,3,7,  0,0,224,240
   160                                      ; db 0,0,7,15,  0,128,240,248,  
   161                                      ; db 0,0,7,15,  0,128,240,248
   162                                      ; db 0,3,15,31,  0,224,248,252,  
   163                                      ; db 0,7,31,31,  0,240,252,252
   164                                      ; db 0,15,31,63,  128,248,252,254,  
   165                                      ; db 0,15,63,63,  128,248,254,254
   166                                      ; db 7,31,63,127, 240,252,254,255, 
   167                                      ; db 7,63,127,127, 240,254,255,255
   168                                  ;
   169                                  
   170                                  %assign num $-$$
   171                                  %warning total num
   171          ******************       warning: total 211 [-w+user]
