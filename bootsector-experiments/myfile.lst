     1                                  ; Rick Companje, April 23, 2022
     2                                  cpu 8086
     3                                  org 0x0
     4                                  
     5                                  RED equ 0xf000
     6                                  GREEN equ 0x0c00
     7                                  BLUE equ 0xf400
     8                                  cols equ 80
     9                                  rows equ 25
    10                                  lines equ 200
    11                                  
    12                                  setup:
    13 00000000 E87300                      call cls
    14                                  
    15                                  draw:
    16 00000003 FC                          cld
    17 00000004 BD00F0                      mov bp,RED
    18 00000007 8EC5                        mov es,bp
    19 00000009 31FF                        xor di,di
    20                                  
    21 0000000B 0E                          push cs
    22 0000000C 1F                          pop ds    ; mov ds,cs
    23                                  
    24 0000000D 31C0                        xor ax,ax
    25 0000000F B91000                      mov cx,16
    26 00000012 51                      y:  push cx
    27 00000013 B91000                      mov cx,16
    28                                  x:  
    29 00000016 89C8                        mov ax,cx
    30 00000018 48                          dec ax
    31 00000019 D1E0<rep 2h>                times 2 shl ax,1 ; AL*=4
    32 0000001D 05[8D00]                    add ax,img
    33 00000020 96                          xchg ax,si
    34                                  
    35 00000021 A5                          movsw
    36 00000022 A5                          movsw
    37 00000023 83C704                      add di,4
    38 00000026 E2EE                        loop x
    39 00000028 81C70002                    add di,512; 192 + 320; 192=remaining space, 320=whole row
    40 0000002C 59                          pop cx
    41 0000002D E2E3                        loop y
    42                                      
    43                                  
    44                                  ; horizontal mirrored copy in vram
    45 0000002F 31F6                        xor si,si ; start at 1st col
    46 00000031 BF0400                      mov di,4  ; start at 2nd col
    47                                  
    48 00000034 BD00F0                      mov bp,RED  ;source ds:si (red)
    49 00000037 8EDD                        mov ds,bp
    50 00000039 BD000C                      mov bp,GREEN  ;dest es:di (green)
    51 0000003C 8EC5                        mov es,bp
    52                                  
    53 0000003E B91000                      mov cx,16                ; 16 cols    
    54                                  mirror_copy_outer_loop:
    55 00000041 51                          push cx
    56 00000042 B91000                      mov cx,16                ; 16 cols
    57                                  
    58                                  mirror_copy_inner_loop:
    59                                  ; hcopy:
    60 00000045 51                          push cx
    61 00000046 B90400                      mov cx,4                 ; 4 lines per row
    62                                  lines_in_row:
    63 00000049 AC                          lodsb                    ; al=[ds:si++] (vram)
    64                                  
    65 0000004A 51                          push cx                  ; somehow repne scasb destroys cx
    66 0000004B 06                          push es
    67 0000004C 57                          push di
    68                                  
    69 0000004D 0E                          push cs                  ; es=cs
    70 0000004E 07                          pop es                   ; es=cs, needed for scasb, somehow cannot use inline cs with repne/scasb
    71                                  
    72 0000004F B90800                      mov cx,8                 ; repne uses cx
    73 00000052 BF[CD00]                    mov di,lut
    74 00000055 F2AE                        repne scasb              ; cmp al,[es:di++] (lut)
    75 00000057 2E8A4508                    cs mov al,[di+8]         ; mirror using lut
    76                                  
    77 0000005B 5F                          pop di
    78 0000005C 07                          pop es
    79 0000005D 59                          pop cx
    80                                      
    81 0000005E AA                          stosb                    ; [es:di++]=al (vram)
    82                                  
    83 0000005F E2E8                        loop lines_in_row
    84                                  
    85 00000061 59                          pop cx
    86 00000062 83C604                      add si,4                 ; skip 1 column
    87 00000065 83C704                      add di,4                 ; skip 1 column
    88                                  
    89 00000068 E2DB                        loop mirror_copy_inner_loop
    90 0000006A 59                          pop cx
    91                                  
    92 0000006B 81C60002                    add si,512                ; 192 + 320; 192=remaining space, 320=whole row
    93 0000006F 81C70002                    add di,512                ; 192 + 320; 192=remaining space, 320=whole row
    94                                  
    95 00000073 E2CC                        loop mirror_copy_outer_loop
    96                                  
    97                                  ;final vertical copy loop
    98                                  
    99 00000075 F4                          hlt
   100                                  
   101                                  cls:
   102 00000076 B8000C                      mov ax,GREEN
   103 00000079 B90040                      mov cx,0x4000
   104 0000007C 31FF                        xor di,di
   105 0000007E 8EC0                        mov es,ax                            ; green
   106 00000080 F3AA                        rep stosb                        
   107 00000082 B4F0                        mov ah,0xf0                          ; ax=RED
   108 00000084 8EC0                        mov es,ax                            ; red + blue 
   109 00000086 31FF                        xor di,di
   110 00000088 B580                        mov ch,0x80
   111 0000008A F3AA                        rep stosb
   112 0000008C C3                          ret
   113                                      
   114                                  img:                                     ; 60 bytes
   115 0000008D 00000000                    db 0, 0, 0, 0                        ; empty
   116 00000091 00000001                    db 0, 0, 0, 1                        ; dot
   117 00000095 00000003                    db 0, 0, 0, 3                        ; minus
   118 00000099 00000103                    db 0, 0, 1, 3                        ; plus
   119 0000009D 00000307                    db 0, 0, 3, 7                        ; hat
   120 000000A1 00000707                    db 0, 0, 7, 7                        ; block
   121 000000A5 0001070F                    db 0, 1, 7, 15                       ; star
   122 000000A9 00030F0F                    db 0, 3, 15, 15                      ; fat plus
   123 000000AD 000F1F3F                    db 0, 15, 31, 63                   
   124 000000B1 011F3F3F                    db 1, 31, 63, 63                     ; tol
   125 000000B5 071F1F3F                    db 7, 31, 31, 63                     ; robot head
   126 000000B9 0F1F3F3F                    db 15, 31, 63, 63
   127 000000BD 0F3F3F7F                    db 15, 63, 63, 127
   128 000000C1 1F3F7F7F                    db 31, 63, 127, 127
   129 000000C5 1F7FFFFF                    db 31, 127, 255, 255
   130 000000C9 3F7FFFFF                    db 63, 127, 255, 255
   131                                  
   132                                  lut:                                     ; 18 bytes
   133 000000CD 000103070F1F3F7FFF          db 0,1,3,7,15,31,63,127,255          ; key
   134 000000D6 000080C0E0F0F8FCFE          db 0,0,128,192,224,240,248,252,254   ; value
