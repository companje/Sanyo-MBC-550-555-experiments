     1                                  ; Rick Companje, March 29th, 2022
     2                                  cpu 8086
     3                                  org 0x0
     4                                  
     5                                  ;     jmp code
     6                                  
     7                                  ;     db 'Sanyo1.2'
     8                                  ;     db 0x00,0x02,0x02,0x01,0x00,0x02,0x70,0x00,
     9                                  ;     db 0xd0,0x02,0xfd,0x02,0x00,0x09,0x00,0x02,
    10                                  ;     db 0x00,0x00,0x00,0x00,0x00,0x1c,0x00,0xff,
    11                                  ;     db '       Sanyo MBC-550/555        ',0x00
    12                                  
    13                                  ; cols equ 72
    14                                  ; startpos equ 4*24 + 4*cols*8
    15                                  
    16                                  
    17                                  ; ; setProfile:
    18                                  ; ;     mov bx,0
    19                                  ; ;     cld
    20                                  ; ; .lp:
    21                                  ; ;     mov al,bl
    22                                  ; ;     out 0x30,al            ;CRTC address port
    23                                  ; ;     mov al,[cs: bx+si+0]
    24                                  ; ;     out 0x32,al            ;CRTC data port
    25                                  ; ;     inc bx
    26                                  ; ;     cmp bl,10
    27                                  ; ;     jl .lp
    28                                  ; ;     ret
    29                                  
    30                                  ; ; profile25x80:
    31                                  ; ;     db 112  ;0  Horizontal Total
    32                                  ; ;     db 80   ;1  Horizontal Displayed
    33                                  ; ;     db 88   ;2  Horizontal Sync Position
    34                                  ; ;     db 0x4a ;3  Horizontal and Vertical Sync Widths
    35                                  ; ;     db 65   ;4  Vertical Total
    36                                  ; ;     db 0    ;5  Vertical Total Adjust
    37                                  ; ;     db 50   ;6  Vertical Displayed
    38                                  ; ;     db 56   ;7  Vertical Sync position
    39                                  ; ;     db 0    ;8  Interlace and Skew
    40                                  ; ;     db 3    ;9  Maximum Raster Address
    41                                  
    42                                  
    43                                  ; clearScreen:
    44                                  ;     cld
    45                                  ;     mov ax,0x5555  ; bitmap pattern
    46                                  ;     mov bp,0xf000  ; red + blue
    47                                  ;     mov es,bp
    48                                  ;     mov di,0
    49                                  ;     mov cx,0x4000
    50                                  ;     rep stosw
    51                                  ;     mov bp,0x0c00  ; green
    52                                  ;     mov es,bp
    53                                  ;     mov di,0
    54                                  ;     mov cx,0x2000
    55                                  ;     rep stosw
    56                                  ;     ret
    57                                  
    58                                  ; code:  
    59                                  ;     ; call setDisplayMode80x25
    60                                  ;     ; mov si,profile25x80
    61                                  ;     ; call setProfile
    62                                  ;     call clearScreen
    63                                  
    64                                  ; ; _loop:
    65                                  ; ;     jmp _loop
    66                                  
    67                                  ;     ; push cs
    68                                  ;     ; pop ds              ; data=code segment
    69                                  
    70                                  ; draw:
    71                                  ;     mov ch,0            ; t
    72                                  ; top:
    73                                  ;     mov cl,0            ; i
    74                                  ;     mov di,startpos
    75                                  ;     mov dh,0            ; y           
    76                                  ; repeatY:
    77                                  ;     mov dl,0            ; x
    78                                  ; repeatX:
    79                                  ;     ; push bx
    80                                  ;     ; cs call fx0
    81                                  ;     ; mov al,dh
    82                                      
    83                                  ;     ; pop bx
    84                                  
    85                                  ;     mov al,15
    86                                  ;     add al,ch
    87                                  
    88                                  ;     ; mov al,ch           ; t
    89                                  ;     ; times 2 shr al,1    ; /=2
    90                                  ;     ; and al,15           ; wrap (werkt dit ook voor negatieve getallen?)
    91                                  ;     ; times 2 shl al,1    ; *=4
    92                                  ;     ; mov bx,sin
    93                                  ;     ; cs xlat                ; extract sin value
    94                                  
    95                                  ;     call draw_dot_color
    96                                  ;     inc dl              ; x
    97                                  ;     inc cl              ; i
    98                                  ;     add di,8
    99                                  ;     cmp dl,16
   100                                  ;     jl repeatX
   101                                  ;     mov dl,0
   102                                  ;     add di,(cols-16)*8    ; skip remaining cols
   103                                  ;     inc dh
   104                                  ;     cmp dh,16
   105                                  ;     jl repeatY
   106                                  ;     inc ch              ; t
   107                                  ;     jmp top
   108                                  
   109                                  
   110                                  
   111                                  ; fx0:
   112                                  ;     mov al,ch           ; t
   113                                  ;     times 2 shr al,1    ; /=2
   114                                  ;     and al,15           ; wrap (werkt dit ook voor negatieve getallen?)
   115                                  ;     times 2 shl al,1    ; *=4
   116                                  ;     mov bx,sin
   117                                  ;     cs xlat                ; extract sin value
   118                                  ;     ret
   119                                  
   120                                  ; draw_dot_color:
   121                                  ;     mov bx,0xf000    ; red
   122                                  ;     call draw_dot
   123                                  ;     or al,al
   124                                  ;     jns .draw_blue_green  ; check sign bit for negative number
   125                                  ;     mov al,0         ; clear dot on blue and green channel
   126                                  ; .draw_blue_green:
   127                                  ;     neg al
   128                                  ;     mov bx,0xf400    ; blue
   129                                  ;     call draw_dot
   130                                  ;     mov bx,0x0c00    ; green
   131                                  ;     call draw_dot
   132                                  ;     ret
   133                                  
   134                                  ; draw_dot:
   135                                  ;     push di
   136                                  ;     push ax
   137                                  ;     push cx
   138                                  ;     mov ah,al    
   139                                  ;     or al,al
   140                                  ;     jns .positive
   141                                  ;     neg al
   142                                  ; .positive:
   143                                  ;     mov es,bx    ; vram
   144                                  ;     and al,15    ; limit to 15 (4 bits)
   145                                  ;     mov cl,8
   146                                  ;     mul cl    ; ax=al*8
   147                                  ;     mov si,ax
   148                                  ;     add si,img
   149                                  ;     times 4 cs movsw
   150                                  ;     add di,(4*cols)-8
   151                                  ;     mov si,ax
   152                                  ;     add si,img+128
   153                                  ;     times 4 cs movsw
   154                                  ;     pop cx
   155                                  ;     pop ax
   156                                  ;     pop di
   157                                  ;     ret
   158                                  
   159                                  ; table: db fx0
   160                                  
   161                                  ; sin:
   162                                  ;     db 0x00,0x01,0x03,0x04,0x06,0x07,0x09,0x0A,0x0B,0x0C,0x0D,0x0E,0x0E,0x0F,0x0F,0x0F
   163                                  ;     db 0x0F,0x0F,0x0F,0x0F,0x0E,0x0E,0x0D,0x0C,0x0B,0x0A,0x09,0x07,0x06,0x04,0x03,0x01
   164                                  ;     db 0x00,0xFF,0xFD,0xFC,0xFA,0xF9,0xF7,0xF6,0xF5,0xF4,0xF3,0xF2,0xF2,0xF1,0xF1,0xF1
   165                                  ;     db 0xF1,0xF1,0xF1,0xF1,0xF2,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF9,0xFA,0xFC,0xFD,0xFF
   166                                  
   167                                  ; img:
   168                                  ;     db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80
   169                                  ;     db 0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xC0
   170                                  ;     db 0x00,0x00,0x00,0x03,0x00,0x00,0x80,0xE0,0x00,0x00,0x00,0x03,0x00,0x00,0x80,0xE0
   171                                  ;     db 0x00,0x00,0x03,0x07,0x00,0x00,0xE0,0xF0,0x00,0x00,0x03,0x07,0x00,0x00,0xE0,0xF0
   172                                  ;     db 0x00,0x00,0x07,0x0F,0x00,0x80,0xF0,0xF8,0x00,0x00,0x07,0x0F,0x00,0x80,0xF0,0xF8
   173                                  ;     db 0x00,0x03,0x0F,0x1F,0x00,0xE0,0xF8,0xFC,0x00,0x07,0x1F,0x1F,0x00,0xF0,0xFC,0xFC
   174                                  ;     db 0x00,0x0F,0x1F,0x3F,0x80,0xF8,0xFC,0xFE,0x00,0x0F,0x3F,0x3F,0x80,0xF8,0xFE,0xFE
   175                                  ;     db 0x07,0x1F,0x3F,0x7F,0xF0,0xFC,0xFE,0xFF,0x07,0x3F,0x7F,0x7F,0xF0,0xFE,0xFF,0xFF
   176                                  ;     db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
   177                                  ;     db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
   178                                  ;     db 0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00
   179                                  ;     db 0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00
   180                                  ;     db 0x07,0x00,0x00,0x00,0xF0,0x80,0x00,0x00,0x07,0x00,0x00,0x00,0xF0,0x80,0x00,0x00
   181                                  ;     db 0x0F,0x03,0x00,0x00,0xF8,0xE0,0x00,0x00,0x1F,0x07,0x00,0x00,0xFC,0xF0,0x00,0x00
   182                                  ;     db 0x1F,0x0F,0x00,0x00,0xFC,0xF8,0x80,0x00,0x3F,0x0F,0x00,0x00,0xFE,0xF8,0x80,0x00
   183                                  ;     db 0x3F,0x1F,0x07,0x00,0xFE,0xFC,0xF0,0x00,0x7F,0x3F,0x07,0x00,0xFF,0xFE,0xF0,0x00
   184                                  
   185                                  
   186                                  ; %include "lib.asm"
   187 00000000 <bin 5A000h>            incbin "Sanyo-MS-DOS-2.11-minimal.img",($-$$)  ; include default disk image skipping first 512 bytes
   188                                  
