     1                                  ; t: db 0
     2                                  ; i: db 0
     3                                  ; x: db 0
     4                                  ; y: db 0
     5                                  ; db t,i,x,y
     6                                  
     7                                  RED equ 0xf000
     8                                  GREEN equ 0x0c00
     9                                  BLUE equ 0xf400
    10                                  
    11                                  setup:
    12 00000000 E83E00                      call cls
    13                                  
    14                                      ; call render_chars
    15                                  
    16                                  
    17 00000003 B800F0                      mov ax,RED
    18 00000006 50                          push ax
    19 00000007 07                          pop es
    20 00000008 0E                          push cs
    21 00000009 1F                          pop ds
    22                                  
    23                                      ; mov si,img2
    24                                      ; mov di,0
    25                                  
    26                                      ; mov cx,16*16
    27                                      ; rep movsb
    28                                  
    29 0000000A F4                          hlt
    30                                  
    31                                  
    32 0000000B B600                        mov dh,0          ; t
    33                                  draw:
    34 0000000D B200                        mov dl,0          ; i
    35 0000000F B300                        mov bl,0          ; y
    36 00000011 BF8002                      mov di,640        ; top left offset  keep 1st 8 lines safe for now
    37                                      ; mov si,img
    38                                  y:
    39 00000014 B700                        mov bh,0
    40                                  x:
    41                                  
    42                                      ; mov al,1
    43                                      ; and al,15
    44                                      ; cbw                ;ah=0
    45                                      ; xchg si,ax
    46                                  
    47                                      ; mov cl,4
    48                                      ; shl si,cl
    49                                      ; add si,0
    50                                  
    51 00000016 BE0000                      mov si,0    ; steps of 16 (4 nibbles * 4 lines)
    52                                  
    53 00000019 FEC1                        inc cl
    54 0000001B F3A5                        rep movsw
    55 0000001D 57                          push di
    56 0000001E 56                          push si
    57 0000001F 81C73801                    add di,320-8
    58                                      ; add si,320-8
    59 00000023 B104                        mov cl,4
    60 00000025 F3A5                        rep movsw
    61 00000027 5E                          pop si
    62 00000028 5F                          pop di
    63                                      
    64 00000029 FEC2                        inc dl            ; i++
    65 0000002B FEC7                        inc bh            ; x++
    66 0000002D 80FF10                      cmp bh,16
    67 00000030 7CE4                        jl x
    68                                  
    69                                      ; add di,4
    70 00000032 81C70002                    add di,192+320    ; next row
    71 00000036 FEC3                        inc bl            ; y++
    72 00000038 80FB10                      cmp bl,16
    73 0000003B 7CD7                        jl y
    74                                  
    75 0000003D FEC6                        inc dh            ; t++
    76 0000003F EBCC                        jmp draw          ; next frame
    77                                  
    78                                  
    79                                  cls:
    80 00000041 B8000C                      mov ax,GREEN
    81 00000044 B90040                      mov cx,0x4000                        ; =16k
    82 00000047 31FF                        xor di,di
    83 00000049 8EC0                        mov es,ax                            ; es=GREEN
    84 0000004B F3AA                        rep stosb                        
    85 0000004D B4F0                        mov ah,0xf0                          ; ax=RED
    86 0000004F 8EC0                        mov es,ax                            ; red + blue 
    87 00000051 31FF                        xor di,di
    88 00000053 B580                        mov ch,0x80                          ; cx=32k
    89 00000055 F3AA                        rep stosb
    90 00000057 C3                          ret
    91                                  
    92                                  ; TODO 'render' chars to mem and draw/stamp from mem
    93                                  render_chars:
    94                                      ; push cs
    95 00000058 0E                          push cs
    96 00000059 1F                          pop ds
    97                                      ; pop es
    98                                  
    99 0000005A B800F0                      mov ax,RED
   100 0000005D 8EC0                        mov es,ax
   101                                  
   102 0000005F BF0000                      mov di,0          ; dest address of render data
   103 00000062 BE[BD00]                    mov si,img
   104 00000065 B700                        mov bh,0
   105                                  render16:
   106 00000067 B400                        mov ah,0
   107 00000069 88F8                        mov al,bh
   108 0000006B B104                        mov cl,4
   109 0000006D F6E1                        mul cl
   110 0000006F 89C6                        mov si,ax
   111 00000071 81C6[BD00]                  add si,img
   112                                  
   113                                      ; now draw from the location where rendered to
   114 00000075 E80B00                      call render_char   ; input cl=4
   115                                  
   116 00000078 83C70C                      add di,4*3          ; next col
   117 0000007B FEC7                        inc bh            ; x++
   118 0000007D 80FF10                      cmp bh,16
   119 00000080 7CE5                        jl render16
   120 00000082 C3                          ret
   121                                  
   122                                      ; mov cl,4    is already 4 from mul above            ; char is 4 nibbles
   123                                  render_char:
   124 00000083 AC                          lodsb                   ; use lodsb instead of movsb to keep a copy in al
   125 00000084 AA                          stosb                   ; draw in left top nibble
   126 00000085 53                          push bx                 ; save cur x and y
   127 00000086 51                          push cx                 ; cur loop counter (4,3,2,1)
   128 00000087 51                          push cx
   129 00000088 5B                          pop bx                  ; bx = counter
   130 00000089 D1E3                        shl bx,1                ; bx *= 2
   131 0000008B 53                          push bx                 ; save counter*2 for right bottom
   132                                      
   133 0000008C 83FB02                      cmp bx,2                ; skip top line of left bottom nibble
   134 0000008F 7404                        je .j1
   135 00000091 26884101                    es mov [di+bx+8-7],al ; draw in left bottom starting at line 3 instead of 4
   136                                  .j1:
   137                                  
   138                                  .flip_bits:                 ; flips all bits dropping highest bit
   139 00000095 B108                        mov cl,8                ; 8 bits to flip
   140 00000097 B400                        mov ah,0
   141                                  .bit:
   142 00000099 BB0180                      mov bx,0x8001           ; bl=1, bh=128  bl doubles, bh halves
   143 0000009C D2E3                        shl bl,cl
   144 0000009E 84D8                        test al,bl
   145 000000A0 7406                        jz .next
   146 000000A2 49                          dec cx
   147 000000A3 D2EF                        shr bh,cl
   148 000000A5 08FC                        or ah,bh
   149 000000A7 41                          inc cx
   150                                  .next:
   151 000000A8 E2EF                        loop .bit               ; loop 8 bits for flipping
   152                                  
   153 000000AA 26886503                    es mov [di+3],ah        ; draw in right top nibble
   154 000000AE 5B                          pop bx                  ; bx = counter*2
   155                                      
   156 000000AF 83FB02                      cmp bx,2                ; skip top line of right bottom nibble
   157 000000B2 7404                        je .j2
   158 000000B4 26886105                    es mov [di+bx+8-3],ah ; draw in right bottom starting at line 3 instead of 4
   159                                  .j2:
   160 000000B8 59                          pop cx                  ; restore loop counter
   161 000000B9 5B                          pop bx                  ; restore x and y
   162                                  
   163 000000BA E2C7                        loop render_char
   164 000000BC C3                          ret
   165                                  
   166                                  img:
   167 000000BD 00000000                    db 0, 0, 0, 0                        ; empty
   168 000000C1 00000001                    db 0, 0, 0, 1                        ; dot
   169 000000C5 00000003                    db 0, 0, 0, 3                        ; minus
   170 000000C9 00000103                    db 0, 0, 1, 3                        ; plus
   171 000000CD 00000307                    db 0, 0, 3, 7                        ; hat
   172 000000D1 00000707                    db 0, 0, 7, 7                        ; block
   173 000000D5 0001070F                    db 0, 1, 7, 15                       ; star
   174 000000D9 00030F0F                    db 0, 3, 15, 15                      ; fat plus
   175 000000DD 000F1F3F                    db 0, 15, 31, 63                   
   176 000000E1 011F3F3F                    db 1, 31, 63, 63                     ; tol
   177 000000E5 071F1F3F                    db 7, 31, 31, 63                     ; robot head
   178 000000E9 0F1F3F3F                    db 15, 31, 63, 63
   179 000000ED 0F3F3F7F                    db 15, 63, 63, 127
   180 000000F1 1F3F7F7F                    db 31, 63, 127, 127
   181 000000F5 1F7FFFFF                    db 31, 127, 255, 255
   182 000000F9 3F7FFFFF                    db 63, 127, 255, 255
   183                                  
   184                                      %assign num $-render_char
   185                                      %warning render and img num bytes
   185          ******************       warning: render and img 122 bytes [-w+user]
   186                                  
   187                                  img2:
   188 000000FD 000000000000000000-         db 0,0,0,0,  0,0,0,0,  0,0,0,0,  0,0,0,128
   188 00000106 00000000000080     
   189 0000010D 00000001000000C000-         db 0,0,0,1,  0,0,0,192,  0,0,0,1,  0,0,0,192
   189 00000116 000001000000C0     
   190 0000011D 00000003000080E000-         db 0,0,0,3,  0,0,128,224,  0,0,0,3,  0,0,128,224
   190 00000126 000003000080E0     
   191 0000012D 000003070000E0F000-         db 0,0,3,7,  0,0,224,240,  0,0,3,7,  0,0,224,240
   191 00000136 0003070000E0F0     
   192 0000013D 0000070F0080F0F800-         db 0,0,7,15,  0,128,240,248,  0,0,7,15,  0,128,240,248
   192 00000146 00070F0080F0F8     
   193 0000014D 00030F1F00E0F8FC00-         db 0,3,15,31,  0,224,248,252,  0,7,31,31,  0,240,252,252
   193 00000156 071F1F00F0FCFC     
   194 0000015D 000F1F3F80F8FCFE00-         db 0,15,31,63,  128,248,252,254,  0,15,63,63,  128,248,254,254
   194 00000166 0F3F3F80F8FEFE     
   195 0000016D 071F3F7FF0FCFEFF07-         db 7,31,63,127, 240,252,254,255, 7,63,127,127, 240,254,255,255
   195 00000176 3F7F7FF0FEFFFF     
   196 0000017D 000000000000000000-         db 0,0,0,0,  0,0,0,0,  0,0,0,0,  0,0,0,0
   196 00000186 00000000000000     
   197 0000018D 000000000000000000-         db 0,0,0,0,  0,0,0,0,  0,0,0,0,  0,0,0,0
   197 00000196 00000000000000     
   198 0000019D 000000008000000000-         db 0,0,0,0,  128,0,0,0,  0,0,0,0,  128,0,0,0
   198 000001A6 00000080000000     
   199 000001AD 03000000E000000003-         db 3,0,0,0,  224,0,0,0,  3,0,0,0,  224,0,0,0
   199 000001B6 000000E0000000     
   200 000001BD 07000000F080000007-         db 7,0,0,0,  240,128,0,0,  7,0,0,0,  240,128,0,0
   200 000001C6 000000F0800000     
   201 000001CD 0F030000F8E000001F-         db 15,3,0,0,  248,224,0,0,  31,7,0,0,  252,240,0,0
   201 000001D6 070000FCF00000     
   202 000001DD 1F0F0000FCF880003F-         db 31,15,0,0,  252,248,128,0,  63,15,0,0,  254,248,128,0
   202 000001E6 0F0000FEF88000     
   203 000001ED 3F1F0700FEFCF0007F-         db 63,31,7,0,  254,252,240,0,  127,63,7,0,  255,254,240,0
   203 000001F6 3F0700FFFEF000     
   204                                  
   205                                  
   206                                  end:
   207 000001FD FF<rep 7D0h>                times 2000 db 255
   208                                  
   209                                      ; db 0,0,0,0,0,0,0,0
   210                                      ; db 0,0,0,1,0,0,0,0
   211                                      ; db 0,0,0,3,0,0,0,128
   212                                      ; db 0,0,1,3,0,0,0,128
   213                                      ; db 0,0,3,7,0,0,128,192
   214                                      ; db 0,0,7,7,0,0,192,192
   215                                      ; db 0,1,7,15,0,0,192,224
   216                                      ; db 0,3,15,15,0,128,224,224
   217                                      ; db 0,15,31,63,0,224,240,248
   218                                      ; db 1,31,63,63,0,240,248,248
   219                                      ; db 7,31,31,63,192,240,240,248
   220                                      ; db 15,31,63,63,224,240,248,248
   221                                      ; db 15,63,63,127,224,248,248,252
   222                                      ; db 31,63,127,127,240,248,252,252
   223                                      ; db 31,127,255,255,240,252,254,254
   224                                      ; db 63,127,255,255,248,252,254,254
   225                                  
   226                                      ; dit zijn mijn originele dots. die hierboven zijn symmetrischer
   227                                      ; db 0,0,0,0,  0,0,0,0, 
   228                                      ; db 0,0,0,0,  0,0,0,128
   229                                      ; db 0,0,0,1,  0,0,0,192,  
   230                                      ; db 0,0,0,1,  0,0,0,192
   231                                      ; db 0,0,0,3,  0,0,128,224,  
   232                                      ; db 0,0,0,3,  0,0,128,224
   233                                      ; db 0,0,3,7,  0,0,224,240,  
   234                                      ; db 0,0,3,7,  0,0,224,240
   235                                      ; db 0,0,7,15,  0,128,240,248,  
   236                                      ; db 0,0,7,15,  0,128,240,248
   237                                      ; db 0,3,15,31,  0,224,248,252,  
   238                                      ; db 0,7,31,31,  0,240,252,252
   239                                      ; db 0,15,31,63,  128,248,252,254,  
   240                                      ; db 0,15,63,63,  128,248,254,254
   241                                      ; db 7,31,63,127, 240,252,254,255, 
   242                                      ; db 7,63,127,127, 240,254,255,255
   243                                  ;
   244                                  
   245                                  %assign num $-$$
   246                                  %warning total num
   246          ******************       warning: total 2509 [-w+user]
