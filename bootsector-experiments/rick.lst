     1                                  ; Rick Companje, March 29th, 2022
     2                                  cpu 8086
     3                                  org 0x100
     4                                  
     5 00000000 CD20                    int 0x20
     6                                  
     7                                  
     8                                      ; jmp code
     9                                  
    10                                  ;     db 'Sanyo1.2'
    11                                  ;     db 0x00,0x02,0x02,0x01,0x00,0x02,0x70,0x00,
    12                                  ;     db 0xd0,0x02,0xfd,0x02,0x00,0x09,0x00,0x02,
    13                                  ;     db 0x00,0x00,0x00,0x00,0x00,0x1c,0x00,0xff,
    14                                  ;     db '       Sanyo MBC-550/555        ',0x00
    15                                  
    16                                  ; cols equ 72
    17                                  ; startpos equ 4*24 + 4*cols*8
    18                                  
    19                                  
    20                                  ; setProfile:
    21                                  ;     mov bx,0
    22                                  ;     cld
    23                                  ; .lp:
    24                                  ;     mov al,bl
    25                                  ;     out 0x30,al            ;CRTC address port
    26                                  ;     mov al,[cs: bx+si+0]
    27                                  ;     out 0x32,al            ;CRTC data port
    28                                  ;     inc bx
    29                                  ;     cmp bl,10
    30                                  ;     jl .lp
    31                                  ;     ret
    32                                  
    33                                  ; profile25x80:
    34                                  ;     db 112  ;0  Horizontal Total
    35                                  ;     db 80   ;1  Horizontal Displayed
    36                                  ;     db 88   ;2  Horizontal Sync Position
    37                                  ;     db 0x4a ;3  Horizontal and Vertical Sync Widths
    38                                  ;     db 65   ;4  Vertical Total
    39                                  ;     db 0    ;5  Vertical Total Adjust
    40                                  ;     db 50   ;6  Vertical Displayed
    41                                  ;     db 56   ;7  Vertical Sync position
    42                                  ;     db 0    ;8  Interlace and Skew
    43                                  ;     db 3    ;9  Maximum Raster Address
    44                                  
    45                                  
    46                                  ; clearScreen:
    47                                  ;     cld
    48                                  ;     mov ax,0x5555  ; bitmap pattern
    49                                  ;     mov bp,0xf000  ; red + blue
    50                                  ;     mov es,bp
    51                                  ;     mov di,0
    52                                  ;     mov cx,0x4000
    53                                  ;     rep stosw
    54                                  ;     mov bp,0x0c00  ; green
    55                                  ;     mov es,bp
    56                                  ;     mov di,0
    57                                  ;     mov cx,0x2000
    58                                  ;     rep stosw
    59                                  ;     ret
    60                                  
    61                                  ; code:  
    62                                  ;     ; call setDisplayMode80x25
    63                                  ;     ; mov si,profile25x80
    64                                  ;     ; call setProfile
    65                                  ;     call clearScreen
    66                                  
    67                                  ; ; _loop:
    68                                  ; ;     jmp _loop
    69                                  
    70                                  ;     ; push cs
    71                                  ;     ; pop ds              ; data=code segment
    72                                  
    73                                  ; draw:
    74                                  ;     mov ch,0            ; t
    75                                  ; top:
    76                                  ;     mov cl,0            ; i
    77                                  ;     mov di,startpos
    78                                  ;     mov dh,0            ; y           
    79                                  ; repeatY:
    80                                  ;     mov dl,0            ; x
    81                                  ; repeatX:
    82                                  ;     ; push bx
    83                                  ;     ; cs call fx0
    84                                  ;     ; mov al,dh
    85                                      
    86                                  ;     ; pop bx
    87                                  
    88                                  ;     mov al,15
    89                                  ;     add al,ch
    90                                  
    91                                  ;     ; mov al,ch           ; t
    92                                  ;     ; times 2 shr al,1    ; /=2
    93                                  ;     ; and al,15           ; wrap (werkt dit ook voor negatieve getallen?)
    94                                  ;     ; times 2 shl al,1    ; *=4
    95                                  ;     ; mov bx,sin
    96                                  ;     ; cs xlat                ; extract sin value
    97                                  
    98                                  ;     call draw_dot_color
    99                                  ;     inc dl              ; x
   100                                  ;     inc cl              ; i
   101                                  ;     add di,8
   102                                  ;     cmp dl,16
   103                                  ;     jl repeatX
   104                                  ;     mov dl,0
   105                                  ;     add di,(cols-16)*8    ; skip remaining cols
   106                                  ;     inc dh
   107                                  ;     cmp dh,16
   108                                  ;     jl repeatY
   109                                  ;     inc ch              ; t
   110                                  ;     jmp top
   111                                  
   112                                  
   113                                  
   114                                  ; fx0:
   115                                  ;     mov al,ch           ; t
   116                                  ;     times 2 shr al,1    ; /=2
   117                                  ;     and al,15           ; wrap (werkt dit ook voor negatieve getallen?)
   118                                  ;     times 2 shl al,1    ; *=4
   119                                  ;     mov bx,sin
   120                                  ;     cs xlat                ; extract sin value
   121                                  ;     ret
   122                                  
   123                                  ; draw_dot_color:
   124                                  ;     mov bx,0xf000    ; red
   125                                  ;     call draw_dot
   126                                  ;     or al,al
   127                                  ;     jns .draw_blue_green  ; check sign bit for negative number
   128                                  ;     mov al,0         ; clear dot on blue and green channel
   129                                  ; .draw_blue_green:
   130                                  ;     neg al
   131                                  ;     mov bx,0xf400    ; blue
   132                                  ;     call draw_dot
   133                                  ;     mov bx,0x0c00    ; green
   134                                  ;     call draw_dot
   135                                  ;     ret
   136                                  
   137                                  ; draw_dot:
   138                                  ;     push di
   139                                  ;     push ax
   140                                  ;     push cx
   141                                  ;     mov ah,al    
   142                                  ;     or al,al
   143                                  ;     jns .positive
   144                                  ;     neg al
   145                                  ; .positive:
   146                                  ;     mov es,bx    ; vram
   147                                  ;     and al,15    ; limit to 15 (4 bits)
   148                                  ;     mov cl,8
   149                                  ;     mul cl    ; ax=al*8
   150                                  ;     mov si,ax
   151                                  ;     add si,img
   152                                  ;     times 4 cs movsw
   153                                  ;     add di,(4*cols)-8
   154                                  ;     mov si,ax
   155                                  ;     add si,img+128
   156                                  ;     times 4 cs movsw
   157                                  ;     pop cx
   158                                  ;     pop ax
   159                                  ;     pop di
   160                                  ;     ret
   161                                  
   162                                  ; table: db fx0
   163                                  
   164                                  ; sin:
   165                                  ;     db 0x00,0x01,0x03,0x04,0x06,0x07,0x09,0x0A,0x0B,0x0C,0x0D,0x0E,0x0E,0x0F,0x0F,0x0F
   166                                  ;     db 0x0F,0x0F,0x0F,0x0F,0x0E,0x0E,0x0D,0x0C,0x0B,0x0A,0x09,0x07,0x06,0x04,0x03,0x01
   167                                  ;     db 0x00,0xFF,0xFD,0xFC,0xFA,0xF9,0xF7,0xF6,0xF5,0xF4,0xF3,0xF2,0xF2,0xF1,0xF1,0xF1
   168                                  ;     db 0xF1,0xF1,0xF1,0xF1,0xF2,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF9,0xFA,0xFC,0xFD,0xFF
   169                                  
   170                                  ; img:
   171                                  ;     db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80
   172                                  ;     db 0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xC0
   173                                  ;     db 0x00,0x00,0x00,0x03,0x00,0x00,0x80,0xE0,0x00,0x00,0x00,0x03,0x00,0x00,0x80,0xE0
   174                                  ;     db 0x00,0x00,0x03,0x07,0x00,0x00,0xE0,0xF0,0x00,0x00,0x03,0x07,0x00,0x00,0xE0,0xF0
   175                                  ;     db 0x00,0x00,0x07,0x0F,0x00,0x80,0xF0,0xF8,0x00,0x00,0x07,0x0F,0x00,0x80,0xF0,0xF8
   176                                  ;     db 0x00,0x03,0x0F,0x1F,0x00,0xE0,0xF8,0xFC,0x00,0x07,0x1F,0x1F,0x00,0xF0,0xFC,0xFC
   177                                  ;     db 0x00,0x0F,0x1F,0x3F,0x80,0xF8,0xFC,0xFE,0x00,0x0F,0x3F,0x3F,0x80,0xF8,0xFE,0xFE
   178                                  ;     db 0x07,0x1F,0x3F,0x7F,0xF0,0xFC,0xFE,0xFF,0x07,0x3F,0x7F,0x7F,0xF0,0xFE,0xFF,0xFF
   179                                  ;     db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
   180                                  ;     db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
   181                                  ;     db 0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00
   182                                  ;     db 0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00
   183                                  ;     db 0x07,0x00,0x00,0x00,0xF0,0x80,0x00,0x00,0x07,0x00,0x00,0x00,0xF0,0x80,0x00,0x00
   184                                  ;     db 0x0F,0x03,0x00,0x00,0xF8,0xE0,0x00,0x00,0x1F,0x07,0x00,0x00,0xFC,0xF0,0x00,0x00
   185                                  ;     db 0x1F,0x0F,0x00,0x00,0xFC,0xF8,0x80,0x00,0x3F,0x0F,0x00,0x00,0xFE,0xF8,0x80,0x00
   186                                  ;     db 0x3F,0x1F,0x07,0x00,0xFE,0xFC,0xF0,0x00,0x7F,0x3F,0x07,0x00,0xFF,0xFE,0xF0,0x00
   187                                  
   188                                  
   189                                  ; ; %include "lib.asm"
   190                                  ; incbin "Sanyo-MS-DOS-2.11-minimal.img",($-$$)  ; include default disk image skipping first 512 bytes
   191                                  
