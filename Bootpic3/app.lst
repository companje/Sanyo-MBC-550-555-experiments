     1                                  %include "sanyo.asm"
     1                              <1> org 0
     2                              <1> cpu 8086
     3                              <1> 
     4                              <1> RED   equ 0xf000
     5                              <1> GREEN equ 0x1c00
     6                              <1> BLUE  equ 0xf400
     7                              <1> COLS  equ 72
     8                              <1> DST   equ 0x38                ; absolute addres: 32592
     9                              <1> NUM_SECTORS equ 72
    10                              <1> XD    equ 4
    11                              <1> YD    equ COLS*XD
    12                              <1> 
    13 00000000 EB00                <1> jmp bootloader
    14                              <1> 
    15                              <1> ; db 'RickyboyII',1,0,0,2,112,0,0,0,2,0,253,2,0,9,0,2,0  ; 2,0, is replaced by II
    16                              <1> 
    17                              <1> bootloader:
    18 00000002 FA                  <1>   cli
    19 00000003 FC                  <1>   cld
    20                              <1> 
    21 00000004 B8001C              <1>   mov ax, GREEN     ; green segment
    22 00000007 8EC0                <1>   mov es, ax
    23 00000009 BF0000              <1>   mov di, 0
    24 0000000C B80000              <1>   mov ax, 0
    25 0000000F B90020              <1>   mov cx, 2000h
    26 00000012 F3AB                <1>   rep stosw         ; clear screen
    27 00000014 B005                <1>   mov al, 5
    28 00000016 E610                <1>   out 10h, al       ; set green video page
    29                              <1>   
    30                              <1>   ; hlt
    31                              <1> 
    32 00000018 8CC8                <1>   mov ax, cs
    33 0000001A 8ED8                <1>   mov ds, ax
    34 0000001C B83800              <1>   mov ax, DST       ; was 7F5h, destination segment for floppy data
    35 0000001F 8EC0                <1>   mov es, ax
    36 00000021 BF0000              <1>   mov di, 0
    37                              <1> 
    38 00000024 B200                <1>   mov dl, 0         ; track=0 (was 1!)
    39 00000026 B601                <1>   mov dh, 1         ; sector=1
    40 00000028 B94800              <1>   mov cx, NUM_SECTORS ;48h       ; read 48h (72) sectors (36864 bytes)
    41 0000002B EB0B                <1>   jmp move_head
    42                              <1> 
    43                              <1> next_sector:
    44 0000002D FEC6                <1>   inc dh                    ; sector++
    45 0000002F 80FE0A              <1>   cmp dh, 10
    46 00000032 7218                <1>   jb  read_sector           ; if (dh<9) read_sector
    47 00000034 B601                <1>   mov dh, 1
    48 00000036 FEC2                <1>   inc dl                    ; else track++ ; sector=1
    49                              <1> 
    50                              <1> move_head:
    51 00000038 88D0                <1>   mov al, dl
    52 0000003A E60E                <1>   out 0Eh, al               ; set track number
    53 0000003C B018                <1>   mov al, 18h     
    54 0000003E E608                <1>   out 8, al                 ; seek track, load head
    55 00000040 B000                <1>   mov al, 0
    56 00000042 E61C                <1>   out 1Ch, al               ; set desired drive/side
    57 00000044 D40A                <1>   aam
    58                              <1> 
    59                              <1> .head_moving
    60 00000046 E408                <1>   in  al, 8
    61 00000048 A801                <1>   test al, 1
    62 0000004A 75FA                <1>   jnz .head_moving
    63                              <1> 
    64                              <1> read_sector:
    65 0000004C 88F0                <1>   mov al, dh
    66 0000004E E60C                <1>   out 0Ch, al               ; sector number
    67                              <1>   ; mov bp, dx                ; save dx. we use it tmp for status request
    68                              <1>   ; mov dx, 8
    69                              <1> 
    70 00000050 B702                <1>   mov bh, 2                 ; 00000010b
    71 00000052 B396                <1>   mov bl, 96h               ; 10010110b
    72                              <1> 
    73 00000054 B400                <1>   mov ah, 0
    74 00000056 B080                <1>   mov al, 80h
    75 00000058 E608                <1>   out 8, al                 ; read sector
    76 0000005A 89FC                <1>   mov sp, di                ; save di. we should not be using push/pop from now on
    77 0000005C D40A<rep 4h>        <1>   times 4 aam               ; wait
    78                              <1> 
    79                              <1> check_status_1:
    80 00000064 E408                <1>   in  al, 8                ; read status
    81 00000066 D0F8                <1>   sar al, 1                 ; status/=2
    82 00000068 731F                <1>   jnb check_status_3
    83 0000006A 75F8                <1>   jnz check_status_1
    84                              <1> 
    85                              <1> wait_for_data:
    86 0000006C E408                <1>   in  al, 8                ; read status
    87 0000006E 20D8                <1>   and al, bl                ; 96h
    88 00000070 74FA                <1>   jz  wait_for_data
    89                              <1> 
    90                              <1> store_byte_1:
    91 00000072 E40E                <1>   in  al, 0Eh
    92 00000074 AA                  <1>   stosb
    93                              <1> 
    94                              <1> check_status_2:
    95 00000075 E408                <1>   in  al, 8                ; read status
    96 00000077 48                  <1>   dec ax                    ; status--
    97 00000078 74FB                <1>   jz  check_status_2        ; if (status==0) repeat
    98 0000007A 38F8                <1>   cmp al, bh                ; bh=2
    99 0000007C 750B                <1>   jnz check_status_3        ; if (status==1) 
   100                              <1> 
   101                              <1> store_byte_2:
   102 0000007E E40E                <1>   in  al, 0Eh
   103 00000080 AA                  <1>   stosb
   104                              <1> 
   105                              <1> check_status_4:
   106 00000081 E408                <1>   in  al, 8                ; read status
   107 00000083 38F8                <1>   cmp al, bh                ; bh=2
   108 00000085 74F7                <1>   jz  store_byte_2          ; if (status==2) repeat
   109 00000087 EBEC                <1>   jmp check_status_2        ; else: was jmp SI
   110                              <1> 
   111                              <1> ; ───────────────────────────────────────────────────────────────────────────
   112                              <1> 
   113                              <1> check_status_3:
   114 00000089 E408                <1>   in  al, 8                ; read status
   115                              <1>   ; mov dx, bp                ; restore dx
   116 0000008B A81C                <1>   test  al, 1Ch             ; 00011100
   117 0000008D 7402                <1>   jz  while_sectors
   118                              <1>   ; mov di, sp                ; restore di
   119 0000008F EBBB                <1>   jmp read_sector
   120                              <1> 
   121                              <1> ; ───────────────────────────────────────────────────────────────────────────
   122                              <1> 
   123                              <1> while_sectors:
   124 00000091 E29A                <1>   loop next_sector
   125                              <1> 
   126                              <1> done_reading:
   127                              <1>   ; mov ax,0
   128                              <1>   ; mov ss,ax
   129                              <1>   ; mov sp,0
   130                              <1> 
   131                              <1>   ; push cs
   132                              <1>   ; pop ds
   133 00000093 E96F01              <1>   jmp setup                 ; important to jmp to allow variables above setup
   134                              <1>   ; hlt
   135                              <1> 
   136                              <1> 
   137 00000096 00<rep 16Ah>        <1> times (512)-($-$$) db 0
   138                              <1> 
     2                                  
     3                                  W equ 72
     4                                  H equ 50
     5 00000200 00                      x: db 0
     6 00000201 00                      y: db 0
     7 00000202 48                      w: db W
     8 00000203 32                      h: db H
     9                                  
    10 00000204 00                      db 0
    11                                  
    12                                  setup:
    13 00000205 BE[6702]                  mov si,img.keylock    ; first image
    14 00000208 31DB                      xor bx,bx
    15                                  
    16                                  repeat:
    17 0000020A 53                        push bx
    18 0000020B E81B00                    call calc_di
    19 0000020E B704                      mov bh,4              ; width in cols (1 col = 8px)
    20 00000210 B304                      mov bl,4              ; height in rows (1 row = 4px)
    21 00000212 E82600                    call draw_pic
    22 00000215 5B                        pop bx
    23 00000216 80C304                    add bl,4
    24 00000219 80FB20                    cmp bl,4*8
    25 0000021C 7CEC                      jl repeat
    26 0000021E B300                      mov bl,0
    27 00000220 80C704                    add bh,4
    28 00000223 80FF30                    cmp bh,4*12
    29 00000226 7CE2                      jl repeat
    30                                  
    31                                    
    32 00000228 F4                        hlt
    33                                  
    34                                  calc_di:          ; input bl,bh [0,0,71,49]
    35 00000229 B89000                    mov ax,144      ; 2*72 cols
    36 0000022C F6E7                      mul bh          ; bh*=144 resultaat in AX
    37 0000022E D1E0                      shl ax,1        ; verdubbel AX
    38 00000230 89C7                      mov di,ax       ; di=ax (=bh*288)
    39 00000232 D0E3                      shl bl,1        ; bl*=2
    40 00000234 D0E3                      shl bl,1        ; bl*=2
    41 00000236 B700                      mov bh,0
    42 00000238 01DF                      add di,bx       ; di+=bl
    43 0000023A C3                        ret
    44                                  
    45                                  draw_pic:          ; DI=offset, [BH,BL]=rows,cols
    46 0000023B B800F0                    mov ax, RED
    47 0000023E E80D00                    call draw_channel
    48 00000241 B8001C                    mov ax, GREEN
    49 00000244 E80700                    call draw_channel
    50 00000247 B800F4                    mov ax, BLUE
    51 0000024A E80100                    call draw_channel
    52 0000024D C3                        ret
    53                                  
    54                                  draw_channel: 
    55 0000024E 57                        push di
    56 0000024F 8EC0                      mov es,ax
    57 00000251 31C9                      xor cx,cx  
    58 00000253 88F9                      mov cl,bh        ; rows (bh)
    59 00000255 51                      .rows push cx
    60 00000256 31C9                      xor cx,cx
    61 00000258 88D9                      mov cl,bl        ; cols (bl)
    62 0000025A A5<rep 2h>              .cols times 2 movsw
    63 0000025C E2FC                      loop .cols
    64 0000025E 81C71001                  add di,COLS*4-4*4
    65 00000262 59                        pop cx
    66 00000263 E2F0                      loop .rows
    67 00000265 5F                        pop di
    68 00000266 C3                        ret 
    69                                  
    70                                  
    71                                  
    72                                  ; segment data
    73                                  
    74                                  ; times (1000)-($-$$) db 0
    75                                  
    76                                  ; SECTION Assets
    77                                  
    78                                  startAssets:
    79                                  img:
    80 00000267 <bin C0h>                 .keylock incbin "data/keylock.bin"
    81 00000327 <bin C0h>                 .key incbin "data/key.bin"
    82 000003E7 <bin C0h>                 .owl incbin "data/owl.bin"
    83 000004A7 <bin C0h>                 .crown incbin "data/crown.bin"
    84 00000567 <bin C0h>                 .goblet incbin "data/goblet.bin"
    85 00000627 <bin C0h>                 .ring incbin "data/ring.bin"
    86 000006E7 <bin C0h>                 .globe incbin "data/globe.bin"
    87 000007A7 <bin C0h>                 .feather incbin "data/feather.bin"
    88 00000867 <bin C0h>                 .totum incbin "data/totum.bin"
    89 00000927 <bin C0h>                 .scroll incbin "data/scroll.bin"
    90 000009E7 <bin C0h>                 .building incbin "data/building.bin"
    91 00000AA7 <bin C0h>                 .mirror incbin "data/mirror.bin"
    92 00000B67 <bin C0h>                 .harp incbin "data/harp.bin"
    93 00000C27 <bin C0h>                 .nar incbin "data/nar.bin"
    94 00000CE7 <bin C0h>                 .computer incbin "data/computer.bin"
    95 00000DA7 <bin C0h>                 .way_down incbin "data/way_down.bin"
    96 00000E67 <bin C0h>                 .way_left incbin "data/way_left.bin"
    97 00000F27 <bin C0h>                 .way_up incbin "data/way_up.bin"
    98 00000FE7 <bin C0h>                 .way_right incbin "data/way_right.bin"
    99 000010A7 <bin C0h>                 .pinkbox incbin "data/pinkbox.bin"
   100 00001167 <bin C0h>                 .greenwall_1 incbin "data/greenwall_1.bin"
   101 00001227 <bin C0h>                 .greenwall_2 incbin "data/greenwall_2.bin"
   102 000012E7 <bin C0h>                 .greenwall_3 incbin "data/greenwall_3.bin"
   103 000013A7 <bin C0h>                 .redwall_1 incbin "data/redwall_1.bin"
   104 00001467 <bin C0h>                 .redwall_2 incbin "data/redwall_2.bin"
   105 00001527 <bin C0h>                 .redwall_3 incbin "data/redwall_3.bin"
   106 000015E7 <bin C0h>                 .box incbin "data/box.bin"
   107 000016A7 <bin C0h>                 .vbar incbin "data/vbar.bin"
   108 00001767 <bin C0h>                 .hbar incbin "data/hbar.bin"
   109 00001827 <bin C0h>                 .treetop_1 incbin "data/treetop_1.bin"
   110 000018E7 <bin C0h>                 .treetop_2 incbin "data/treetop_2.bin"
   111 000019A7 <bin C0h>                 .treetop_3 incbin "data/treetop_3.bin"
   112 00001A67 <bin C0h>                 .treething incbin "data/treething.bin"
   113 00001B27 <bin C0h>                 .treetop_a incbin "data/treetop_a.bin"
   114 00001BE7 <bin C0h>                 .treetop_b incbin "data/treetop_b.bin"
   115 00001CA7 <bin C0h>                 .treeroot_a incbin "data/treeroot_a.bin"
   116 00001D67 <bin C0h>                 .treeroot_b incbin "data/treeroot_b.bin"
   117 00001E27 <bin C0h>                 .cactus_top incbin "data/cactus_top.bin"
   118 00001EE7 <bin C0h>                 .cactus_bottom incbin "data/cactus_bottom.bin"
   119 00001FA7 <bin C0h>                 .roof_1 incbin "data/roof_1.bin"
   120 00002067 <bin C0h>                 .roof_2 incbin "data/roof_2.bin"
   121 00002127 <bin C0h>                 .roof_3 incbin "data/roof_3.bin"
   122 000021E7 <bin C0h>                 .house1 incbin "data/house1.bin"
   123 000022A7 <bin C0h>                 .question incbin "data/question.bin"
   124 00002367 <bin C0h>                 .stars_1 incbin "data/stars_1.bin"
   125 00002427 <bin C0h>                 .stars_2 incbin "data/stars_2.bin"
   126 000024E7 <bin C0h>                 .stars_3 incbin "data/stars_3.bin"
   127 000025A7 <bin C0h>                 .stars_4 incbin "data/stars_4.bin"
   128 00002667 <bin C0h>                 .walk_bw_1 incbin "data/walk_bw_1.bin"
   129 00002727 <bin C0h>                 .walk_bw_2 incbin "data/walk_bw_2.bin"
   130 000027E7 <bin C0h>                 .walk_fw_1 incbin "data/walk_fw_1.bin"
   131 000028A7 <bin C0h>                 .walk_fw_2 incbin "data/walk_fw_2.bin"
   132 00002967 <bin C0h>                 .walk_left_1 incbin "data/walk_left_1.bin"
   133 00002A27 <bin C0h>                 .walk_left_2 incbin "data/walk_left_2.bin"
   134 00002AE7 <bin C0h>                 .walk_left_3 incbin "data/walk_left_3.bin"
   135 00002BA7 <bin C0h>                 .walk_left_4 incbin "data/walk_left_4.bin"
   136 00002C67 <bin C0h>                 .walk_right_1 incbin "data/walk_right_1.bin"
   137 00002D27 <bin C0h>                 .walk_right_2 incbin "data/walk_right_2.bin"
   138 00002DE7 <bin C0h>                 .walk_right_3 incbin "data/walk_right_3.bin"
   139 00002EA7 <bin C0h>                 .walk_right_4 incbin "data/walk_right_4.bin"
   140 00002F67 <bin C0h>                 .stand_1 incbin "data/stand_1.bin"
   141 00003027 <bin C0h>                 .stand_2 incbin "data/stand_2.bin"
   142 000030E7 <bin C0h>                 .stand_3 incbin "data/stand_3.bin"
   143 000031A7 <bin C0h>                 .stand_4 incbin "data/stand_4.bin"
   144 00003267 <bin C0h>                 .donut_1 incbin "data/donut_1.bin"
   145 00003327 <bin C0h>                 .donut_2 incbin "data/donut_2.bin"
   146 000033E7 <bin C0h>                 .donut_3 incbin "data/donut_3.bin"
   147 000034A7 <bin C0h>                 .donut_4 incbin "data/donut_4.bin"
   148 00003567 <bin C0h>                 .sqr_ani_1 incbin "data/sqr_ani_1.bin"
   149 00003627 <bin C0h>                 .sqr_ani_2 incbin "data/sqr_ani_2.bin"
   150 000036E7 <bin C0h>                 .sqr_ani_3 incbin "data/sqr_ani_3.bin"
   151 000037A7 <bin C0h>                 .sqr_ani_4 incbin "data/sqr_ani_4.bin"
   152 00003867 <bin C0h>                 .flower_1 incbin "data/flower_1.bin"
   153 00003927 <bin C0h>                 .flower_2 incbin "data/flower_2.bin"
   154 000039E7 <bin C0h>                 .flower_3 incbin "data/flower_3.bin"
   155 00003AA7 <bin C0h>                 .flower_4 incbin "data/flower_4.bin"
   156 00003B67 <bin C0h>                 .explode_1 incbin "data/explode_1.bin"
   157 00003C27 <bin C0h>                 .explode_2 incbin "data/explode_2.bin"
   158 00003CE7 <bin C0h>                 .explode_3 incbin "data/explode_3.bin"
   159 00003DA7 <bin C0h>                 .explode_4 incbin "data/explode_4.bin"
   160 00003E67 <bin C0h>                 .creep_1 incbin "data/creep_1.bin"
   161 00003F27 <bin C0h>                 .creep_2 incbin "data/creep_2.bin"
   162 00003FE7 <bin C0h>                 .creep_3 incbin "data/creep_3.bin"
   163 000040A7 <bin C0h>                 .creep_4 incbin "data/creep_4.bin"
   164 00004167 <bin C0h>                 .bouncer_1 incbin "data/bouncer_1.bin"
   165 00004227 <bin C0h>                 .bouncer_2 incbin "data/bouncer_2.bin"
   166 000042E7 <bin C0h>                 .bouncer_3 incbin "data/bouncer_3.bin"
   167 000043A7 <bin C0h>                 .bouncer_4 incbin "data/bouncer_4.bin"
   168 00004467 <bin C0h>                 .eye_1 incbin "data/eye_1.bin"
   169 00004527 <bin C0h>                 .eye_2 incbin "data/eye_2.bin"
   170 000045E7 <bin C0h>                 .eye_3 incbin "data/eye_3.bin"
   171 000046A7 <bin C0h>                 .eye_4 incbin "data/eye_4.bin"
   172 00004767 <bin C0h>                 .smurf_1 incbin "data/smurf_1.bin"
   173 00004827 <bin C0h>                 .smurf_2 incbin "data/smurf_2.bin"
   174 000048E7 <bin C0h>                 .smurf_3 incbin "data/smurf_3.bin"
   175 000049A7 <bin C0h>                 .smurf_4 incbin "data/smurf_4.bin"
   176                                  endAssets:
   177                                  
   178                                  
   179                                  ; segment .text
   180                                  
   181 00004A67 00<rep 28599h>          times (180*1024)-($-$$) db 0
   182                                  
   183                                  
   184                                  
   185                                  
   186                                    
   187                                  ; times 512 db 65
   188                                  ; times 512 db 66
   189                                  ; times 512 db 67
   190                                  ; times 512 db 68
   191                                  ; times 512 db 69
   192                                  ; times 512 db 70
   193                                  ; times 512 db 71
   194                                  ; times 512 db 72
   195                                  ; times 512 db 73
   196                                  ; times 512 db 74
   197                                  ; times 512 db 75
   198                                  ; times 512 db 76
   199                                  ; times 512 db 77
   200                                  ; times 512 db 78
   201                                  ; times 512 db 79
   202                                  ; times 512 db 80
   203                                  ; times 512 db 81
   204                                  ; times 512 db 82
   205                                  ; times 512 db 83
   206                                  ; times 512 db 84
   207                                  ; times 512 db 85
   208                                  ; times 512 db 86
   209                                  ; times 512 db 87
   210                                  ; times 512 db 88
   211                                  ; times 512 db 89
   212                                  ; times 512 db 90
   213                                  ; times 512 db 91
   214                                  ; times 512 db 92
   215                                  ; times 512 db 93
   216                                  ; times 512 db 94
   217                                  ; times 512 db 95
   218                                  ; times 512 db 96
   219                                  ; times 512 db 97
   220                                  ; times 512 db 98
   221                                  ; times 512 db 99
   222                                  ; times 512 db 100
   223                                  ; times 512 db 101
   224                                  ; times 512 db 102
   225                                  ; times 512 db 103
   226                                  ; times 512 db 104
   227                                  ; times 512 db 105
   228                                  ; times 512 db 106
   229                                  ; times 512 db 107
   230                                  ; times 512 db 108
   231                                  ; times 512 db 109
   232                                  ; times 512 db 110
   233                                  ; times 512 db 111
   234                                  ; times 512 db 112
   235                                  ; times 512 db 113
   236                                  ; times 512 db 114
   237                                  ; times 512 db 115
   238                                  ; times 512 db 116
   239                                  ; times 512 db 117
   240                                  ; times 512 db 118
   241                                  ; times 512 db 119
   242                                  ; times 512 db 120
   243                                  ; times 512 db 121
   244                                  ; times 512 db 122
   245                                  ; times 512 db 123
   246                                  ; times 512 db 124
   247                                  ; times 512 db 125
   248                                  ; times 512 db 126
   249                                  ; times 512 db 127
   250                                  ; times 512 db 128
   251                                  ; times 512 db 129
   252                                  ; times 512 db 130
   253                                  ; times 512 db 131
   254                                  ; times 512 db 132
   255                                  ; times 512 db 133
   256                                  ; times 512 db 134
   257                                  ; times 512 db 135
   258                                  ; times 512 db 136
   259                                  ; times 512 db 137
   260                                  ; times 512 db 138
   261                                  ; times 512 db 139
   262                                  ; times 512 db 140
   263                                  ; times 512 db 141
   264                                  ; times 512 db 142
   265                                  ; times 512 db 143
   266                                  ; times 512 db 144
   267                                  ; times 512 db 145
   268                                  ; times 512 db 146
   269                                  ; times 512 db 147
   270                                  ; times 512 db 148
   271                                  ; times 512 db 149
   272                                  ; times 512 db 150
   273                                  ; times 512 db 151
   274                                  ; times 512 db 152
   275                                  ; times 512 db 153
   276                                  ; times 512 db 154
   277                                  ; times 512 db 155
   278                                  ; times 512 db 156
   279                                  ; times 512 db 157
   280                                  ; times 512 db 158
   281                                  ; times 512 db 159
   282                                  ; times 512 db 160
   283                                  ; times 512 db 161
   284                                  ; times 512 db 162
   285                                  ; times 512 db 163
   286                                  ; times 512 db 164
   287                                  ; times 512 db 165
   288                                  ; times 512 db 166
   289                                  ; times 512 db 167
   290                                  ; times 512 db 168
   291                                  ; times 512 db 169
   292                                  ; times 512 db 170
   293                                  ; times 512 db 171
   294                                  ; times 512 db 172
   295                                  ; times 512 db 173
   296                                  ; times 512 db 174
   297                                  ; times 512 db 175
   298                                  ; times 512 db 176
   299                                  ; times 512 db 177
   300                                  ; times 512 db 178
   301                                  ; times 512 db 179
   302                                  ; times 512 db 180
   303                                  ; times 512 db 181
   304                                  ; times 512 db 182
   305                                  ; times 512 db 183
   306                                  ; times 512 db 184
   307                                  ; times 512 db 185
   308                                  ; times 512 db 186
   309                                  ; times 512 db 187
   310                                  ; times 512 db 188
   311                                  ; times 512 db 189
   312                                  ; times 512 db 190
   313                                  ; times 512 db 191
   314                                  ; times 512 db 192
   315                                  ; times 512 db 193
   316                                  ; times 512 db 194
   317                                  ; times 512 db 195
   318                                  ; times 512 db 196
   319                                  ; times 512 db 197
   320                                  ; times 512 db 198
   321                                  ; times 512 db 199
   322                                  ; times 512 db 200
   323                                  ; times 512 db 201
   324                                  ; times 512 db 202
   325                                  ; times 512 db 203
   326                                  ; times 512 db 204
   327                                  ; times 512 db 205
   328                                  ; times 512 db 206
   329                                  ; times 512 db 207
   330                                  
   331                                  
