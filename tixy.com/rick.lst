     1                                  ; Rick Companje, April 10, 2022
     2                                      cpu 8086
     3                                      org 0x100
     4                                  
     5                                      cols equ 80
     6                                      startpos equ 4*24 + 4*cols*8
     7                                  
     8 00000000 B80200                      mov ax,0x0002
     9 00000003 CD10                        int 0x10
    10                                  
    11 00000005 B500                        mov ch,0  ; t
    12                                  forT:
    13 00000007 B100                        mov cl,0  ; i
    14 00000009 B200                        mov dl,0  ; x
    15 0000000B B600                        mov dh,0  ; y           
    16 0000000D BF600A                      mov di,startpos
    17                                  
    18 00000010 E82F00                      call clear
    19                                  
    20                                  forY:
    21 00000013 B200                        mov dl,0
    22                                  forX:
    23                                      ; mov al,15
    24                                      ; mov al,ch    ; t
    25                                      ; and al,7     ; 
    26                                  
    27                                      ; add al,dh
    28                                      ; sub al,7
    29 00000015 52                          push dx
    30                                      ; shl dh,1
    31                                      ; shl dl,1
    32                                      ; sub dh,ch
    33                                      ; add dl,ch
    34 00000016 88F0                        mov al,dh  ;  x*y+t
    35 00000018 F6E2                        mul dl
    36 0000001A 00E8                        add al,ch
    37 0000001C 5A                          pop dx
    38                                  
    39                                      ; mov al,ch           ; t
    40                                      ; times 2 shr al,1    ; /=2
    41                                      ; and al,15           ; wrap (werkt dit ook voor negatieve getallen?)
    42                                      ; times 2 shl al,1    ; *=4
    43                                      ; mov bx,sin
    44                                      ; cs xlat                ; extract sin value
    45                                  
    46 0000001D E84000                      call draw_dot_color2
    47 00000020 FEC2                        inc dl              ; x
    48 00000022 FEC1                        inc cl              ; i
    49 00000024 83C708                      add di,8
    50 00000027 80FA10                      cmp dl,16
    51 0000002A 7CE9                        jl forX
    52 0000002C B200                        mov dl,0
    53 0000002E 81C70002                    add di,(cols-16)*8    ; skip remaining cols
    54 00000032 FEC6                        inc dh
    55 00000034 80FE10                      cmp dh,16
    56 00000037 7CDA                        jl forY
    57 00000039 FEC5                        inc ch              ; t
    58                                      ; jnc forT
    59 0000003B 80FD32                      cmp ch,50
    60 0000003E 72C7                        jb forT
    61 00000040 CD20                        int 0x20
    62                                  
    63                                      ; jmp top
    64                                  
    65                                  ; fx0:
    66                                  ;     mov al,ch           ; t
    67                                  ;     times 2 shr al,1    ; /=2
    68                                  ;     and al,15           ; wrap (werkt dit ook voor negatieve getallen?)
    69                                  ;     times 2 shl al,1    ; *=4
    70                                  ;     mov bx,sin
    71                                  ;     cs xlat                ; extract sin value
    72                                  ;     ret
    73                                  clear:
    74 00000042 57                          push di
    75 00000043 53                          push bx
    76 00000044 51                          push cx
    77 00000045 B80000                      mov ax,0
    78 00000048 BB00F4                      mov bx,0xf400
    79 0000004B 8EC3                        mov es,bx
    80 0000004D B90014                      mov cx,10240/2
    81 00000050 F3AB                        rep stosw
    82 00000052 BB003C                      mov bx,0x3c00
    83 00000055 8EC3                        mov es,bx
    84 00000057 B90014                      mov cx,10240/2
    85 0000005A F3AB                        rep stosw
    86 0000005C 59                          pop cx
    87 0000005D 5B                          pop bx
    88 0000005E 5F                          pop di
    89 0000005F C3                          ret
    90                                  
    91                                  draw_dot_color2:
    92 00000060 BB00F4                      mov bx,0xf400
    93 00000063 08C0                        or al,al
    94 00000065 7903                        jns .dr
    95 00000067 BB003C                      mov bx,0x3c00
    96 0000006A E81C00                  .dr call draw_dot
    97 0000006D C3                          ret
    98                                  
    99                                  draw_dot_color:
   100 0000006E BB00F0                      mov bx,0xf000    ; red
   101 00000071 E81500                      call draw_dot
   102 00000074 08C0                        or al,al
   103 00000076 7902                        jns .draw_blue_green  ; check sign bit for negative number
   104 00000078 B000                        mov al,0         ; clear dot on blue and green channel
   105                                  .draw_blue_green:
   106 0000007A F6D8                        neg al
   107 0000007C BB00F4                      mov bx,0xf400    ; blue
   108 0000007F E80700                      call draw_dot
   109 00000082 BB003C                      mov bx,0x3c00    ; green
   110 00000085 E80100                      call draw_dot
   111 00000088 C3                          ret
   112                                  
   113                                  draw_dot:
   114 00000089 57                          push di
   115 0000008A 50                          push ax
   116 0000008B 51                          push cx
   117 0000008C 88C4                        mov ah,al    
   118 0000008E 08C0                        or al,al
   119 00000090 7902                        jns .positive
   120 00000092 F6D8                        neg al
   121                                  .positive:
   122 00000094 8EC3                        mov es,bx    ; vram
   123 00000096 240F                        and al,15    ; limit to 15 (4 bits)
   124 00000098 B108                        mov cl,8
   125 0000009A F6E1                        mul cl    ; ax=al*8
   126 0000009C 89C6                        mov si,ax
   127 0000009E 81C6[C000]                  add si,img
   128 000000A2 2EA5<rep 4h>                times 4 cs movsw
   129 000000AA 81C73801                    add di,(4*cols)-8
   130 000000AE 89C6                        mov si,ax
   131 000000B0 81C6[4001]                  add si,img+128
   132 000000B4 2EA5<rep 4h>                times 4 cs movsw
   133 000000BC 59                          pop cx
   134 000000BD 58                          pop ax
   135 000000BE 5F                          pop di
   136 000000BF C3                          ret
   137                                  
   138                                  ; table: db fx0
   139                                  
   140                                  ; sin:
   141                                  ;     db 0x00,0x01,0x03,0x04,0x06,0x07,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0e,0x0f,0x0f,0x0f
   142                                  ;     db 0x0f,0x0f,0x0f,0x0f,0x0e,0x0e,0x0d,0x0c,0x0b,0x0a,0x09,0x07,0x06,0x04,0x03,0x01
   143                                  ;     db 0x00,0xff,0xfd,0xfc,0xfa,0xf9,0xf7,0xf6,0xf5,0xf4,0xf3,0xf2,0xf2,0xf1,0xf1,0xf1
   144                                  ;     db 0xf1,0xf1,0xf1,0xf1,0xf2,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf9,0xfa,0xfc,0xfd,0xff
   145                                  
   146                                  img:
   147 000000C0 000000000000000000-         db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80
   147 000000C9 00000000000080     
   148 000000D0 00000001000000C000-         db 0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xc0,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xc0
   148 000000D9 000001000000C0     
   149 000000E0 00000003000080E000-         db 0x00,0x00,0x00,0x03,0x00,0x00,0x80,0xe0,0x00,0x00,0x00,0x03,0x00,0x00,0x80,0xe0
   149 000000E9 000003000080E0     
   150 000000F0 000003070000E0F000-         db 0x00,0x00,0x03,0x07,0x00,0x00,0xe0,0xf0,0x00,0x00,0x03,0x07,0x00,0x00,0xe0,0xf0
   150 000000F9 0003070000E0F0     
   151 00000100 0000070F0080F0F800-         db 0x00,0x00,0x07,0x0f,0x00,0x80,0xf0,0xf8,0x00,0x00,0x07,0x0f,0x00,0x80,0xf0,0xf8
   151 00000109 00070F0080F0F8     
   152 00000110 00030F1F00E0F8FC00-         db 0x00,0x03,0x0f,0x1f,0x00,0xe0,0xf8,0xfc,0x00,0x07,0x1f,0x1f,0x00,0xf0,0xfc,0xfc
   152 00000119 071F1F00F0FCFC     
   153 00000120 000F1F3F80F8FCFE00-         db 0x00,0x0f,0x1f,0x3f,0x80,0xf8,0xfc,0xfe,0x00,0x0f,0x3f,0x3f,0x80,0xf8,0xfe,0xfe
   153 00000129 0F3F3F80F8FEFE     
   154 00000130 071F3F7FF0FCFEFF07-         db 0x07,0x1f,0x3f,0x7f,0xf0,0xfc,0xfe,0xff,0x07,0x3f,0x7f,0x7f,0xf0,0xfe,0xff,0xff
   154 00000139 3F7F7FF0FEFFFF     
   155 00000140 000000000000000000-         db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
   155 00000149 00000000000000     
   156 00000150 000000000000000000-         db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
   156 00000159 00000000000000     
   157 00000160 000000008000000000-         db 0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00
   157 00000169 00000080000000     
   158 00000170 03000000E000000003-         db 0x03,0x00,0x00,0x00,0xe0,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0xe0,0x00,0x00,0x00
   158 00000179 000000E0000000     
   159 00000180 07000000F080000007-         db 0x07,0x00,0x00,0x00,0xf0,0x80,0x00,0x00,0x07,0x00,0x00,0x00,0xf0,0x80,0x00,0x00
   159 00000189 000000F0800000     
   160 00000190 0F030000F8E000001F-         db 0x0f,0x03,0x00,0x00,0xf8,0xe0,0x00,0x00,0x1f,0x07,0x00,0x00,0xfc,0xf0,0x00,0x00
   160 00000199 070000FCF00000     
   161 000001A0 1F0F0000FCF880003F-         db 0x1f,0x0f,0x00,0x00,0xfc,0xf8,0x80,0x00,0x3f,0x0f,0x00,0x00,0xfe,0xf8,0x80,0x00
   161 000001A9 0F0000FEF88000     
   162 000001B0 3F1F0700FEFCF0007F-         db 0x3f,0x1f,0x07,0x00,0xfe,0xfc,0xf0,0x00,0x7f,0x3f,0x07,0x00,0xff,0xfe,0xf0,0x00
   162 000001B9 3F0700FFFEF000     
   163                                  
   164                                  ; clearScreen:
   165                                  ;     cld
   166                                  ;     mov ax,0x5555  ; bitmap pattern
   167                                  ;     mov bp,0xf000  ; red + blue
   168                                  ;     mov es,bp
   169                                  ;     mov di,0
   170                                  ;     mov cx,0x4000
   171                                  ;     rep stosw
   172                                  ;     mov bp,0x0c00  ; green
   173                                  ;     mov es,bp
   174                                  ;     mov di,0
   175                                  ;     mov cx,0x2000
   176                                  ;     rep stosw
   177                                  ;     ret
   178                                  
   179                                  ; ; %include "lib.asm"
   180                                  ; incbin "Sanyo-MS-DOS-2.11-minimal.img",($-$$)  ; include default disk image skipping first 512 bytes
   181                                  
