seg000:0000 ;
seg000:0000 ; ╔═════════════════════════════════════════════════════════════════════════╗
seg000:0000 ; ║	    This file is generated by The Interactive Disassembler (IDA)	║
seg000:0000 ; ║	    Copyright (c) 2010 by Hex-Rays SA, <support@hex-rays.com>		║
seg000:0000 ; ║			     Licensed to: Freeware version			║
seg000:0000 ; ╚═════════════════════════════════════════════════════════════════════════╝
seg000:0000 ;
seg000:0000 ; Input MD5	  : 2680FFC1B4D6A56DA895BDF15E298A3B
seg000:0000
seg000:0000 ; File Name	  : \\Mac\Home\Documents\bandit-zonder-sprites.exe
seg000:0000 ; Format	  : MS-DOS executable (EXE)
seg000:0000 ; Base Address: 0h Range: 0h-ADA9h Loaded length: ADA9h
seg000:0000 ; Entry Point : 0:8EDB
seg000:0000
seg000:0000		    .386
seg000:0000		    .model large
seg000:0000
seg000:0000 ; ═══════════════════════════════════════════════════════════════════════════
seg000:0000
seg000:0000 ; Segment type: Pure code
seg000:0000 seg000	    segment byte public	'CODE' use16
seg000:0000		    assume cs:seg000
seg000:0000		    assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
seg000:0000		    db 0CFh, 1,	0, 14h,	0, 8, 0, 1, 0, 3Ch, 0, 0FEh, 0FFh
seg000:0000		    db 96h, 0, 2, 0, 5,	0, 0FAh, 3 dup(0), 0FDh, 0FFh, 0Fh
seg000:0000		    db 0, 2, 0,	32h, 5 dup(0), 1, 0, 1Eh, 0, 28h, 5 dup(0)
seg000:0000		    db 1, 0, 28h, 0, 1Eh, 5 dup(0), 1, 0, 3Ch, 0, 14h, 0, 2 dup(0FFh)
seg000:0000		    db 2 dup(0), 0Ah, 0, 0Bh, 0, 8, 0, 0FAh, 3 dup(0FFh), 0Eh
seg000:0000		    db 0, 57h, 0, 18h, 47h dup(0)
seg000:0097
seg000:0097 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:0097
seg000:0097
seg000:0097 sub_97	    proc near		    ; CODE XREF: sub_A61Dp
seg000:0097		    mov	    di,	51h ; 'Q'
seg000:009A		    mov	    cx,	46h ; 'F'
seg000:009D		    xor	    al,	al
seg000:009F		    rep	stosb
seg000:00A1		    retn
seg000:00A1 sub_97	    endp
seg000:00A1
seg000:00A2
seg000:00A2 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:00A2
seg000:00A2
seg000:00A2 sub_A2	    proc near		    ; CODE XREF: sub_9438+36p
seg000:00A2					    ; sub_9F5B+49p ...
seg000:00A2		    push    di
seg000:00A3		    push    si
seg000:00A4		    push    cx
seg000:00A5		    mov	    cx,	7
seg000:00A8		    mov	    di,	51h ; 'Q'
seg000:00AB
seg000:00AB loc_AB:				    ; CODE XREF: sub_A2+12j
seg000:00AB		    cmp	    word ptr [di+4], 0
seg000:00AF		    jz	    short loc_B8
seg000:00B1		    add	    di,	0Ah
seg000:00B4		    loop    loc_AB
seg000:00B6		    jmp	    short loc_CC
seg000:00B8 ; ───────────────────────────────────────────────────────────────────────────
seg000:00B8
seg000:00B8 loc_B8:				    ; CODE XREF: sub_A2+Dj
seg000:00B8		    mov	    cx,	ax
seg000:00BA		    shl	    ax,	1
seg000:00BC		    shl	    ax,	1
seg000:00BE		    add	    ax,	cx
seg000:00C0		    shl	    ax,	1
seg000:00C2		    mov	    si,	1
seg000:00C5		    add	    si,	ax
seg000:00C7		    mov	    cx,	5
seg000:00CA		    rep	movsw
seg000:00CC
seg000:00CC loc_CC:				    ; CODE XREF: sub_A2+14j
seg000:00CC		    pop	    cx
seg000:00CD		    pop	    si
seg000:00CE		    pop	    di
seg000:00CF		    retn
seg000:00CF sub_A2	    endp
seg000:00CF
seg000:00D0 ; ───────────────────────────────────────────────────────────────────────────
seg000:00D0		    cmp	    byte ptr ds:8DB8h, 1
seg000:00D5		    jz	    short loc_D8
seg000:00D7		    retn
seg000:00D8 ; ───────────────────────────────────────────────────────────────────────────
seg000:00D8
seg000:00D8 loc_D8:				    ; CODE XREF: seg000:00D5j
seg000:00D8		    mov	    si,	51h ; 'Q'
seg000:00DB		    mov	    cx,	7
seg000:00DE
seg000:00DE loc_DE:				    ; CODE XREF: seg000:0100j
seg000:00DE		    cmp	    word ptr [si+4], 0
seg000:00E2		    jz	    short loc_FD
seg000:00E4		    dec	    word ptr [si+4]
seg000:00E7		    mov	    dx,	[si+6]
seg000:00EA		    mov	    bx,	[si+8]
seg000:00ED		    push    cx
seg000:00EE		    call    sub_103
seg000:00F1		    pop	    cx
seg000:00F2		    mov	    ax,	[si]
seg000:00F4		    add	    [si+6], ax
seg000:00F7		    mov	    ax,	[si+2]
seg000:00FA		    add	    [si+8], ax
seg000:00FD
seg000:00FD loc_FD:				    ; CODE XREF: seg000:00E2j
seg000:00FD		    add	    si,	0Ah
seg000:0100		    loop    loc_DE
seg000:0102		    retn
seg000:0103
seg000:0103 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:0103
seg000:0103
seg000:0103 sub_103	    proc near		    ; CODE XREF: seg000:00EEp
seg000:0103					    ; sub_103+12j
seg000:0103		    cli
seg000:0104		    mov	    al,	3Dh ; '='
seg000:0106		    out	    3Ah, al
seg000:0108		    mov	    cx,	bx
seg000:010A
seg000:010A loc_10A:				    ; CODE XREF: sub_103:loc_10Aj
seg000:010A		    loop    loc_10A
seg000:010C		    mov	    al,	35h ; '5'
seg000:010E		    out	    3Ah, al
seg000:0110		    mov	    cx,	bx
seg000:0112
seg000:0112 loc_112:				    ; CODE XREF: sub_103:loc_112j
seg000:0112		    loop    loc_112
seg000:0114		    dec	    dx
seg000:0115		    jnz	    short sub_103
seg000:0117		    sti
seg000:0118		    retn
seg000:0118 sub_103	    endp
seg000:0118
seg000:0118 ; ───────────────────────────────────────────────────────────────────────────
seg000:0119		    db 1Fh dup(0), 3Ch,	0, 1Eh,	0, 0Eh,	0, 0Eh,	0, 0Ch,	0
seg000:0119		    db 0Ch, 0, 0Ch, 0, 6, 3 dup(0), 0Eh, 0, 0Eh, 3 dup(0)
seg000:0119		    db 39h, 0C0h, 39h, 0C0h, 10h, 80h, 12h dup(0), 0Ch,	60h
seg000:0119		    db 0Ch, 60h, 18h, 0C0h, 7Fh, 0E0h, 31h, 80h, 31h, 80h
seg000:0119		    db 0FFh, 0C0h, 63h,	0, 0C6h, 0, 0C6h, 5 dup(0), 12h, 0
seg000:0119		    db 7Fh, 80h, 0D2h, 0C0h, 92h, 0, 0D2h, 0, 7Fh, 80h,	12h
seg000:0119		    db 0C0h, 12h, 40h, 0D2h, 0C0h, 7Fh,	80h, 12h, 3 dup(0)
seg000:0119		    db 70h, 0C0h, 0C8h,	0C0h, 0C9h, 80h, 73h, 0, 6, 0, 0Ch
seg000:0119		    db 0, 18h, 0, 33h, 80h, 66h, 40h, 0C6h, 40h, 0C3h, 80h
seg000:0119		    db 2 dup(0), 7Fh, 0, 0E1h, 80h, 0C0h, 0, 6Ch, 0, 38h, 20h
seg000:0119		    db 60h, 0C0h, 0C3h,	80h, 0C4h, 0C0h, 0E0h, 0C0h, 0FFh
seg000:0119		    db 0C0h, 7Fh, 80h, 2 dup(0), 1Ch, 0, 1Ch, 0, 8, 13h	dup(0)
seg000:0119		    db 7, 0, 1Ch, 0, 30h, 0, 20h, 0, 60h, 0, 60h, 0, 60h, 0
seg000:0119		    db 30h, 0, 38h, 0, 1Eh, 0, 7, 80h, 2 dup(0), 38h, 0, 0Eh
seg000:0119		    db 0, 3, 0,	1, 0, 1, 80h, 1, 80h, 1, 80h, 3, 0, 7, 0, 1Eh
seg000:0119		    db 0, 78h, 5 dup(0), 33h, 0, 1Eh, 0, 7Fh, 80h, 1Eh,	0
seg000:0119		    db 33h, 0Fh	dup(0),	0Eh, 0,	0Eh, 0,	0Eh, 0,	0FFh, 0E0h
seg000:0119		    db 0FFh, 0E0h, 0Eh,	0, 0Eh,	0, 0Eh,	17h dup(0), 60h, 0
seg000:0119		    db 70h, 0, 60h, 0, 0C0h, 9 dup(0), 0FFh, 0C0h, 0FFh, 0C0h
seg000:0119		    db 1Ch dup(0), 30h,	0, 78h,	0, 30h,	4 dup(0), 60h, 0, 0E0h
seg000:0119		    db 1, 0C0h,	3, 80h,	7, 0, 0Eh, 0, 1Ch, 0, 38h, 0, 70h
seg000:0119		    db 0, 0E0h,	0, 0C0h, 3 dup(0), 1Fh,	0, 63h,	0, 0C7h, 0C0h
seg000:0119		    db 0C1h, 9 dup(0C0h), 0E1h,	0C0h, 7Fh, 80h,	1Eh, 3 dup(0)
seg000:0119		    db 6, 0, 1Eh, 0, 7Eh, 0, 0Eh, 0, 0Eh, 0, 0Eh, 0, 0Eh, 0
seg000:0119		    db 0Eh, 0, 0Eh, 0, 1Fh, 0, 3Fh, 80h, 2 dup(0), 7Fh,	0C0h
seg000:0119		    db 80h, 0E0h, 0C4h,	60h, 78h, 0C0h,	1, 80h,	6, 0, 18h
seg000:0119		    db 0, 60h, 0, 0C0h,	40h, 0FFh, 0E0h, 7Fh, 0C0h, 2 dup(0)
seg000:0119		    db 7Fh, 2 dup(0C0h), 0E0h, 70h, 60h, 0, 0C0h, 7, 0,	1
seg000:0119		    db 80h, 0, 0C0h, 40h, 60h, 2 dup(0E0h), 0FFh, 0E0h,	7Fh
seg000:0119		    db 0C0h, 2 dup(0), 3Fh, 80h, 13h, 0, 13h, 0, 23h, 0, 43h
seg000:0119		    db 0, 0FFh,	0E0h, 0FFh, 0C0h, 3, 0,	3, 0, 7, 0, 0Fh, 80h
seg000:0119		    db 2 dup(0), 0FFh, 0C0h, 0FFh, 0, 40h, 0, 40h, 0, 0FEh
seg000:0119		    db 0, 0C3h,	80h, 1,	0C0h, 0, 0C0h, 41h, 0C0h, 0FFh,	0C0h
seg000:0119		    db 7Fh, 80h, 2 dup(0), 1Fh,	80h, 63h, 2 dup(0C0h), 80h
seg000:0119		    db 0C0h, 0,	0DFh, 0, 0E1h, 80h, 4 dup(0C0h), 0E1h, 0C0h
seg000:0119		    db 7Fh, 80h, 1Eh, 3	dup(0),	7Fh, 0C0h, 0FFh, 0E0h, 60h
seg000:0119		    db 0C0h, 21h, 80h, 43h, 0, 3, 0, 6,	0, 6, 0, 6, 0, 6, 0
seg000:0119		    db 0Fh, 3 dup(0), 7Fh, 80h,	0E1h, 3	dup(0C0h), 40h,	80h
seg000:0119		    db 3Fh, 0, 40h, 2 dup(80h),	40h, 80h, 40h, 2 dup(0C0h)
seg000:0119		    db 0FFh, 0C0h, 7Fh,	80h, 2 dup(0), 1Eh, 0, 61h, 80h, 4 dup(0C0h)
seg000:0119		    db 61h, 0C0h, 3Eh, 0C0h, 0,	0C0h, 0, 0C0h, 41h, 0C0h, 0FFh
seg000:0119		    db 80h, 7Eh, 7 dup(0), 30h,	0, 78h,	0, 30h,	7 dup(0), 30h
seg000:0119		    db 0, 78h, 0, 30h, 7 dup(0), 30h, 0, 78h, 0, 30h, 7	dup(0)
seg000:0119		    db 30h, 0, 38h, 0, 30h, 0, 60h, 3 dup(0), 0FEh, 0E0h, 0BDh
seg000:0119		    db 20h, 0BEh, 0A0h,	9Dh, 20h, 4Eh, 40h, 4, 0, 4, 0,	4
seg000:0119		    db 0, 0Eh, 0, 7Dh, 40h, 6 dup(0), 0FFh, 0C0h, 0FFh,	0C0h
seg000:0119		    db 4 dup(0), 0FFh, 0C0h, 0FFh, 0C0h, 8 dup(0), 0CEh, 60h
seg000:0119		    db 99h, 20h, 0CAh, 60h, 7Fh, 0C0h, 1Fh, 0, 0Fh, 0, 1Dh
seg000:0119		    db 0, 1Bh, 0, 1Bh
seg000:0401		    db 0, 13h, 0, 39h, 0C0h, 2 dup(0), 7Fh, 0C0h, 0E1h,	0E0h
seg000:0401		    db 0C0h, 0E0h, 63h,	0C0h, 0Fh, 0, 1Ch, 0, 1Ch, 0, 0Eh
seg000:0401		    db 3 dup(0), 0Eh, 0, 0Eh, 5	dup(0),	1Fh, 0,	60h, 0C0h
seg000:0401		    db 0CEh, 60h, 9Bh, 20h, 99h, 60h, 0CFh, 0C0h, 60h, 0, 1Fh
seg000:0401		    db 80h, 6 dup(0), 7Fh, 0C0h, 93h, 20h, 53h,	40h, 23h, 80h
seg000:0401		    db 2Dh, 80h, 71h, 80h, 41h,	2 dup(80h), 3 dup(0C0h), 0E0h
seg000:0401		    db 0C0h, 61h, 0E0h,	2 dup(0), 7Fh, 0C0h, 0B0h, 0E0h, 70h
seg000:0401		    db 0C0h, 39h, 80h, 37h, 0, 31h, 80h, 30h, 0C0h, 30h, 60h
seg000:0401		    db 30h, 0E0h, 7Fh, 0C0h, 0FFh, 3 dup(0), 1Fh, 0C0h,	30h
seg000:0401		    db 60h, 66h, 0E0h, 43h, 2 dup(0C0h), 0, 0C0h, 0, 0E0h
seg000:0401		    db 0, 60h, 0, 78h, 40h, 3Fh, 0E0h, 1Fh, 0C0h, 2 dup(0)
seg000:0401		    db 7Eh, 0, 0B1h, 80h, 70h, 40h, 3Ch, 40h, 32h, 20h,	3Ch
seg000:0401		    db 20h, 30h, 20h, 30h, 60h,	30h, 0E0h, 7Fh,	0C0h, 0FFh
seg000:0401		    db 3 dup(0), 0FFh, 80h, 70h, 0C0h, 31h, 80h, 32h, 0, 3Ch
seg000:0401		    db 0, 3Fh, 80h, 30h, 0, 30h, 0, 30h, 40h, 7Fh, 0C0h, 0FFh
seg000:0401		    db 80h, 2 dup(0), 0FFh, 80h, 70h, 0C0h, 31h, 80h, 32h
seg000:0401		    db 0, 3Ch, 0, 3Fh, 80h, 30h, 0, 30h, 0, 30h, 0, 78h, 0
seg000:0401		    db 0FCh, 3 dup(0), 1Fh, 80h, 30h, 0C0h, 60h, 80h, 41h
seg000:0401		    db 0, 0C0h,	0, 0C1h, 2 dup(0E0h), 0C0h, 60h, 0C0h, 78h
seg000:0401		    db 0C0h, 3Fh, 0C0h,	1Fh, 0E0h, 2 dup(0), 79h, 0C0h,	0B1h
seg000:0401		    db 80h, 71h, 80h, 31h, 80h,	3Fh, 80h, 31h, 80h, 31h, 80h
seg000:0401		    db 31h, 80h, 31h, 80h, 70h,	0C0h, 0F8h, 60h, 2 dup(0)
seg000:0401		    db 3Fh, 80h, 60h, 0C0h, 27h, 0C0h, 3, 80h, 3, 0, 3,	0
seg000:0401		    db 3, 0, 3,	0, 23h,	80h, 37h, 80h, 1Fh, 3 dup(0), 3Fh
seg000:0401		    db 80h, 60h, 0C0h, 27h, 0C0h, 23h, 80h, 13h, 0, 3, 0, 3
seg000:0401		    db 0, 83h, 0, 43h, 80h, 67h, 80h, 3Fh, 3 dup(0), 78h, 0E0h
seg000:0401		    db 0B0h, 0C0h, 71h,	80h, 33h, 0, 3Eh, 0, 33h, 0, 31h, 80h
seg000:0401		    db 31h, 80h, 31h, 80h, 71h,	0C0h, 0F8h, 0E0h, 2 dup(0)
seg000:0401		    db 0F8h, 0,	70h, 0,	30h, 0,	30h, 0,	30h, 0,	30h, 0,	30h
seg000:0401		    db 0C0h, 30h, 80h, 60h, 0C0h, 87h, 0E0h, 7Fh, 0C0h,	2 dup(0)
seg000:0401		    db 7Fh, 0C0h, 0BFh,	0A0h, 6Dh, 0C0h, 4Ch, 0C0h, 0C6h, 60h
seg000:0401		    db 0C6h, 60h, 0C6h,	60h, 0C6h, 60h,	0C6h, 60h, 0E6h, 60h
seg000:0401		    db 6Ch, 0C0h, 2 dup(0), 7Fh, 80h, 0B3h, 0C0h, 70h, 0E0h
seg000:0401		    db 38h, 60h, 36h, 60h, 30h,	60h, 30h, 0C0h,	30h, 0C0h
seg000:0401		    db 30h, 80h, 70h, 0C0h, 0F8h, 60h, 2 dup(0), 1Eh, 0, 63h
seg000:0401		    db 80h, 0C2h, 0C0h,	0C2h, 0C0h, 0C4h, 0C0h,	0C8h, 0C0h
seg000:0401		    db 0D0h, 0C0h, 0D0h, 0C0h, 0F1h, 0C0h, 7Fh,	80h, 1Eh, 3 dup(0)
seg000:0401		    db 7Fh, 0, 0B0h, 0C0h, 70h,	60h, 30h, 60h, 3Ch, 0E0h, 37h
seg000:0401		    db 0C0h, 30h, 0, 30h, 0, 30h, 0, 70h, 0, 0F8h, 3 dup(0)
seg000:0401		    db 1Eh, 0, 61h, 80h, 0Ah dup(0C0h),	0DEh, 0C0h, 0F1h, 0C0h
seg000:0401		    db 7Fh, 80h, 1Eh, 0E0h, 2 dup(0), 7Fh, 80h,	0B0h, 0C0h
seg000:0401		    db 70h, 40h, 31h, 80h, 3Eh,	0, 33h,	0, 31h,	80h, 31h, 80h
seg000:0401		    db 31h, 80h, 71h, 0C0h, 0F8h, 0E0h,	2 dup(0), 7Fh, 0, 0E1h
seg000:0401		    db 2 dup(0C0h), 40h, 60h, 0, 18h, 0, 6, 0, 1, 80h, 78h
seg000:0401		    db 0C0h, 0C4h, 0C0h, 0FFh, 0C0h, 7Fh, 80h, 2 dup(0), 7Fh
seg000:0401		    db 0C0h, 0E6h, 60h,	66h, 40h, 0C6h,	20h, 6,	0, 6, 0, 6
seg000:0401		    db 0, 6, 0,	6, 0, 0Eh, 0, 1Fh, 3 dup(0), 71h, 0E0h,	98h
seg000:0401		    db 0C0h, 58h, 0C0h,	38h, 0C0h, 30h,	0C0h, 68h, 0C0h, 66h
seg000:0401		    db 0C0h, 61h, 0C0h,	78h, 0C0h, 3Fh,	0C0h, 0Fh, 0E0h, 2 dup(0)
seg000:0401		    db 79h, 0C0h, 0CCh,	0E0h, 78h, 3 dup(60h), 30h, 60h, 30h
seg000:063B		    db 40h, 18h, 40h, 18h, 80h,	0Dh, 80h, 0Fh, 0, 6, 3 dup(0)
seg000:063B		    db 2 dup(0E0h), 0C0h, 60h, 0C0h, 60h, 0C0h,	60h, 0C0h
seg000:063B		    db 60h, 0C0h, 60h, 0C0h, 60h, 64h, 0C0h, 6Eh, 0C0h,	7Bh
seg000:063B		    db 0C0h, 31h, 80h, 2 dup(0), 71h, 0C0h, 0E0h, 0C0h,	60h
seg000:063B		    db 80h, 31h, 0, 1Ah, 0, 0Ch, 0, 16h, 0, 23h, 0, 61h, 80h
seg000:063B		    db 0E0h, 0C0h, 70h,	0E0h, 2	dup(0),	71h, 0C0h, 0E6h, 60h
seg000:063B		    db 68h, 60h, 30h, 0C0h, 19h, 80h, 0Fh, 0, 6, 0, 6, 0, 6
seg000:063B		    db 0, 0Eh, 0, 1Fh, 3 dup(0), 0FFh, 0C0h, 60h, 0E0h,	21h
seg000:063B		    db 0C0h, 63h, 80h, 7, 0, 0Eh, 0, 1Ch, 0C0h,	38h, 80h, 70h
seg000:063B		    db 0C0h, 0FFh, 0E0h, 7Fh, 0C0h, 0Ah	dup(0)
seg000:06B0 byte_6B0	    db 0		    ; DATA XREF: sub_88E+6w
seg000:06B0					    ; sub_88E+Cw ...
seg000:06B1		    db 4 dup(0FFh)
seg000:06B5 byte_6B5	    db 0FFh		    ; DATA XREF: sub_8E0:loc_8E8r
seg000:06B5					    ; sub_8E0:loc_925r	...
seg000:06B6
seg000:06B6 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:06B6
seg000:06B6
seg000:06B6 sub_6B6	    proc near		    ; CODE XREF: sub_94C8+20p
seg000:06B6					    ; sub_9BEC+Bj
seg000:06B6		    push    ax
seg000:06B7		    push    bx
seg000:06B8		    push    cx
seg000:06B9		    push    dx
seg000:06BA		    push    bp
seg000:06BB		    push    si
seg000:06BC		    push    di
seg000:06BD		    push    es
seg000:06BE		    call    sub_95E
seg000:06C1		    push    ax
seg000:06C2		    call    sub_93F
seg000:06C5		    pop	    ax
seg000:06C6		    call    sub_88E
seg000:06C9
seg000:06C9 loc_6C9:				    ; CODE XREF: sub_6B6+8Fj
seg000:06C9					    ; sub_6B6+A3j
seg000:06C9		    call    sub_8E0
seg000:06CC		    jnb	    short loc_6D1
seg000:06CE		    jmp	    loc_75F
seg000:06D1 ; ───────────────────────────────────────────────────────────────────────────
seg000:06D1
seg000:06D1 loc_6D1:				    ; CODE XREF: sub_6B6+16j
seg000:06D1					    ; sub_6B6+89j
seg000:06D1		    mov	    di,	2
seg000:06D4
seg000:06D4 loc_6D4:				    ; CODE XREF: sub_6B6:loc_75Cj
seg000:06D4		    pushf
seg000:06D5		    push    dx
seg000:06D6		    push    di
seg000:06D7		    push    es
seg000:06D8		    cli
seg000:06D9		    cld
seg000:06DA		    mov	    al,	dh
seg000:06DC		    out	    0Ch, al	    ; DMA controller, 8237A-5.
seg000:06DC					    ; clear byte pointer flip-flop.
seg000:06DE		    mov	    dx,	8
seg000:06E1		    mov	    si,	70Dh
seg000:06E4		    mov	    bp,	bx
seg000:06E6		    mov	    di,	bx
seg000:06E8		    mov	    ax,	ds
seg000:06EA		    mov	    es,	ax
seg000:06EC		    mov	    bh,	2
seg000:06EE		    mov	    bl,	96h ; 'û'
seg000:06F0		    mov	    ah,	0
seg000:06F2		    mov	    al,	80h ; 'Ç'
seg000:06F4		    out	    8, al	    ; DMA 8237A-5. cmd reg bits:
seg000:06F4					    ; 0: enable	mem-to-mem DMA
seg000:06F4					    ; 1: enable	Ch0 address hold
seg000:06F4					    ; 2: disable controller
seg000:06F4					    ; 3: compressed timing mode
seg000:06F4					    ; 4: enable	rotating priority
seg000:06F4					    ; 5: extended write	mode; 0=late write
seg000:06F4					    ; 6: DRQ sensing - active high
seg000:06F4					    ; 7: DACK sensing -	active high
seg000:06F6		    aam
seg000:06F8		    aam
seg000:06FA		    aam
seg000:06FC		    aam
seg000:06FE
seg000:06FE loc_6FE:				    ; CODE XREF: sub_6B6+4Dj
seg000:06FE		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:06FE					    ; 0-3: channel 0-3 has reached terminal count
seg000:06FE					    ; 4-7: channel 0-3 has a request pending
seg000:06FF		    sar	    al,	1
seg000:0701		    jnb	    short loc_71F
seg000:0703		    jnz	    short loc_6FE
seg000:0705
seg000:0705 loc_705:				    ; CODE XREF: sub_6B6+52j
seg000:0705		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:0705					    ; 0-3: channel 0-3 has reached terminal count
seg000:0705					    ; 4-7: channel 0-3 has a request pending
seg000:0706		    and	    al,	bl
seg000:0708		    jz	    short loc_705
seg000:070A		    in	    al,	0Eh	    ; DMA controller, 8237A-5.
seg000:070A					    ; Clear mask registers.
seg000:070A					    ; Any OUT enables all 4 channels.
seg000:070C		    stosb
seg000:070D
seg000:070D loc_70D:				    ; CODE XREF: sub_6B6+59j
seg000:070D		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:070D					    ; 0-3: channel 0-3 has reached terminal count
seg000:070D					    ; 4-7: channel 0-3 has a request pending
seg000:070E		    dec	    ax
seg000:070F		    jz	    short loc_70D
seg000:0711		    cmp	    al,	bh
seg000:0713		    jnz	    short loc_71F
seg000:0715
seg000:0715 loc_715:				    ; CODE XREF: sub_6B6+65j
seg000:0715		    in	    al,	0Eh	    ; DMA controller, 8237A-5.
seg000:0715					    ; Clear mask registers.
seg000:0715					    ; Any OUT enables all 4 channels.
seg000:0717		    stosb
seg000:0718		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:0718					    ; 0-3: channel 0-3 has reached terminal count
seg000:0718					    ; 4-7: channel 0-3 has a request pending
seg000:0719		    cmp	    al,	bh
seg000:071B		    jz	    short loc_715
seg000:071D		    jmp	    si
seg000:071F ; ───────────────────────────────────────────────────────────────────────────
seg000:071F
seg000:071F loc_71F:				    ; CODE XREF: sub_6B6+4Bj
seg000:071F					    ; sub_6B6+5Dj
seg000:071F		    mov	    bx,	di
seg000:0721		    pop	    es
seg000:0722		    pop	    di
seg000:0723		    pop	    dx
seg000:0724		    popf
seg000:0725		    in	    al,	8	    ; DMA 8237A-5. status register bits:
seg000:0725					    ; 0-3: channel 0-3 has reached terminal count
seg000:0725					    ; 4-7: channel 0-3 has a request pending
seg000:0727		    and	    al,	0FFh
seg000:0729		    jnz	    short loc_747
seg000:072B		    loop    loc_73A
seg000:072D		    pop	    es
seg000:072E		    pop	    di
seg000:072F		    pop	    si
seg000:0730		    pop	    bp
seg000:0731		    pop	    dx
seg000:0732		    pop	    cx
seg000:0733		    pop	    bx
seg000:0734		    pop	    ax
seg000:0735		    call    sub_957
seg000:0738		    clc
seg000:0739		    retn
seg000:073A ; ───────────────────────────────────────────────────────────────────────────
seg000:073A
seg000:073A loc_73A:				    ; CODE XREF: sub_6B6+75j
seg000:073A		    inc	    dh
seg000:073C		    cmp	    dh,	9
seg000:073F		    jb	    short loc_6D1
seg000:0741		    inc	    dl
seg000:0743		    mov	    dh,	1
seg000:0745		    jmp	    short loc_6C9
seg000:0747 ; ───────────────────────────────────────────────────────────────────────────
seg000:0747
seg000:0747 loc_747:				    ; CODE XREF: sub_6B6+73j
seg000:0747		    mov	    bx,	bp
seg000:0749		    dec	    di
seg000:074A		    jz	    short loc_764
seg000:074C		    test    al,	3Ch
seg000:074E		    jz	    short loc_75C
seg000:0750		    test    di,	1
seg000:0754		    jnz	    short loc_75C
seg000:0756		    call    sub_93F
seg000:0759		    jmp	    loc_6C9
seg000:075C ; ───────────────────────────────────────────────────────────────────────────
seg000:075C
seg000:075C loc_75C:				    ; CODE XREF: sub_6B6+98j
seg000:075C					    ; sub_6B6+9Ej
seg000:075C		    jmp	    loc_6D4
seg000:075F ; ───────────────────────────────────────────────────────────────────────────
seg000:075F
seg000:075F loc_75F:				    ; CODE XREF: sub_6B6+18j
seg000:075F		    test    al,	80h
seg000:0761		    jz	    short loc_764
seg000:0763		    clc
seg000:0764
seg000:0764 loc_764:				    ; CODE XREF: sub_6B6+94j
seg000:0764					    ; sub_6B6+ABj
seg000:0764		    pop	    es
seg000:0765		    pop	    di
seg000:0766		    pop	    si
seg000:0767		    pop	    bp
seg000:0768		    pop	    dx
seg000:0769		    pop	    cx
seg000:076A		    pop	    bx
seg000:076B		    lahf
seg000:076C		    add	    sp,	2
seg000:076F		    sahf
seg000:0770		    call    sub_957
seg000:0773		    jb	    short loc_78F
seg000:0775		    test    al,	80h
seg000:0777		    jnz	    short loc_787
seg000:0779		    test    al,	10h
seg000:077B		    jnz	    short loc_793
seg000:077D		    test    al,	0Ch
seg000:077F		    jnz	    short loc_78B
seg000:0781		    jmp	    short loc_79B
seg000:0783 ; ───────────────────────────────────────────────────────────────────────────
seg000:0783
seg000:0783 loc_783:				    ; CODE XREF: sub_9A0B-9198j
seg000:0783		    mov	    al,	0
seg000:0785		    jmp	    short loc_79D
seg000:0787 ; ───────────────────────────────────────────────────────────────────────────
seg000:0787
seg000:0787 loc_787:				    ; CODE XREF: sub_6B6+C1j
seg000:0787					    ; sub_9A0B-919Fj
seg000:0787		    mov	    al,	2
seg000:0789		    jmp	    short loc_79D
seg000:078B ; ───────────────────────────────────────────────────────────────────────────
seg000:078B
seg000:078B loc_78B:				    ; CODE XREF: sub_6B6+C9j
seg000:078B					    ; sub_9A0B-9183j
seg000:078B		    mov	    al,	4
seg000:078D		    jmp	    short loc_79D
seg000:078F ; ───────────────────────────────────────────────────────────────────────────
seg000:078F
seg000:078F loc_78F:				    ; CODE XREF: sub_6B6+BDj
seg000:078F					    ; sub_9A0B-91A6j
seg000:078F		    mov	    al,	6
seg000:0791		    jmp	    short loc_79D
seg000:0793 ; ───────────────────────────────────────────────────────────────────────────
seg000:0793
seg000:0793 loc_793:				    ; CODE XREF: sub_6B6+C5j
seg000:0793					    ; sub_9A0B-918Aj
seg000:0793		    mov	    al,	8
seg000:0795		    jmp	    short loc_79D
seg000:0797 ; ───────────────────────────────────────────────────────────────────────────
seg000:0797
seg000:0797 loc_797:				    ; CODE XREF: sub_9A0B-9191j
seg000:0797		    mov	    al,	0Ah
seg000:0799		    jmp	    short loc_79D
seg000:079B ; ───────────────────────────────────────────────────────────────────────────
seg000:079B
seg000:079B loc_79B:				    ; CODE XREF: sub_6B6+CBj
seg000:079B					    ; sub_9A0B:loc_88Bj
seg000:079B		    mov	    al,	0Ch
seg000:079D
seg000:079D loc_79D:				    ; CODE XREF: sub_6B6+CFj
seg000:079D					    ; sub_6B6+D3j ...
seg000:079D		    stc
seg000:079E		    retn
seg000:079E sub_6B6	    endp
seg000:079E
seg000:079F ; ───────────────────────────────────────────────────────────────────────────
seg000:079F ; START OF FUNCTION	CHUNK FOR sub_9A0B
seg000:079F
seg000:079F loc_79F:				    ; CODE XREF: sub_9A0B+141j
seg000:079F		    push    ax
seg000:07A0		    push    bx
seg000:07A1		    push    cx
seg000:07A2		    push    dx
seg000:07A3		    push    bp
seg000:07A4		    push    di
seg000:07A5		    push    es
seg000:07A6		    call    sub_95E
seg000:07A9		    call    sub_88E
seg000:07AC
seg000:07AC loc_7AC:				    ; CODE XREF: sub_9A0B-91D6j
seg000:07AC					    ; sub_9A0B-91C1j
seg000:07AC		    call    sub_8E0
seg000:07AF		    jnb	    short loc_7B4
seg000:07B1		    jmp	    loc_850
seg000:07B4 ; ───────────────────────────────────────────────────────────────────────────
seg000:07B4
seg000:07B4 loc_7B4:				    ; CODE XREF: sub_9A0B-925Cj
seg000:07B4					    ; sub_9A0B-91DCj
seg000:07B4		    mov	    di,	0Ah
seg000:07B7
seg000:07B7 loc_7B7:				    ; CODE XREF: sub_9A0B:loc_84Dj
seg000:07B7		    push    cx
seg000:07B8		    push    dx
seg000:07B9		    push    si
seg000:07BA		    push    di
seg000:07BB		    cli
seg000:07BC		    cld
seg000:07BD		    mov	    al,	dh
seg000:07BF		    out	    0Ch, al	    ; DMA controller, 8237A-5.
seg000:07BF					    ; clear byte pointer flip-flop.
seg000:07C1		    mov	    dx,	8
seg000:07C4		    mov	    di,	7F6h
seg000:07C7		    mov	    bp,	bx
seg000:07C9		    mov	    si,	bx
seg000:07CB		    mov	    ax,	ds
seg000:07CD		    mov	    es,	ax
seg000:07CF		    mov	    al,	0A0h ; 'á'
seg000:07D1		    out	    8, al	    ; DMA 8237A-5. cmd reg bits:
seg000:07D1					    ; 0: enable	mem-to-mem DMA
seg000:07D1					    ; 1: enable	Ch0 address hold
seg000:07D1					    ; 2: disable controller
seg000:07D1					    ; 3: compressed timing mode
seg000:07D1					    ; 4: enable	rotating priority
seg000:07D1					    ; 5: extended write	mode; 0=late write
seg000:07D1					    ; 6: DRQ sensing - active high
seg000:07D1					    ; 7: DACK sensing -	active high
seg000:07D3		    aam
seg000:07D5		    aam
seg000:07D7		    aam
seg000:07D9		    aam
seg000:07DB		    mov	    ah,	0Ch
seg000:07DD		    mov	    ch,	0
seg000:07DF		    mov	    bh,	2
seg000:07E1		    mov	    bl,	0F6h ; '÷'
seg000:07E3		    lodsb
seg000:07E4		    xchg    ax,	cx
seg000:07E5
seg000:07E5 loc_7E5:				    ; CODE XREF: sub_9A0B-9221j
seg000:07E5		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:07E5					    ; 0-3: channel 0-3 has reached terminal count
seg000:07E5					    ; 4-7: channel 0-3 has a request pending
seg000:07E6		    sar	    al,	1
seg000:07E8		    jnb	    short loc_80A
seg000:07EA		    jnz	    short loc_7E5
seg000:07EC
seg000:07EC loc_7EC:				    ; CODE XREF: sub_9A0B-921Cj
seg000:07EC		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:07EC					    ; 0-3: channel 0-3 has reached terminal count
seg000:07EC					    ; 4-7: channel 0-3 has a request pending
seg000:07ED		    and	    al,	bl
seg000:07EF		    jz	    short loc_7EC
seg000:07F1		    xchg    ax,	cx
seg000:07F2		    out	    0Eh, al	    ; DMA controller, 8237A-5.
seg000:07F2					    ; Clear mask registers.
seg000:07F2					    ; Any OUT enables all 4 channels.
seg000:07F4		    jmp	    short loc_801
seg000:07F4 ; END OF FUNCTION CHUNK FOR	sub_9A0B
seg000:07F6 ; ───────────────────────────────────────────────────────────────────────────
seg000:07F6
seg000:07F6 loc_7F6:				    ; CODE XREF: seg000:07F8j
seg000:07F6		    in	    al,	dx
seg000:07F7		    dec	    ax
seg000:07F8		    jz	    short loc_7F6
seg000:07FA		    cmp	    al,	bh
seg000:07FC		    jnz	    short loc_80A
seg000:07FE ; START OF FUNCTION	CHUNK FOR sub_9A0B
seg000:07FE
seg000:07FE loc_7FE:				    ; CODE XREF: sub_9A0B-9205j
seg000:07FE		    xchg    ax,	cx
seg000:07FF		    out	    0Eh, al	    ; DMA controller, 8237A-5.
seg000:07FF					    ; Clear mask registers.
seg000:07FF					    ; Any OUT enables all 4 channels.
seg000:0801
seg000:0801 loc_801:				    ; CODE XREF: sub_9A0B-9217j
seg000:0801		    lodsb
seg000:0802		    xchg    ax,	cx
seg000:0803		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:0803					    ; 0-3: channel 0-3 has reached terminal count
seg000:0803					    ; 4-7: channel 0-3 has a request pending
seg000:0804		    and	    al,	bh
seg000:0806		    jnz	    short loc_7FE
seg000:0808		    jmp	    di
seg000:080A ; ───────────────────────────────────────────────────────────────────────────
seg000:080A
seg000:080A loc_80A:				    ; CODE XREF: sub_9A0B-9223j
seg000:080A					    ; seg000:07FCj
seg000:080A		    mov	    bx,	bp
seg000:080C		    add	    bx,	200h
seg000:0810		    pop	    di
seg000:0811		    pop	    si
seg000:0812		    pop	    dx
seg000:0813		    pop	    cx
seg000:0814		    in	    al,	8	    ; DMA 8237A-5. status register bits:
seg000:0814					    ; 0-3: channel 0-3 has reached terminal count
seg000:0814					    ; 4-7: channel 0-3 has a request pending
seg000:0816		    and	    al,	0FFh
seg000:0818		    jnz	    short loc_838
seg000:081A		    loop    loc_828
seg000:081C		    pop	    es
seg000:081D		    pop	    di
seg000:081E		    pop	    bp
seg000:081F		    pop	    dx
seg000:0820		    pop	    cx
seg000:0821		    pop	    bx
seg000:0822		    pop	    ax
seg000:0823		    call    sub_957
seg000:0826		    clc
seg000:0827		    retn
seg000:0828 ; ───────────────────────────────────────────────────────────────────────────
seg000:0828
seg000:0828 loc_828:				    ; CODE XREF: sub_9A0B-91F1j
seg000:0828		    inc	    dh
seg000:082A		    cmp	    dh,	9
seg000:082D		    jnb	    short loc_831
seg000:082F		    jmp	    short loc_7B4
seg000:0831 ; ───────────────────────────────────────────────────────────────────────────
seg000:0831
seg000:0831 loc_831:				    ; CODE XREF: sub_9A0B-91DEj
seg000:0831		    inc	    dl
seg000:0833		    mov	    dh,	1
seg000:0835		    jmp	    loc_7AC
seg000:0838 ; ───────────────────────────────────────────────────────────────────────────
seg000:0838
seg000:0838 loc_838:				    ; CODE XREF: sub_9A0B-91F3j
seg000:0838		    mov	    bx,	bp
seg000:083A		    dec	    di
seg000:083B		    jz	    short loc_855
seg000:083D		    test    al,	3Ch
seg000:083F		    jz	    short loc_84D
seg000:0841		    test    di,	1
seg000:0845		    jnz	    short loc_84D
seg000:0847		    call    sub_93F
seg000:084A		    jmp	    loc_7AC
seg000:084D ; ───────────────────────────────────────────────────────────────────────────
seg000:084D
seg000:084D loc_84D:				    ; CODE XREF: sub_9A0B-91CCj
seg000:084D					    ; sub_9A0B-91C6j
seg000:084D		    jmp	    loc_7B7
seg000:0850 ; ───────────────────────────────────────────────────────────────────────────
seg000:0850
seg000:0850 loc_850:				    ; CODE XREF: sub_9A0B-925Aj
seg000:0850		    test    al,	80h
seg000:0852		    jz	    short loc_855
seg000:0854		    clc
seg000:0855
seg000:0855 loc_855:				    ; CODE XREF: sub_9A0B-91D0j
seg000:0855					    ; sub_9A0B-91B9j
seg000:0855		    pop	    es
seg000:0856		    pop	    di
seg000:0857		    pop	    bp
seg000:0858		    pop	    dx
seg000:0859		    pop	    cx
seg000:085A		    pop	    bx
seg000:085B		    lahf
seg000:085C		    add	    sp,	2
seg000:085F		    sahf
seg000:0860		    call    sub_957
seg000:0863		    jnb	    short loc_868
seg000:0865		    jmp	    loc_78F
seg000:0868 ; ───────────────────────────────────────────────────────────────────────────
seg000:0868
seg000:0868 loc_868:				    ; CODE XREF: sub_9A0B-91A8j
seg000:0868		    test    al,	80h
seg000:086A		    jz	    short loc_86F
seg000:086C		    jmp	    loc_787
seg000:086F ; ───────────────────────────────────────────────────────────────────────────
seg000:086F
seg000:086F loc_86F:				    ; CODE XREF: sub_9A0B-91A1j
seg000:086F		    test    al,	40h
seg000:0871		    jz	    short loc_876
seg000:0873		    jmp	    loc_783
seg000:0876 ; ───────────────────────────────────────────────────────────────────────────
seg000:0876
seg000:0876 loc_876:				    ; CODE XREF: sub_9A0B-919Aj
seg000:0876		    test    al,	20h
seg000:0878		    jz	    short loc_87D
seg000:087A		    jmp	    loc_797
seg000:087D ; ───────────────────────────────────────────────────────────────────────────
seg000:087D
seg000:087D loc_87D:				    ; CODE XREF: sub_9A0B-9193j
seg000:087D		    test    al,	10h
seg000:087F		    jz	    short loc_884
seg000:0881		    jmp	    loc_793
seg000:0884 ; ───────────────────────────────────────────────────────────────────────────
seg000:0884
seg000:0884 loc_884:				    ; CODE XREF: sub_9A0B-918Cj
seg000:0884		    test    al,	0Ch
seg000:0886		    jz	    short loc_88B
seg000:0888		    jmp	    loc_78B
seg000:088B ; ───────────────────────────────────────────────────────────────────────────
seg000:088B
seg000:088B loc_88B:				    ; CODE XREF: sub_9A0B-9185j
seg000:088B		    jmp	    loc_79B
seg000:088B ; END OF FUNCTION CHUNK FOR	sub_9A0B
seg000:088E
seg000:088E ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:088E
seg000:088E
seg000:088E sub_88E	    proc near		    ; CODE XREF: sub_6B6+10p
seg000:088E					    ; sub_9A0B-9262p
seg000:088E		    push    bx
seg000:088F		    push    ax
seg000:0890		    in	    al,	1Ch
seg000:0892		    and	    al,	3
seg000:0894		    mov	    cs:byte_6B0, 0FCh ;	'ⁿ'
seg000:089A		    or	    cs:byte_6B0, al
seg000:089F		    pop	    ax
seg000:08A0		    mov	    bh,	0
seg000:08A2		    mov	    bl,	cs:byte_6B0
seg000:08A7		    mov	    cs:byte_6B0, al
seg000:08AB		    and	    al,	3
seg000:08AD		    and	    bl,	3
seg000:08B0		    cmp	    al,	bl
seg000:08B2		    jz	    short loc_8D1
seg000:08B4		    push    ax
seg000:08B5		    in	    al,	0Ah	    ; DMA controller, 8237A-5.
seg000:08B5					    ; single mask bit register
seg000:08B5					    ; 0-1: select channel (00=0; 01=1; 10=2; 11=3)
seg000:08B5					    ; 2: 1=set mask for	channel; 0=clear mask (enable)
seg000:08B7		    mov	    cs:[bx+6B1h], al
seg000:08BC		    pop	    ax
seg000:08BD		    mov	    bl,	al
seg000:08BF		    and	    al,	3
seg000:08C1		    out	    1Ch, al
seg000:08C3		    mov	    al,	cs:[bx+6B1h]
seg000:08C8		    out	    0Ah, al	    ; DMA controller, 8237A-5.
seg000:08C8					    ; single mask bit register
seg000:08C8					    ; 0-1: select channel (00=0; 01=1; 10=2; 11=3)
seg000:08C8					    ; 2: 1=set mask for	channel; 0=clear mask (enable)
seg000:08CA		    cmp	    al,	28h ; '('
seg000:08CC		    jb	    short loc_8D1
seg000:08CE		    call    sub_93F
seg000:08D1
seg000:08D1 loc_8D1:				    ; CODE XREF: sub_88E+24j
seg000:08D1					    ; sub_88E+3Ej
seg000:08D1		    mov	    ax,	dx
seg000:08D3		    mov	    dl,	8
seg000:08D5		    div	    dl
seg000:08D7		    inc	    ah
seg000:08D9		    mov	    dx,	ax
seg000:08DB		    and	    dh,	0Fh
seg000:08DE		    pop	    bx
seg000:08DF		    retn
seg000:08DF sub_88E	    endp
seg000:08DF
seg000:08E0
seg000:08E0 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:08E0
seg000:08E0
seg000:08E0 sub_8E0	    proc near		    ; CODE XREF: sub_6B6:loc_6C9p
seg000:08E0					    ; sub_9A0B:loc_7ACp
seg000:08E0		    push    bx
seg000:08E1		    push    cx
seg000:08E2		    push    dx
seg000:08E3		    add	    dl,	dl
seg000:08E5		    mov	    bx,	0Ah
seg000:08E8
seg000:08E8 loc_8E8:				    ; CODE XREF: sub_8E0+41j
seg000:08E8		    cmp	    dl,	cs:byte_6B5
seg000:08ED		    jz	    short loc_8F4
seg000:08EF		    mov	    cx,	14Dh
seg000:08F2
seg000:08F2 loc_8F2:				    ; CODE XREF: sub_8E0:loc_8F2j
seg000:08F2		    loop    loc_8F2
seg000:08F4
seg000:08F4 loc_8F4:				    ; CODE XREF: sub_8E0+Dj
seg000:08F4		    mov	    al,	dl
seg000:08F6		    shr	    al,	1
seg000:08F8		    out	    0Eh, al	    ; DMA controller, 8237A-5.
seg000:08F8					    ; Clear mask registers.
seg000:08F8					    ; Any OUT enables all 4 channels.
seg000:08FA		    mov	    al,	18h
seg000:08FC		    out	    8, al	    ; DMA 8237A-5. cmd reg bits:
seg000:08FC					    ; 0: enable	mem-to-mem DMA
seg000:08FC					    ; 1: enable	Ch0 address hold
seg000:08FC					    ; 2: disable controller
seg000:08FC					    ; 3: compressed timing mode
seg000:08FC					    ; 4: enable	rotating priority
seg000:08FC					    ; 5: extended write	mode; 0=late write
seg000:08FC					    ; 6: DRQ sensing - active high
seg000:08FC					    ; 7: DACK sensing -	active high
seg000:08FE		    in	    al,	1Ch
seg000:0900		    mov	    ah,	dl
seg000:0902		    shl	    ah,	1
seg000:0904		    shl	    ah,	1
seg000:0906		    and	    ah,	4
seg000:0909		    and	    al,	0FBh
seg000:090B		    or	    al,	ah
seg000:090D		    out	    1Ch, al
seg000:090F
seg000:090F loc_90F:				    ; CODE XREF: sub_8E0+33j
seg000:090F		    in	    al,	8	    ; DMA 8237A-5. status register bits:
seg000:090F					    ; 0-3: channel 0-3 has reached terminal count
seg000:090F					    ; 4-7: channel 0-3 has a request pending
seg000:0911		    test    al,	1
seg000:0913		    jnz	    short loc_90F
seg000:0915		    mov	    cx,	8214h
seg000:0918
seg000:0918 loc_918:				    ; CODE XREF: sub_8E0+3Ej
seg000:0918		    in	    al,	8	    ; DMA 8237A-5. status register bits:
seg000:0918					    ; 0-3: channel 0-3 has reached terminal count
seg000:0918					    ; 4-7: channel 0-3 has a request pending
seg000:091A		    test    al,	80h
seg000:091C		    jz	    short loc_925
seg000:091E		    loop    loc_918
seg000:0920		    dec	    bx
seg000:0921		    jnz	    short loc_8E8
seg000:0923		    jmp	    short loc_936
seg000:0925 ; ───────────────────────────────────────────────────────────────────────────
seg000:0925
seg000:0925 loc_925:				    ; CODE XREF: sub_8E0+3Cj
seg000:0925		    cmp	    dl,	cs:byte_6B5
seg000:092A		    jz	    short loc_931
seg000:092C		    mov	    cx,	14Dh
seg000:092F
seg000:092F loc_92F:				    ; CODE XREF: sub_8E0:loc_92Fj
seg000:092F		    loop    loc_92F
seg000:0931
seg000:0931 loc_931:				    ; CODE XREF: sub_8E0+4Aj
seg000:0931		    mov	    cs:byte_6B5, dl
seg000:0936
seg000:0936 loc_936:				    ; CODE XREF: sub_8E0+43j
seg000:0936		    pop	    dx
seg000:0937		    pop	    cx
seg000:0938		    pop	    bx
seg000:0939		    and	    al,	90h
seg000:093B		    jz	    short locret_93E
seg000:093D		    stc
seg000:093E
seg000:093E locret_93E:				    ; CODE XREF: sub_8E0+5Bj
seg000:093E		    retn
seg000:093E sub_8E0	    endp
seg000:093E
seg000:093F
seg000:093F ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:093F
seg000:093F
seg000:093F sub_93F	    proc near		    ; CODE XREF: sub_6B6+Cp
seg000:093F					    ; sub_6B6+A0p ...
seg000:093F		    mov	    al,	8
seg000:0941		    out	    8, al	    ; DMA 8237A-5. cmd reg bits:
seg000:0941					    ; 0: enable	mem-to-mem DMA
seg000:0941					    ; 1: enable	Ch0 address hold
seg000:0941					    ; 2: disable controller
seg000:0941					    ; 3: compressed timing mode
seg000:0941					    ; 4: enable	rotating priority
seg000:0941					    ; 5: extended write	mode; 0=late write
seg000:0941					    ; 6: DRQ sensing - active high
seg000:0941					    ; 7: DACK sensing -	active high
seg000:0943
seg000:0943 loc_943:				    ; CODE XREF: sub_93F+8j
seg000:0943		    in	    al,	8	    ; DMA 8237A-5. status register bits:
seg000:0943					    ; 0-3: channel 0-3 has reached terminal count
seg000:0943					    ; 4-7: channel 0-3 has a request pending
seg000:0945		    test    al,	1
seg000:0947		    jnz	    short loc_943
seg000:0949		    push    cx
seg000:094A		    mov	    cx,	1B51h
seg000:094D
seg000:094D loc_94D:				    ; CODE XREF: sub_93F:loc_94Dj
seg000:094D		    loop    loc_94D
seg000:094F		    pop	    cx
seg000:0950		    mov	    cs:byte_6B5, 0
seg000:0956		    retn
seg000:0956 sub_93F	    endp
seg000:0956
seg000:0957
seg000:0957 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:0957
seg000:0957
seg000:0957 sub_957	    proc near		    ; CODE XREF: sub_6B6+7Fp
seg000:0957					    ; sub_6B6+BAp ...
seg000:0957		    push    ax
seg000:0958		    mov	    al,	27h ; '''
seg000:095A		    out	    2Ah, al
seg000:095C		    pop	    ax
seg000:095D		    retn
seg000:095D sub_957	    endp
seg000:095D
seg000:095E
seg000:095E ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:095E
seg000:095E
seg000:095E sub_95E	    proc near		    ; CODE XREF: sub_6B6+8p
seg000:095E					    ; sub_9A0B-9265p
seg000:095E		    push    ax
seg000:095F		    mov	    al,	5
seg000:0961		    out	    2Ah, al
seg000:0963		    pop	    ax
seg000:0964		    retn
seg000:0964 sub_95E	    endp
seg000:0964
seg000:0964 ; ───────────────────────────────────────────────────────────────────────────
seg000:0965		    db 30CBh dup(0), 30h, 2Bh, 4Eh, 43h, 4Eh, 40h, 4Eh,	4Ch
seg000:0965		    db 4Eh, 4Fh, 4Eh, 52h, 4Eh,	55h, 4Eh, 46h, 4Eh, 49h, 30h
seg000:0965		    db 31h, 4 dup(3), 3	dup(5),	2 dup(3), 7, 1E02h dup(0)
seg000:0965		    db 82h, 58h, 0AFh, 58h, 0DCh, 58h, 8, 59h, 35h, 59h, 62h
seg000:0965		    db 59h, 8Fh, 59h, 0BCh, 59h, 0E9h, 59h, 16h, 5Ah, 43h
seg000:0965		    db 5Ah, 6Fh, 5Ah, 9Bh, 5Ah,	0C8h, 5Ah, 0F4h, 5Ah, 20h
seg000:0965		    db 5Bh, 4Ch, 5Bh, 79h, 5Bh,	0A6h, 5Bh, 0D2h, 5Bh, 0FFh
seg000:0965		    db 5Bh, 2Ch, 5Ch, 59h, 5Ch,	86h, 5Ch, 86h, 5Ch, 0E0h, 6 dup(0)
seg000:0965		    db 7, 0C1h,	0Eh dup(0), 20h, 5, 8 dup(0), 3, 6Dh, 5Bh
seg000:0965		    db 8Bh, 54h, 60h, 0, 1Dh, 5Eh, 0AFh, 0D7h, 0AFh, 0FFh
seg000:0965		    db 0F0h, 20h, 0F7h,	78h, 21h, 0A0h,	13h, 0BCh, 0A9h, 1Ah
seg000:0965		    db 0B1h, 80h, 7Bh, 71h, 97h, 58h, 1, 0FEh, 0F8h, 21h, 9Fh
seg000:0965		    db 59h, 15h, 80h, 1Fh, 0D5h, 9, 48h, 81h, 0AFh, 0F8h, 41h
seg000:0965		    db 24h, 0Fh, 0DFh, 88h, 58h, 85h, 0A1h, 0DAh, 0B1h,	0A0h
seg000:0965		    db 1Bh, 3 dup(0FFh), 0F7h, 0BFh, 88h, 2 dup(10h), 1, 82h
seg000:0965		    db 47h, 0DFh, 0FFh,	88h, 11h, 10h, 20h, 8Eh, 0F5h, 0FEh
seg000:0965		    db 0AFh, 0D8h, 44h,	42h, 21h, 88h, 45h, 2, 0F9h, 8Dh, 0FFh
seg000:0965		    db 42h, 81h, 80h, 40h, 76h,	0AFh, 8Ah, 5, 0, 81h, 0FBh
seg000:0965		    db 0FDh, 0F7h, 0BFh, 0FCh, 24h, 3Fh, 87h, 0E7h, 0E1h, 80h
seg000:0965		    db 81h, 1, 84h, 18h, 21h, 84h, 81h,	21h, 0DCh, 81h,	3Bh
seg000:0965		    db 88h, 0EFh, 11h, 0D9h, 81h, 9Bh, 51h, 0, 8Ah, 0D9h, 0
seg000:0965		    db 9Bh, 89h, 0, 91h, 89h, 0, 91h, 81h, 1, 0C1h, 8Fh, 0
seg000:0965		    db 71h, 0F9h, 0FFh,	5Fh, 0FDh, 2 dup(0FFh),	0BEh, 10h
seg000:0965		    db 24h, 0, 19h, 14h, 15h, 7Ah, 6Dh,	5Fh, 4,	0EDh, 95h
seg000:0965		    db 0C7h, 0F0h, 6, 10h, 40h,	46h, 7Ah, 15h, 1Fh, 31h, 6Dh
seg000:0965		    db 44h, 43h, 95h, 0A5h, 5Dh, 0Ch, 0C6h, 11h, 44h, 26h
seg000:0965		    db 5Ah, 50h, 40h, 30h, 2 dup(7Fh), 0FFh, 0EFh, 7Fh,	3 dup(0FFh)
seg000:0965		    db 0ECh, 71h, 88h, 0, 73h, 82h, 1, 0C7h, 0C2h, 1Ch,	38h
seg000:0965		    db 51h, 0C6h, 63h, 0F8h, 2Ch, 10h, 3Ch, 79h, 86h, 60h
seg000:0965		    db 71h, 1Ch, 8Ch, 43h, 0FDh, 0D7h, 18h, 4, 0, 88h, 1, 0C6h
seg000:0965		    db 0C7h, 1,	87h, 37h, 3 dup(0FFh), 0FEh, 0FFh, 0F8h, 7Fh
seg000:0965		    db 0FFh, 0E4h, 40h,	89h, 0FEh, 90h,	48h, 0A5h, 0F0h, 15h
seg000:0965		    db 2Ah, 3, 0F7h, 50h, 2Bh, 0BEh, 54h, 0, 0Ah, 99h, 2 dup(0)
seg000:0965		    db 2, 76h, 0D4h, 0Ah, 0DBh,	0C2h, 14h, 0A9h, 0Fh, 0E1h
seg000:0965		    db 12h, 21h, 78h, 11h, 2, 27h, 0EFh, 0FEh, 1Fh, 0FFh, 8Ah
seg000:0965		    db 6Ah, 44h, 54h, 8, 1, 0, 0Bh, 0E2h, 24h, 4, 20h, 0, 10h
seg000:0965		    db 0, 4, 2 dup(0), 4, 0, 0A1h, 0, 1Fh, 0, 10h, 2 dup(0)
seg000:0965		    db 2, 0, 1,	4 dup(0), 0A0h,	0, 4, 0, 10h, 2	dup(0),	24h
seg000:0965		    db 48h, 84h, 49h, 4, 9 dup(0), 1, 0C0h, 4, 10h, 0, 4, 0
seg000:0965		    db 7, 2 dup(0), 60h, 0, 1Eh, 20h, 1Eh, 0, 41h, 80h,	0
seg000:0965		    db 38h, 0, 8, 0, 2,	2 dup(0), 0E0h,	0, 1, 0F2h, 0, 40h
seg000:0965		    db 0, 57h, 80h, 0E3h, 0FFh,	7Fh, 0FCh, 82h,	5, 0, 1Ah
seg000:0965		    db 2Ah, 4, 7Ch, 60h, 0A2h, 0D0h, 1,	2 dup(82h), 7Dh, 6Eh
seg000:0965		    db 4Ah, 88h, 0, 18h, 22h, 20h, 0, 60h, 0E0h, 9Bh, 5Fh
seg000:0965		    db 82h, 0Bh, 40h, 4, 0Ch, 81h, 1Fh,	10h, 0,	14h, 0,	40h
seg000:0965		    db 0FFh, 0DFh, 4 dup(0FFh),	2 dup(80h), 8, 0, 80h, 82h
seg000:0965		    db 8, 20h, 2 dup(82h), 8, 20h, 81h,	0EFh, 0BEh, 0FBh, 81h
seg000:0965		    db 80h, 8, 0, 81h, 0AFh, 88h, 0FBh,	81h, 0A8h, 0A2h, 88h
seg000:0965		    db 1, 0A8h,	88h, 8Bh, 80h, 0A0h, 8,	0, 80h,	0BFh, 2	dup(0FFh)
seg000:0965		    db 88h, 0FFh
seg000:5A70		    db 0F5h, 56h, 0Ah, 0DDh, 1Ah, 8Ah, 15h, 2Ah, 0AFh, 55h
seg000:5A70		    db 0AEh, 0B0h, 16h,	0BEh, 0D5h, 58h, 23h, 55h, 6Eh,	0BCh
seg000:5A70		    db 0, 0AEh,	0F5h, 56h, 0EAh, 0C5h, 5Eh, 8Bh, 55h, 60h
seg000:5A70		    db 8Dh, 55h, 0AAh, 0B5h, 76h, 0EAh,	81h, 0Ah, 0ABh,	0DDh
seg000:5A70		    db 42h, 0Fh, 0FFh, 3Bh, 7Bh, 7Fh, 0FCh, 4, 5, 3 dup(10h)
seg000:5A70		    db 14h, 0, 60h, 0, 91h, 0FBh, 80h, 40h, 6Ch, 6, 3 dup(0)
seg000:5A70		    db 18h, 0, 6, 0, 60h, 1, 10h, 1, 80h, 0, 40h, 4, 12h, 1
seg000:5A70		    db 0E0h, 10h, 2, 4,	0, 4Eh,	0DEh, 0D7h, 0FFh, 0FBh,	0FFh
seg000:5A70		    db 2 dup(0DFh), 0E0h, 0E3h,	0C9h, 87h, 0C0h, 41h, 80h
seg000:5A70		    db 83h, 0C0h, 1Bh, 80h, 0C3h, 0C0h,	0Fh, 0,	1, 84h,	2 dup(0)
seg000:5A70		    db 61h, 80h, 7, 0, 0C1h, 80h, 0Dh, 0E0h, 0E1h, 0A0h, 4
seg000:5A70		    db 0F8h, 71h, 0B8h,	0C0h, 0Dh, 1Bh,	0BBh, 0FFh, 2 dup(0DFh)
seg000:5A70		    db 10h, 7, 1, 0B0h,	63h, 9,	21h, 24h, 20h, 85h, 0C0h, 80h
seg000:5A70		    db 1Dh, 0C0h, 80h, 94h, 0Eh, 0E1h, 4, 20h, 84h, 10h, 82h
seg000:5A70		    db 10h, 42h, 8, 40h, 1Eh, 0E0h, 50h, 3Bh, 84h, 10h,	0B8h
seg000:5A70		    db 10h, 3, 38h, 41h, 0Bh, 21h, 4, 3Bh, 81h,	40h, 0FBh
seg000:5A70		    db 2 dup(0FFh), 0D7h, 0Ah, 2 dup(0), 91h, 3	dup(0AAh)
seg000:5A70		    db 91h, 82h, 2 dup(0), 97h,	86h, 2 dup(0AAh), 91h, 0F0h
seg000:5A70		    db 2 dup(0), 0DDh, 9Eh, 2 dup(0AAh), 81h, 82h, 2 dup(0)
seg000:5A70		    db 2Dh, 2 dup(0AAh), 0ABh, 79h, 80h, 0, 2, 41h, 0FBh, 0FFh
seg000:5A70		    db 0FEh, 0D7h, 17h,	1Dh, 3,	7, 2 dup(0), 0C7h, 82h,	19h
seg000:5A70		    db 0CCh, 23h, 0, 42h, 67h, 86h, 0A4h, 0Ch, 3Ah, 5Eh, 69h
seg000:5A70		    db 0B4h, 0B2h, 99h,	61h, 2Dh, 93h, 0B2h, 5Dh, 8Eh, 65h
seg000:5A70		    db 4Ch, 4, 44h, 18h, 0CCh, 7Fh, 38h, 80h, 6, 0, 1, 0C1h
seg000:5A70		    db 81h, 71h, 0D0h, 5Bh, 0EAh, 41h, 0B0h, 58h, 7Dh, 5Ch
seg000:5A70		    db 19h, 6Eh, 0B4h, 18h, 5, 57h, 0E9h, 9, 72h, 0A8h,	20h
seg000:5A70		    db 0BFh, 68h, 45h, 55h, 0D1h, 1, 5Fh, 0D8h,	41h, 0ADh
seg000:5A70		    db 0D2h, 4,	0BFh, 0D8h, 25h, 6Ah, 18h, 0BAh, 0B9h, 16h
seg000:5A70		    db 3Dh, 88h, 5Bh, 11h, 0, 50h, 3Ah,	0FFh, 0FBh, 0DFh, 0FFh
seg000:5A70		    db 82h, 0Ah, 50h, 41h, 82h,	0Ah, 50h, 41h, 80h, 0Ah, 50h
seg000:5A70		    db 1, 92h, 0A8h, 15h, 41h, 92h, 0AEh, 75h, 77h, 0D6h, 0A8h
seg000:5A70		    db 15h, 51h, 92h, 2	dup(0),	51h, 82h, 8, 10h, 51h, 82h
seg000:5A70		    db 8, 10h, 41h, 0FFh, 0FBh,	0DFh, 0FFh, 5Bh, 0BFh, 0F5h
seg000:5A70		    db 22h, 0, 69h, 0BBh, 7Dh, 44h, 10h, 1Bh, 0AFh, 0AEh, 0C0h
seg000:5A70		    db 1, 19h, 68h, 1Ah, 0B0h, 60h, 15h, 0BEh, 3, 0ACh,	40h
seg000:5A70		    db 15h, 6Ah, 0, 0AAh, 54h, 15h, 0Ah, 0BEh, 0ABh, 50h, 10h
seg000:5A70		    db 46h, 0FAh, 0FEh,	0B1h, 0, 5, 77h, 7Fh, 90h, 3Eh,	0CEh
seg000:5A70		    db 27h, 8Bh, 18h, 1, 0F6h, 0F2h, 4,	76h, 0ECh, 3, 96h
seg000:5A70		    db 98h, 9, 0D6h, 35h, 6, 1Fh, 0C0h,	2 dup(0), 2, 5 dup(0)
seg000:5A70		    db 40h, 5 dup(0), 2, 6 dup(0), 80h,	3 dup(0), 0FBh,	7Fh
seg000:5A70		    db 0DFh, 7Fh, 80h, 60h, 0, 1Ch, 0B4h, 0C0h,	0, 72h,	1Bh
seg000:5A70		    db 0EBh, 0FFh, 9Bh,	46h, 0,	0Eh, 48h, 52h, 0B0h, 39h, 21h
seg000:5A70		    db 0Ah, 0C0h, 26h, 0D1h, 0,	3, 0C8h, 6Fh, 0AFh, 0FFh, 2Dh
seg000:5A70		    db 30h, 0, 1Eh, 1, 80h, 0, 7Eh, 0DFh, 0F7h,	0DFh, 0, 3Fh
seg000:5A70		    db 0D0h, 2,	21h, 0,	2Eh, 0D0h, 2, 1, 0, 27h, 0D0h, 3, 47h
seg000:5A70		    db 0, 21h, 0, 3, 0FFh, 0E0h, 0, 8, 4, 0, 0A1h, 40h,	1Ah
seg000:5A70		    db 14h, 0, 80h, 40h, 0Fh, 7Eh, 1, 80h, 60h,	0Fh, 7Eh, 0
seg000:5A70		    db 10h, 0, 1, 0FEh,	5, 0FFh, 0C0h, 28h dup(0), 0Fh,	0FCh
seg000:5A70		    db 392h dup(0), 8, 0, 0Ah, 2, 0Ah, 0, 8
seg000:604B		    db 2, 9, 1,	8, 1, 0Ah, 1, 9, 0, 9, 2, 3, 0Fh, 1Eh, 9, 12h
seg000:604B		    db 3, 9, 2,	0Ch, 5,	9, 11h,	7, 9, 1Ah, 2, 15h, 0Ah,	4
seg000:604B		    db 1, 8, 0Bh, 7, 1,	11h, 0Bh, 11h, 0Eh, 14h, 0Fh, 3, 1
seg000:604B		    db 9, 0Dh, 5, 12h
seg000:607A a12345678901234 db '1234567890123456789012345',0 ; DATA XREF: sub_A279+1A1w
seg000:607A					    ; sub_A279+1A5w
seg000:6094		    db 2Ah dup(0), 4, 12h, 5, 10h, 6, 12h, 0Ah,	10h, 0Bh, 12h
seg000:6094		    db 0Ch, 10h, 0Dh, 12h, 3, 0Dh, 1, 0Dh, 1, 9, 1, 7, 2, 6
seg000:6094		    db 3, 7, 4,	9, 10h,	3 dup(0Dh), 0Fh, 6, 10h, 7, 0Ch, 9
seg000:6094		    db 0Dh, 8, 0Eh, 7, 42h dup(0), 50h,	30h, 5,	0Dh, 6,	10h
seg000:6094		    db 59h, 66h, 2 dup(0), 52h,	0A0h, 59h, 8, 2	dup(0),	52h
seg000:6094		    db 0ACh, 1Ah, 62h, 50h, 18h, 5, 0Dh, 4, 6, 59h, 3, 59h
seg000:6094		    db 80h, 52h, 0AEh, 59h, 30h, 80h, 20h, 52h,	0BAh, 38h
seg000:6094		    db 62h, 60h, 28h, 6, 10h, 5, 0Dh, 64h, 68h,	2 dup(0), 4
seg000:6094		    db 0A5h, 64h, 8, 2 dup(0), 54h, 0A5h, 60h, 62h, 30h, 26h
seg000:6094		    db 4, 6, 5,	0Dh, 2,	9Ch, 70h, 9Ch, 34h, 61h, 34h, 7, 0E0h
seg000:6094		    db 0, 34h, 0A4h, 86h, 62h, 80h, 1Eh, 8, 16h, 4, 9, 2, 7Ch
seg000:6094		    db 2 dup(0), 2, 0ACh, 4Ch, 7Bh, 2 dup(0), 2, 0BAh, 0ACh
seg000:6094		    db 62h, 40h, 1Ah, 5, 9, 4, 7, 3, 7Eh, 70h, 7Eh, 4, 6Bh
seg000:6094		    db 33h, 7Ah, 0B0h, 0, 54h, 6Bh, 0C9h, 62h, 90h, 18h, 0Ah
seg000:6094		    db 1Ah, 4, 6, 2, 64h, 2 dup(0), 2, 94h, 4Ch, 63h, 2	dup(0)
seg000:6094		    db 2, 0A0h,	0EEh, 62h, 4Ch,	18h, 5,	0Dh, 4,	6, 3, 76h
seg000:6094		    db 70h, 76h, 4, 63h, 33h, 72h, 0A8h, 0, 54h, 63h, 0Bh
seg000:6094		    db 63h, 58h, 2Ch, 3, 11h, 6, 0Eh, 5Fh, 5Dh,	2 dup(0), 58h
seg000:6094		    db 98h, 5Fh, 4, 2 dup(0), 58h, 0A4h, 30h, 63h, 30h,	26h
seg000:6094		    db 4, 2 dup(6), 0Bh, 2, 9Ch, 6Ch, 64h, 46h,	0A3h, 66h
seg000:6094		    db 8, 68h, 0, 46h, 0AFh, 49h, 63h, 50h, 24h, 1, 11h, 1
seg000:6094		    db 0Fh, 6Ch, 8Ch, 2	dup(0),	8Dh, 0A6h, 66h,	3, 2 dup(0)
seg000:6094		    db 66h, 56h, 6Fh, 63h, 60h,	2Ch, 1,	13h, 1,	14h, 6Ch, 8Ch
seg000:6094		    db 2 dup(0), 8Dh, 0A6h, 66h, 3, 2 dup(0), 66h, 56h,	6Fh
seg000:6094		    db 63h, 42h, 1, 6Ah, 2, 0, 42h, 1, 6Ah, 2, 5Ch, 42h, 1
seg000:6094		    db 6Ah, 2, 98h, 42h, 1, 6Ah, 2, 0BEh, 0FFh,	0, 0BEh, 42h
seg000:6094		    db 1, 0, 0BEh, 6Ah,	2, 0FFh, 42h, 1, 6Ah, 2, 0, 42h, 1
seg000:6094		    db 6Ah, 2, 2Ch, 2 dup(0), 42h, 1, 64h, 42h,	1, 6Ah,	2
seg000:6094		    db 7Eh, 42h, 1, 6Ah, 2, 0AAh, 42h, 1, 6Ah, 2, 0C6h,	0FFh
seg000:6094		    db 0, 0C6h,	42h, 1,	0, 0C6h, 6Ah, 2, 0FFh, 82h, 1, 7Eh
seg000:6094		    db 2, 0, 82h, 1, 7Eh, 2, 60h, 2, 0,	7Eh, 2,	0A2h, 2, 0
seg000:6094		    db 7Eh, 2, 0B2h, 0FFh, 0A2h, 0B2h, 2, 0, 0A2h, 0B2h, 42h
seg000:6094		    db 1, 0, 0A2h, 82h,	1, 0, 0B2h, 7Eh, 2, 0FFh, 0C4h,	0
seg000:6094		    db 0BCh, 1,	0, 0C4h, 0, 0BCh, 1, 58h, 2 dup(0), 7Ch, 2
seg000:6094		    db 9Ah, 2 dup(0), 7Ch, 2, 0C6h, 0FFh, 9Ah, 0C6h, 3 dup(0)
seg000:6094		    db 0C6h, 0C4h, 2 dup(0), 0C6h, 0BCh, 1, 9Ah, 0C6h, 7Ch
seg000:6094		    db 2, 0FFh,	2 dup(0), 18h, 2, 79h, 2 dup(0), 2Ch, 1, 0A7h
seg000:6094		    db 2 dup(0), 18h, 2, 0C7h, 0FFh, 79h, 0C7h,	2 dup(0), 79h
seg000:6094		    db 0C7h, 2Ch, 1, 79h, 0C7h,	18h, 2,	0FFh, 2	dup(0),	7Ch
seg000:6094		    db 2, 69h, 2 dup(0), 7Ch, 2, 77h, 2	dup(0),	7Ch, 2,	0C7h
seg000:6094		    db 0FFh, 69h, 0C7h,	2 dup(0), 77h, 0C7h, 0C8h, 0, 69h
seg000:6094		    db 77h, 40h, 1, 77h, 0C7h, 0B8h, 1,	69h, 0C7h, 7Ch,	2
seg000:6094		    db 0FFh, 2 dup(0), 18h, 2, 61h, 2 dup(0), 2Ch, 1, 8Fh
seg000:6094		    db 2 dup(0), 18h, 2, 0AFh, 0FFh, 61h, 0AFh,	2 dup(0), 61h
seg000:6094		    db 0AFh, 2Ch, 1, 61h, 0AFh,	18h, 2,	0FFh, 2	dup(0),	7Ch
seg000:6094		    db 2, 61h, 2 dup(0), 7Ch, 2, 6Fh, 2	dup(0),	7Ch, 2,	0BFh
seg000:6094		    db 0FFh, 61h, 0BFh,	2 dup(0), 6Fh, 0BFh, 0C8h, 0, 1, 6Fh
seg000:6325		    db 40h, 1, 6Fh, 0BFh, 0B8h,	1, 61h,	0BFh, 7Ch, 2, 0FFh
seg000:6325		    db 62h, 1, 7Ah, 2, 0, 62h, 1, 7Ah, 2, 54h, 62h, 1, 7Ah
seg000:6325		    db 2, 96h, 0FFh, 0,	96h, 62h, 1, 0,	96h, 7Ah, 2, 0FFh
seg000:6325		    db 94h, 1, 7Eh, 2, 0, 96h, 1, 7Ch, 2, 5Bh, 2 dup(0), 7Ch
seg000:6325		    db 2, 99h, 2 dup(0), 7Ch, 2, 0C7h, 0FFh, 99h, 0C7h,	2 dup(0)
seg000:6325		    db 1, 0C7h,	0C8h, 0, 1, 99h, 94h, 2	dup(1),	0C7h, 7Ch
seg000:6325		    db 2, 0FFh,	2 dup(0), 84h, 1, 0, 94h, 1, 7Ch, 2, 0,	4
seg000:6325		    db 0, 80h, 1, 2, 94h, 1, 7Ch, 2, 50h, 94h, 1, 7Ch, 2, 54h
seg000:6325		    db 94h, 1, 7Ch, 2, 86h, 0A4h, 1, 6Ch, 2, 8Ah, 4, 0,	80h
seg000:6325		    db 1, 0B6h,	2 dup(0), 84h, 1, 0B8h,	0A4h, 1, 6Ch, 2, 0B8h
seg000:6325		    db 0FFh, 0,	0B8h, 2	dup(0),	2, 0B6h, 4, 0, 2, 0B6h,	14h
seg000:6325		    db 0, 2, 0B6h, 18h,	0, 2, 0B6h, 6Ch, 1, 2, 0B6h, 70h, 1
seg000:6325		    db 2, 0B6h,	80h, 1,	0, 0B8h, 84h, 1, 0, 50h, 94h, 1, 54h
seg000:6325		    db 86h, 94h, 1, 8Ah, 0B8h, 0A4h, 1,	0, 50h,	7Ch, 2,	54h
seg000:6325		    db 87h, 7Ch, 2, 8Ah, 0B8h, 6Ch, 2, 0FFh, 12h, 14h, 3, 2
seg000:6325		    db 55h, 0Ch, 1Eh, 3, 2, 55h, 20h, 0Bh, 9, 8, 55h, 18h
seg000:6325		    db 0Fh, 5, 4, 55h, 1Eh, 0Ch, 1, 0, 55h, 24h, 0Ah, 7, 6
seg000:6325		    db 55h, 1Eh, 0Ch, 1, 0, 55h, 1Eh, 0Ch, 1, 0, 55h, 12h
seg000:6325		    db 14h, 9, 8, 58h, 1Eh, 0Ch, 1, 0, 58h, 20h, 0Bh, 9, 8
seg000:6325		    db 58h, 0Bh, 20h, 9, 8, 58h, 1Eh, 0Ch, 1, 0, 58h, 20h
seg000:6325		    db 0Bh, 9, 8, 58h, 0Bh, 20h, 9, 8, 58h, 20h, 0Bh, 9, 8
seg000:6325		    db 5Bh, 14h, 12h, 5, 4, 6Dh, 0Ch, 1Eh, 3, 2, 72h, 20h
seg000:6325		    db 0Bh, 9, 8, 5Bh, 15h, 11h, 5, 8, 72h, 0Ch, 1Eh, 9, 2
seg000:6325		    db 5Bh, 1Eh, 0Ch, 1, 0, 5Bh, 14h, 12h, 2 dup(0Ah), 55h
seg000:6325		    db 0Ah, 24h, 2 dup(0Ah), 5Bh, 0Ah, 24h, 2 dup(0Ah),	5Bh
seg000:6325		    db 8Ah, 64h, 9Ch, 64h, 0AEh, 64h, 0BEh, 64h, 0CEh, 64h
seg000:6325		    db 0E8h, 64h, 0FAh,	64h, 0Eh, 65h, 1Eh, 65h, 2Eh, 65h
seg000:6325		    db 3Eh, 65h, 4Eh, 65h, 5Eh,	65h, 6Eh, 65h, 7Eh, 65h, 8Eh
seg000:6325		    db 65h, 0AEh, 65h, 0BEh, 65h, 0CEh,	65h, 0DEh, 65h,	0F2h
seg000:6325		    db 65h, 2, 66h, 12h, 66h, 1Eh, 66h,	1Eh, 66h, 1, 0,	1
seg000:6325		    db 0Bh, 1, 12h, 6, 0Ah, 9, 4, 0Eh, 0Fh, 10h, 12h, 11h
seg000:6325		    db 3, 11h, 0Ah, 6, 1, 0, 7,	0Bh, 7,	6, 9, 0Ah, 0Ch,	2
seg000:6325		    db 11h, 8, 14h, 4, 18h, 8, 1Ah, 4, 6, 7, 0,	9, 2 dup(0Ah)
seg000:6325		    db 4, 11h, 0Ah, 16h, 0, 16h, 7, 1Fh, 7, 4, 0Ah, 5, 4, 7
seg000:6325		    db 9, 8, 2,	0Fh, 4,	10h, 9,	12h, 4,	13h, 0Ah, 0, 7,	5
seg000:6325		    db 9, 0Bh, 0, 0Bh, 6, 14h, 7, 17h, 2, 1Dh, 2, 1Dh, 8, 1
seg000:6325		    db 0, 9, 0Bh, 11h, 0, 17h, 8, 18h, 2 dup(5), 8, 6, 2, 9
seg000:6325		    db 7, 0Eh, 0, 11h, 6, 17h, 2, 1Bh, 5, 1Bh, 9, 23h, 2, 3
seg000:6325		    db 6, 8, 0,	8, 2 dup(0Bh), 4, 0Bh, 7, 12h, 4, 12h, 7, 15h
seg000:6325		    db 0, 15h, 0Bh, 1Ah, 6, 1, 6, 5, 4,	9, 0, 0Fh, 6, 11h
seg000:6325		    db 1, 7, 0Ah, 19h, 2, 1Ah, 0Ah, 0, 9, 3, 13h, 5, 0,	6
seg000:6325		    db 0Ah, 0Bh, 5, 2 dup(0Bh),	0Ch, 2 dup(11h), 0Bh, 3, 5
seg000:6325		    db 2 dup(7), 0Eh, 4, 0Eh
seg000:6535		    db 7, 17h, 0, 17h, 4, 17h, 7, 17h, 0Bh, 3 dup(6), 0Ah
seg000:6535		    db 9, 0, 0Eh, 7, 0Fh, 0, 12h, 0Ah, 1Ch, 0Ah, 1Eh, 2, 0
seg000:6535		    db 19h, 1, 7, 2, 10h, 6, 0Dh, 6, 1Ah, 7, 0,	8, 9, 0Ah
seg000:6535		    db 16h, 0, 6, 9, 4,	0Dh, 7,	0Eh, 3,	14h, 0,	16h, 0Bh, 19h
seg000:6535		    db 3, 1Dh, 7, 1, 2 dup(4), 9, 2 dup(5), 9, 2, 2 dup(9)
seg000:6535		    db 12h, 7, 18h, 2, 1Fh, 5, 0, 5, 0,	0Fh, 3,	18h, 6,	5
seg000:6535		    db 6, 0Eh, 6, 1Ch, 3 dup(0Ah), 13h,	2, 5, 6, 7, 0Ah, 0
seg000:6535		    db 0Ch, 0Ah, 12h, 0Ah, 14h,	0, 1Bh,	3, 1Bh,	2 dup(8), 4
seg000:6535		    db 0Ah, 6, 0Ch, 4, 0Eh, 6, 10h, 4, 12h, 6, 14h, 4, 16h
seg000:6535		    db 6, 2, 5,	2, 0Eh,	8, 0Dh,	0Ah, 5,	0Ch, 0,	0Eh, 9,	11h
seg000:6535		    db 4, 11h, 0Ch, 0, 0Ch, 1, 16h, 3, 2 dup(5), 11h, 6, 0Bh
seg000:6535		    db 8, 3, 8,	0Eh, 8,	19h, 3,	7, 8, 5, 0Ah, 5, 0Eh, 3, 11h
seg000:6535		    db 3, 15h, 5, 17h, 5, 19h, 9, 0, 0Bh, 2, 2 dup(6), 5, 6
seg000:6535		    db 0Ah, 8, 0Fh, 0Bh, 0Ah, 0Eh, 2, 0Fh, 6, 11h, 10h,	14h
seg000:6535		    db 0Bh, 0, 8, 2, 0Fh, 2, 17h, 4, 1Bh, 5, 0,	6, 0Ch,	9
seg000:6535		    db 12h, 0Bh, 3, 4, 3, 4, 8,	9, 4, 0Fh, 3, 0Fh, 8, 12h
seg000:6535		    db 5, 19h, 3, 19h, 8, 0, 0Eh, 9, 0Eh, 4, 11h, 0Ah, 2, 0Ah
seg000:6535		    db 6, 0Fh, 4, 0, 23h, 52h, 66h, 58h, 66h, 62h, 66h,	6Ch
seg000:6535		    db 66h, 78h, 66h, 82h, 66h,	8Ch, 66h, 94h, 66h, 0A0h, 66h
seg000:6535		    db 0AAh, 66h, 0B6h,	66h, 0C0h, 66h,	0C8h, 66h, 0D4h, 66h
seg000:6535		    db 0DCh, 66h, 0E4h,	66h, 0F0h, 66h,	0F8h, 66h, 0, 67h
seg000:6535		    db 0Ah, 67h, 12h, 67h, 1Ch,	67h, 24h, 67h, 26h, 67h, 26h
seg000:6535		    db 67h, 1, 2, 9, 7,	10h, 4,	3, 6, 8, 6, 5, 0Dh, 4, 16h
seg000:6535		    db 0Ah, 18h, 3, 1, 2 dup(5), 0Eh, 6, 10h, 3, 14h, 3, 1
seg000:6535		    db 6, 3, 6,	4, 2 dup(8), 0Dh, 14h, 6, 16h, 6, 1, 0Ah, 3
seg000:6535		    db 2 dup(8), 3, 1Bh, 2, 1Ch, 6, 0Ah, 8, 16h, 6, 1Bh, 3
seg000:6535		    db 1Ch, 1, 21h, 1, 2, 3, 9,	1, 17h,	5, 1Ah,	9, 2, 8, 0Bh
seg000:6535		    db 6, 0Dh, 8, 0Eh, 0Ah, 1Ah, 1, 1Ch, 0Ah, 2, 11h, 2, 1
seg000:6535		    db 0Dh, 2, 9, 6, 10h, 2, 1,	9, 0Eh,	1, 12h,	2, 12h,	3
seg000:6535		    db 1Ch, 9, 1Ch, 0Ah, 1, 3, 5, 7, 13h, 7, 17h, 3, 1Eh, 8
seg000:6535		    db 9, 3 dup(1), 5, 0Bh, 7, 18h, 4, 8, 6, 3,	7, 8, 12h
seg000:6535		    db 1, 16h, 1, 1Ch, 2, 16h, 1, 0Dh, 3, 1Dh, 9, 1Ah, 6, 5
seg000:6535		    db 15h, 9, 2, 9, 18h, 9, 1Dh, 1, 4,	1, 6, 3, 8, 0Ch, 3
seg000:6535		    db 1Eh, 1, 1Eh, 2, 1, 0Fh, 7, 2, 0Bh, 0Fh, 11h, 2, 3, 2 dup(1)
seg000:6535		    db 9, 0Ah, 0Dh, 1, 18h, 1, 9, 5, 9,	5, 1, 0Bh, 1, 10h
seg000:6535		    db 4 dup(1), 0Fh, 13h, 1, 13h, 0Fh,	0Ah, 8,	9, 10h,	2
seg000:6535		    db 12h, 4, 14h, 4, 17h, 1, 2 dup(4), 6, 1Ch, 2, 1Ch, 9
seg000:6535		    db 12h, 8, 1, 23h, 5Ah, 67h, 5Ch, 67h, 66h,	67h, 70h, 67h
seg000:6535		    db 7Ch, 67h, 86h, 67h, 90h,	67h, 98h, 67h, 0A4h, 67h, 0AEh
seg000:6535		    db 67h, 0BAh, 67h, 0C4h, 67h, 0CCh,	67h, 0D8h, 67h,	0E0h
seg000:6535		    db 67h, 0E8h, 67h, 0F4h
seg000:6749		    db 67h, 0FCh, 67h, 4, 68h, 10h, 68h, 18h, 68h, 22h,	68h
seg000:6749		    db 2Ah, 68h, 2Ch, 68h, 2Ch,	68h, 8,	0Ah, 1,	1Ch, 7,	0Ch
seg000:6749		    db 1, 1Bh, 6, 17h, 1, 1Ah, 1Eh, 3, 1Dh, 3, 1Ch, 3, 1Bh
seg000:6749		    db 3, 1Bh, 4, 10h, 0Dh, 0Fh, 0Dh, 5, 2, 0Bh, 6, 2 dup(0Ch)
seg000:6749		    db 13h, 0Ch, 11h, 5, 0Fh, 3, 10h, 2	dup(5),	6, 0Fh,	5
seg000:6749		    db 22h, 5, 13h, 5, 0Eh, 3, 1Ah, 6, 1Eh, 7, 1, 0Ah, 2, 0Ah
seg000:6749		    db 3, 0Ah, 4, 0Ah, 0Bh, 0, 4, 1, 11h, 4, 8,	7, 1, 2, 3
seg000:6749		    db 5, 6, 12h, 7, 12h, 8, 12h, 9, 12h, 0Ah, 12h, 2 dup(1)
seg000:6749		    db 13h, 7, 6, 1, 7,	4, 1Bh,	4, 1, 2, 1, 9, 1, 8, 17h, 7
seg000:6749		    db 1, 7, 1,	6, 1, 1Eh, 2, 1Eh, 3, 1Eh, 3, 1Dh, 12h,	0Ah
seg000:6749		    db 11h, 5, 13h, 0Ah, 1Bh, 3, 12h, 5, 14h, 0Ah, 1, 9, 19h
seg000:6749		    db 9, 0Eh, 5, 1, 8,	3, 1Eh,	3, 14h,	3, 0Ch,	3, 16h,	17h
seg000:6749		    db 9, 18h, 9, 5, 1,	1Ch, 2 dup(6), 5, 18h, 2 dup(8), 9
seg000:6749		    db 7, 9, 7,	8, 6, 8, 4, 1Ch, 3, 1Ch, 2, 1Ch, 1, 1Ch, 1Ah
seg000:6749		    db 7, 13h, 7, 0Ch, 7, 1Ch, 5, 19h, 3, 6, 3,	9, 8, 9, 7
seg000:6749		    db 0Ah, 7, 0Bh, 2 dup(7), 1, 8, 17h, 2, 0Bh, 8, 1, 7, 5
seg000:6749		    db 1Ch, 6, 0Dh, 6, 15h, 7, 13h, 3, 0Ch, 5, 2, 23h, 60h
seg000:6749		    db 68h, 66h, 68h, 74h, 68h,	7Eh, 68h, 8Ch, 68h, 98h, 68h
seg000:6749		    db 0A6h, 68h, 0B6h,	68h, 0C4h, 68h,	0D2h, 68h, 0DEh, 68h
seg000:6749		    db 0EEh, 68h, 0FAh,	68h, 0Ah, 69h, 18h, 69h, 28h, 69h
seg000:6749		    db 38h, 69h, 44h, 69h, 50h,	69h, 5Ch, 69h, 6Ch, 69h, 7Ch
seg000:6749		    db 69h, 8Ah, 69h, 94h, 69h,	94h, 69h, 1, 2,	9, 7, 10h
seg000:6749		    db 4, 0Ah, 3, 2 dup(6), 2, 0Ah, 1, 0Dh, 0Ah, 0Fh, 5, 12h
seg000:6749		    db 5, 1Bh, 1, 3, 2,	7, 0Ah,	6, 15h,	5, 1Eh,	4 dup(1), 0Dh
seg000:6749		    db 7, 6, 0Fh, 0Bh, 13h, 8, 16h, 1, 16h, 0Dh, 2, 4, 3, 0Ah
seg000:6749		    db 9, 7, 11h, 7, 15h, 3, 18h, 0Ah, 7, 5, 8,	1, 0Ch,	8
seg000:6749		    db 17h, 7, 19h, 8, 1Dh, 2, 21h, 3, 1, 6, 5,	1, 9, 0Ah
seg000:6749		    db 6, 5, 13h, 8, 17h, 1, 18h, 0Ah, 1Ch, 6, 2, 7, 8,	4
seg000:6749		    db 0Dh, 1, 0Dh, 9, 10h, 8, 17h, 0Ah, 1Bh, 4, 1, 0Bh, 2 dup(6)
seg000:6749		    db 8, 0Ah, 0Eh, 11h, 0Ch, 7, 10h, 5, 10h, 9, 4, 7, 0Eh
seg000:6749		    db 0Ah, 12h, 1, 12h, 0Ah, 1Ch, 1, 1Ch, 8, 7, 3, 2 dup(7)
seg000:6749		    db 0Bh, 1, 0Bh, 9, 0Dh, 1, 11h, 3, 11h, 7, 1Eh, 4, 3, 4
seg000:6749		    db 5, 7, 3,	11h, 5,	11h, 3,	19h, 5,	1Eh, 2 dup(6), 0Bh
seg000:6749		    db 3, 0Bh, 9, 18h, 0Ah, 12h, 3, 18h, 0Ah, 1Bh, 8, 18h
seg000:6749		    db 2, 3, 1,	9, 6, 0Eh, 2, 0Eh, 7, 14h, 4, 16h, 9, 1Eh
seg000:6749		    db 4, 1, 12h, 2, 1Ah, 3, 6,	4, 1Ch,	5, 10h,	8, 3, 8, 1Dh
seg000:6749		    db 9, 19h, 3, 1, 8,	3, 0Bh,	8, 0Eh,	5, 12h,	7, 13h,	2
seg000:6749		    db 19h, 2, 1Eh, 9, 2 dup(1), 5, 4, 6, 10h, 0Eh, 0Ch, 12h
seg000:6749		    db 3, 12h, 7, 2 dup(1), 0Ah, 9, 8, 13h, 7, 15h, 6, 18h
seg000:6749		    db 0Ah, 1Ch, 2 dup(1), 3, 9, 7, 9, 14h, 9, 1Eh
seg000:6959		    db 1, 1Eh, 9, 1, 0Dh, 2 dup(3), 5, 0Fh, 6, 1, 0Fh, 0Ah
seg000:6959		    db 11h, 1, 13h, 4, 13h, 6, 0Ah, 2, 1, 3, 8,	0Bh, 7,	0Eh
seg000:6959		    db 0Ah, 15h, 1, 16h, 5, 1Ah, 3, 1Ch, 1, 2 dup(7), 5, 0Dh
seg000:6959		    db 1, 0Dh, 0Ah, 15h, 1, 16h, 0Ah, 1Ah, 4, 0Ah, 0Ch,	0Dh
seg000:6959		    db 1, 0Fh, 0Bh, 2 dup(10h),	12h, 4,	0, 3, 5, 1, 0Dh, 3 dup(1)
seg000:6959		    db 0Ah, 1, 0Eh, 9, 5, 9, 0Bh, 1, 0Ch, 4, 0Dh, 5, 0Bh, 0Ah
seg000:6959		    db 1, 2, 1,	6, 0Eh,	3, 0Fh,	8, 1Ah,	6, 16h,	6, 0Ch,	0Eh
seg000:6959		    db 6, 0Dh, 1, 6, 5,	4, 1Bh,	2, 1Bh,	5, 9, 0Fh, 3, 0Dh
seg000:6959		    db 1, 3, 2,	8, 4, 7, 8, 4, 2, 3 dup(4), 2 dup(1), 2, 4
seg000:6959		    db 0Ah, 0Ch, 9, 6, 0Ah, 0Bh, 1, 0Fh, 2 dup(5), 1, 5, 9
seg000:6959		    db 0Bh, 0Ah, 5, 0Bh, 19h, 0Bh, 1Ch,	7, 3, 7, 8, 4, 2, 4
seg000:6959		    db 2, 9, 1,	9, 1, 9, 1, 9, 1, 74h, 4, 13h, 5, 0Fh, 6, 13h
seg000:6959		    db 0Ah, 0Fh, 0Bh, 13h, 0Ch,	0Fh, 0Dh, 13h, 75h, 4, 0Dh
seg000:6959		    db 0, 0Dh, 0, 9, 0,	7, 2, 5, 4, 7, 5, 9, 76h, 11h, 0Dh
seg000:6959		    db 0Ch, 0Dh, 0Fh, 5, 11h, 7, 0Bh, 9, 0Dh, 7, 58h, 0, 6
seg000:6959		    db 0, 0Ah, 0, 0Ch, 1, 0Eh, 3, 5, 3,	8, 4, 8, 4, 0Ah, 7
seg000:6959		    db 0Ah, 59h, 0, 8, 0, 0Bh, 1, 5, 1,	0Ch, 3,	6, 3, 0Ch
seg000:6959		    db 4, 0Eh, 5, 8, 5,	0Ah, 6,	9, 5Ah,	0, 0Eh,	1, 6, 1, 8
seg000:6959		    db 1, 0Ah, 3, 0Ah, 3, 0Eh, 4, 6, 4,	0Ch, 7,	9, 5Bh,	9
seg000:6959		    db 0Ah, 0Eh, 5, 10h, 5, 11h, 5, 0Dh, 6, 0Eh, 6, 10h, 6
seg000:6959		    db 11h, 6, 0Ch, 7, 0Bh, 8, 0Ch, 8, 0Eh, 8, 10h, 8, 11h
seg000:6959		    db 8, 0Ah, 9, 10h, 9, 11h, 9, 2 dup(0Ah), 0Bh, 0Ah,	0Ch
seg000:6959		    db 0Ah, 0Dh, 0Ah, 0Fh, 0Bh,	10h, 0Bh, 11h, 0Bh, 2 dup(0Ch)
seg000:6959		    db 0Dh, 0Ch, 10h, 0Ch, 11h,	2 dup(0Ch), 0Eh, 0Dh, 3	dup(0Eh)
seg000:6959		    db 10h, 0Eh, 11h, 0Eh, 0Fh,	4, 68h,	4, 0, 0Ch, 0, 62h
seg000:6959		    db 8, 5, 10h, 0, 6,	0Ch, 9,	0Ch, 66h, 0, 2,	1, 2 dup(3)
seg000:6959		    db 1, 5, 2 dup(6), 7, 5Ch, 0, 1, 11h, 2, 11h, 4, 7,	0
seg000:6959		    db 7, 1, 7,	2, 0Bh,	0, 0Bh,	1, 0Bh,	2, 5Dh,	3, 0, 0Fh
seg000:6959		    db 0, 6Ch, 8, 0, 8,	1, 8, 2, 9, 0, 9, 1, 9,	2, 0Ah,	0
seg000:6959		    db 0Ah, 1, 0Ah, 2, 40h, 2, 3, 6, 3,	1Ah, 0C0h, 57h,	45h
seg000:6959		    db 53h, 54h, 3, 7Ch, 0B0h, 53h, 50h, 41h, 43h, 45h,	4
seg000:6959		    db 3Dh, 0, 20h, 1, 46h, 41h, 4Eh, 54h, 41h,	53h, 59h, 3
seg000:6959		    db 40h, 30h, 8 dup(20h), 3,	40h, 31h, 54h, 52h, 45h, 41h
seg000:6959		    db 53h, 55h, 52h, 59h, 0, 54h, 48h,	45h, 20h, 54h, 49h
seg000:6959		    db 4Dh, 45h, 47h, 41h, 54h,	45h, 53h, 0, 73h, 1, 1Dh, 5Ch
seg000:6959		    db 0, 1, 0Bh, 1, 40h, 0, 48h, 41h, 2 dup(4Ch), 53h,	20h
seg000:6959		    db 4Fh, 46h, 20h, 44h, 2 dup(4Fh), 4Dh, 0, 73h, 1Fh, 3
seg000:6959		    db 5Dh, 5, 0Ah, 0Eh, 0Ah, 52h, 17h,	4, 40h,	0, 42h,	4Ch
seg000:6959		    db 41h, 43h, 4Bh, 20h, 44h,	55h, 4Eh, 47h, 45h, 4Fh, 4Eh
seg000:6959		    db 0, 51h, 4, 0Ch, 73h, 10h, 0Eh, 53h, 12h,	2, 5Dh,	0Bh
seg000:6959		    db 0, 0Ch, 0, 62h, 2 dup(9), 0Ah, 0Ch
seg000:6B73		    db 0Ch, 8, 0Dh, 0Bh, 40h, 0, 43h, 41h, 53h,	54h, 4Ch, 45h
seg000:6B73		    db 20h, 47h, 52h, 45h, 59h,	4Dh, 2 dup(4Fh), 4Eh, 0, 51h
seg000:6B73		    db 5, 2, 53h, 0Bh, 4, 0Fh, 0Ah, 50h, 0Eh, 8, 73h, 12h
seg000:6B73		    db 5, 40h, 0, 4Dh, 59h, 53h, 54h, 49h, 43h,	20h, 4Dh, 41h
seg000:6B73		    db 5Ah, 45h, 0, 73h, 23h, 5, 5Ch, 0, 2, 0, 6, 40h, 0, 43h
seg000:6B73		    db 48h, 41h, 4Fh, 53h, 20h,	43h, 41h, 56h, 45h, 52h, 4Eh
seg000:6B73		    db 53h, 0, 73h, 1, 0Bh, 5Dh, 0Dh, 0, 0Eh, 0, 0Fh, 0, 10h
seg000:6B73		    db 0, 0Dh, 0Bh, 0Eh, 0Bh, 0Fh, 0Bh,	10h, 0Bh, 0Eh, 2, 0Fh
seg000:6B73		    db 2, 0Eh, 9, 0Fh, 9, 40h, 0, 55h, 4Eh, 44h, 45h, 52h
seg000:6B73		    db 57h, 4Fh, 52h, 4Ch, 44h,	20h, 41h, 52h, 45h, 4Eh, 41h
seg000:6B73		    db 0, 73h, 5, 0, 5Dh, 1, 0,	2, 0, 3, 0, 0Dh, 0, 12h, 0
seg000:6B73		    db 13h, 0, 14h, 0, 1Ah, 0, 1Ch, 0, 0Fh, 2, 10h, 2, 0Bh
seg000:6B73		    db 5, 0Dh, 5, 0Eh, 5, 0Fh, 5, 7, 0,	8, 0, 10h, 5, 3, 9
seg000:6B73		    db 1, 0Bh, 2, 0Bh, 4, 0Bh, 5, 0Bh, 6, 0Bh, 8, 0Bh, 9, 0Bh
seg000:6B73		    db 0Fh, 0Bh, 10h, 0Bh, 11h,	0Bh, 12h, 0Bh, 18h, 0Bh, 19h
seg000:6B73		    db 0Bh, 1Bh, 0Bh, 1Ch, 0Bh,	5Ch, 0,	1, 0, 7, 0, 8, 0, 9
seg000:6B73		    db 0, 2 dup(0Ah), 1, 0Ch, 6, 0Eh, 1, 19h, 1, 1Dh, 1, 1Dh
seg000:6B73		    db 2, 1Dh, 3, 1Dh, 5, 1Dh, 6, 1Dh, 8, 1Dh, 9, 1Dh, 0Ah
seg000:6B73		    db 5Eh, 19h, 5, 62h, 0, 4, 3 dup(3), 7, 6, 4, 7, 2 dup(8)
seg000:6B73		    db 5, 0Bh, 8, 0Ch, 0Ah, 0Dh, 6, 0Fh, 0, 10h, 6, 11h, 8
seg000:6B73		    db 13h, 4, 13h, 7, 14h, 1, 14h, 0Ah, 16h, 4, 16h, 7, 17h
seg000:6B73		    db 0, 19h, 3, 19h, 8, 40h, 0, 46h, 4Fh, 52h, 47h, 4Fh
seg000:6B73		    db 2 dup(54h), 45h,	4Eh, 20h, 52h, 55h, 49h, 4Eh, 53h
seg000:6B73		    db 0, 73h, 6, 13h, 5Dh, 2, 0, 3, 0,	8, 1, 0Ah, 0, 0Bh
seg000:6B73		    db 0, 0Dh, 1, 0Fh, 1, 0Ch, 12h, 0Fh, 12h, 5Ch, 0, 3, 0
seg000:6B73		    db 4, 11h, 3, 11h, 10h, 66h, 0, 1, 0, 5, 0,	7, 1, 0, 1
seg000:6B73		    db 6, 1, 11h, 2, 3,	2, 12h,	3, 6, 4, 0, 4, 12h, 5, 3, 5
seg000:6B73		    db 9, 6, 0,	6, 0Fh,	7, 1, 7, 0Ah, 8, 0Bh, 9, 0, 9, 3, 9
seg000:6B73		    db 7, 9, 0Eh, 0Ah, 4, 0Ah, 6, 0Bh, 1, 0Bh, 12h, 0Ch, 0
seg000:6B73		    db 0Ch, 4, 0Dh, 7, 0Dh, 11h, 0Eh, 1, 0Eh, 0Ah, 0Eh,	12h
seg000:6B73		    db 10h, 0, 10h, 0Dh, 10h, 12h, 11h,	1, 11h,	0Ch, 11h, 0Eh
seg000:6B73		    db 2 dup(11h), 5Eh,	2 dup(5), 68h, 5, 0Ch, 2 dup(0Ah)
seg000:6B73		    db 71h, 0Bh, 0Dh, 40h, 0, 44h, 45h,	41h, 54h, 48h, 20h
seg000:6B73		    db 56h, 41h, 2 dup(4Ch), 45h, 59h, 0, 73h, 0, 1, 51h, 0Ah
seg000:6B73		    db 1, 15h, 3, 15h, 8, 53h, 6, 3 dup(0Ah), 19h, 3, 19h
seg000:6B73		    db 8, 5Dh, 5, 0, 1,	0Ah, 3,	0Bh, 5,	2 dup(0Bh), 5, 0Ch
seg000:6B73		    db 5, 0Dh, 5, 0Bh, 6, 0Ch, 6, 0Dh, 6, 5Ch, 0Ah, 3, 0Ah
seg000:6B73		    db 4, 0Ah, 7, 0Ah, 8, 0Ch, 1, 0Ch, 2, 0Ch, 9, 0Ch, 0Ah
seg000:6B73		    db 66h, 0, 9, 2, 5,	2, 0Ah,	3, 1, 4, 0, 3 dup(4), 0Ah
seg000:6B73		    db 40h, 0, 44h, 4Fh, 44h, 47h, 45h,	20h, 43h, 49h, 54h
seg000:6B73		    db 59h, 20h, 42h, 41h, 4Eh,	4Bh, 0,	73h, 1,	0Ah, 52h, 9
seg000:6B73		    db 4, 0Fh
seg000:6D82		    db 4, 50h, 3, 4, 15h, 4, 51h, 6, 1,	18h, 7,	53h, 12h, 1
seg000:6D82		    db 5Dh, 19h, 0, 1Bh, 1, 1Ch, 1, 1Ah, 0Ah, 66h, 19h,	9
seg000:6D82		    db 1Ah, 0, 1Ah, 6, 1Bh, 3, 1Bh, 9, 1Ch, 4, 1Ch, 6, 1Dh
seg000:6D82		    db 1, 1Dh, 9, 1Eh, 0, 1Eh, 5, 1Eh, 9, 1Fh, 1, 1Fh, 8, 40h
seg000:6D82		    db 0, 54h, 4Fh, 4Dh, 42h, 53h, 54h,	4Fh, 4Eh, 45h, 20h
seg000:6D82		    db 4Ah, 41h, 49h, 4Ch, 0, 51h, 8, 1Eh, 73h,	0, 1Eh,	5Ch
seg000:6D82		    db 0Ah, 0Fh, 40h, 0
seg000:6DD2 aLostMaverickMi db 'LOST MAVERICK MINE',0
seg000:6DE5		    db 53h, 15h, 2, 73h, 12h, 0Bh, 68h,	3, 7, 5, 2, 6, 7, 0Ah
seg000:6DE5		    db 2, 0Ah, 8, 0Dh, 2, 66h, 0, 1, 0,	9, 1, 0, 1, 0Ah, 3
seg000:6DE5		    db 2, 9, 2,	0Dh, 8,	0Fh, 8,	5Bh, 17h, 5, 18h, 5, 1Ah, 5
seg000:6DE5		    db 1Bh, 5, 14h, 7, 15h, 7, 17h, 7, 18h, 7, 1Ah, 7, 1Bh
seg000:6DE5		    db 7, 17h, 9, 18h, 9, 1Ah, 9, 1Bh, 9, 40h, 0, 4Fh, 55h
seg000:6DE5		    db 54h, 4Ch, 41h, 57h, 20h,	41h, 2 dup(4Ch), 45h, 59h
seg000:6DE5		    db 0, 53h, 10h, 9, 19h, 4, 73h, 1, 0Ah, 71h, 12h, 3, 66h
seg000:6DE5		    db 3 dup(3), 7, 2 dup(4), 6, 2, 6, 5, 7, 2 dup(8), 5, 9
seg000:6DE5		    db 4, 0Bh, 6, 15h, 7, 16h, 4, 1Bh, 2, 1Ch, 3, 1Dh, 6, 40h
seg000:6DE5		    db 0, 44h, 45h, 41h, 44h, 20h, 4Dh,	41h, 4Eh, 27h, 53h
seg000:6DE5		    db 20h, 50h, 41h, 2	dup(53h), 0, 73h, 3, 1Fh, 55h, 2, 0Eh
seg000:6DE5		    db 2, 12h, 5, 11h, 56h, 1, 10h, 4, 13h, 5, 0Fh, 57h, 3
seg000:6DE5		    db 10h, 4, 0Dh, 53h, 6, 13h, 5Ch, 6, 7, 6, 8, 6, 18h, 6
seg000:6DE5		    db 19h, 0Ah, 5, 0Ah, 6, 0Ah, 9, 0Ah, 0Bh, 0Ah, 0Ch,	0Ah
seg000:6DE5		    db 11h, 0Ah, 12h, 0Ah, 14h,	0Ah, 15h, 0Ah, 16h, 0Ah, 19h
seg000:6DE5		    db 0Ah, 1Ah, 0Ah, 1Bh, 0Ah,	1Ch, 66h, 7, 2,	7, 0Bh,	7
seg000:6DE5		    db 0Fh, 7, 19h, 7, 1Dh, 8, 1, 8, 5,	3 dup(8), 12h, 8, 1Eh
seg000:6DE5		    db 9, 0, 9,	0Eh, 9,	16h, 9,	1Ah, 9,	1Eh, 0Ah, 1, 0Ah, 3
seg000:6DE5		    db 0Ah, 7, 0Ah, 0Dh, 0Ah, 0Fh, 0Ah,	17h, 0Ah, 1Dh, 40h
seg000:6DE5		    db 0
seg000:6EDC aGreatTrainRobb db 'GREAT TRAIN ROBBERY',0
seg000:6EF0		    db 50h, 5, 2, 1Ch, 0, 1Eh, 5, 1Eh, 7, 51h, 6, 9, 52h, 1Ah
seg000:6EF0		    db 5, 73h, 17h, 0Ah, 5Ch, 0, 1, 40h, 0
seg000:6F07 aTheInsidiousGr db 'THE INSIDIOUS GRID',0
seg000:6F1A		    db 73h, 2 dup(9), 52h, 2 dup(3), 4,	3, 5, 3, 6, 2 dup(3)
seg000:6F1A		    db 6, 4, 6,	4, 9, 50h, 0Fh,	8, 0Fh,	0Bh, 10h, 0Bh, 0Dh
seg000:6F1A		    db 3 dup(0Eh), 0Fh,	0Eh, 51h, 2 dup(2), 0Bh, 2, 0Fh, 1
seg000:6F1A		    db 53h, 3, 0Fh, 3, 10h, 7, 0Fh, 10h, 0Fh, 40h, 0, 54h
seg000:6F1A		    db 48h, 45h, 20h, 56h, 4Fh,	52h, 54h, 45h, 58h, 0, 73h
seg000:6F1A		    db 4, 1Dh, 5Ch, 0, 0Fh, 2 dup(0Bh),	54h, 3 dup(0), 4, 0
seg000:6F1A		    db 8, 0, 0Ah, 0, 0Eh, 0, 10h, 0, 16h, 0, 19h, 0, 1Ch, 0
seg000:6F1A		    db 1Dh, 1, 1Dh, 2, 0, 2, 1Dh, 3, 1Dh, 4, 1Bh, 5, 0,	5
seg000:6F1A		    db 1Bh, 5, 1Ch, 5, 1Dh, 9, 1Dh, 0Bh, 0, 0Bh, 5, 0Bh, 8
seg000:6F1A		    db 0Bh, 0Ah, 0Bh, 0Ch, 0Bh,	17h, 0Bh, 1Dh, 8, 2 dup(3)
seg000:6F1A		    db 5, 6, 0Bh, 0, 0Ch, 8, 0Eh, 5, 11h, 1, 16h, 8, 19h, 77h
seg000:6F1A		    db 8, 0, 6,	3, 7, 3, 7, 8, 0Ah, 8, 1, 0Ah, 6, 10h, 5, 14h
seg000:6F1A		    db 7, 14h, 7, 1Bh, 40h, 0, 4Ch, 49h, 47h, 48h, 54h,	20h
seg000:6F1A		    db 42h, 41h, 2 dup(52h), 49h, 45h, 52h, 53h, 0, 73h, 1Ah
seg000:6F1A		    db 6, 40h, 0, 47h, 41h, 2 dup(4Dh),	41h, 20h, 53h, 54h
seg000:6F1A		    db 41h, 54h, 49h, 4Fh, 4Eh,	0, 73h,	2 dup(9), 54h, 3 dup(0)
seg000:6F1A		    db 6, 0, 0Bh, 0, 10h, 2, 0,	2, 6, 4, 10h, 5, 0, 6, 5, 6
seg000:6F1A		    db 0Ah, 8, 6, 8, 7,	3 dup(8), 9, 8,	0Ah, 8,	0Fh, 8,	10h
seg000:6F1A		    db 9, 0, 9,	6, 9, 2	dup(0Ah), 6, 0Ah, 8, 0Ah, 9, 2 dup(0Ah)
seg000:6F1A		    db 0Bh, 6, 0Bh, 0Ah, 0Ch, 6, 0Ch, 7, 0Ch, 0Ah, 0Eh,	2
seg000:6F1A		    db 0Fh, 6, 11h, 10h, 12h, 10h, 14h,	0, 14h,	2, 14h,	5
seg000:6F1A		    db 14h, 0Bh, 14h, 0Ch, 14h,	10h, 77h, 4, 9,	4, 0Fh,	5
seg000:6F1A		    db 1, 6, 4,	2 dup(7), 9, 1,	0Ch, 3,	0Dh, 6,	2 dup(0Eh)
seg000:6F1A		    db 10h, 9, 12h, 7, 13h, 5, 40h, 0
seg000:704B aMidnightMassac db 'MIDNIGHT MASSACRE',0
seg000:705D aS		    db 's',7,0
seg000:7060		    db 51h, 5, 18h, 52h, 2 dup(4), 7, 6, 8, 18h, 50h, 7, 2 dup(4)
seg000:7060		    db 6, 5Ch, 7, 15h, 7, 16h, 7, 17h, 7, 18h, 9, 15h, 9, 16h
seg000:7060		    db 9, 17h, 9, 18h, 6Dh, 0, 0Dh, 2, 13h, 9, 0Fh, 6Eh, 0
seg000:7060		    db 11h, 4, 11h, 0Bh, 0Dh, 6Fh, 5, 0Eh, 7, 13h, 70h,	5
seg000:7060		    db 14h, 7, 10h, 0Bh, 11h, 55h, 0, 18h, 1, 17h, 2, 1Dh
seg000:7060		    db 3, 16h, 3, 1Ah, 4, 16h, 5, 17h, 5, 1Dh, 7, 1Ch, 8, 1Ah
seg000:7060		    db 9, 1Dh, 0Ah, 18h, 0Ah, 1Dh, 56h,	0, 1Ah,	3, 17h,	4
seg000:7060		    db 19h, 4, 1Ah, 4, 1Ch, 5, 16h, 6, 17h, 6, 1Dh, 7, 1Ah
seg000:7060		    db 8, 1Dh, 9, 1Ch, 0Ah, 1Ah, 0Bh, 18h, 0Bh,	1Dh, 57h, 0
seg000:7060		    db 1Bh, 0, 1Dh, 1, 18h, 1, 1Ah, 1, 1Dh, 2, 1Ch, 3, 1Dh
seg000:7060		    db 4, 1Dh, 5, 19h, 7, 1Dh, 0Ah, 17h, 0Bh, 1Ah, 0Bh,	1Bh
seg000:7060		    db 40h, 0
seg000:70EF aEscapeToMoonba db 'ESCAPE TO MOONBASE',0
seg000:7102		    db 50h, 11h, 8, 13h, 8, 51h, 14h, 4, 52h, 11h, 3, 53h
seg000:7102		    db 14h, 7, 73h, 1Dh, 6, 40h, 0, 45h, 4Eh, 54h, 45h,	52h
seg000:7102		    db 50h, 52h, 49h, 53h, 45h,	0, 62h,	0, 1, 0, 4, 2, 0, 4
seg000:7102		    db 0Ah, 0Eh, 0Ch, 0Fh, 9, 12h, 0Bh,	66h, 6,	0, 7, 6, 8
seg000:7102		    db 5, 9, 5,	0Bh, 0Ah, 0Bh, 0Dh, 0Ch, 9, 2 dup(0Dh),	0Eh
seg000:7102		    db 8, 0Eh, 0Ah, 2 dup(0Eh),	5Ch, 0,	3, 0, 6, 0, 7, 9, 3
seg000:7102		    db 9, 4, 13h, 8, 13h, 9, 13h, 0Eh, 13h, 0Fh, 13h, 10h
seg000:7102		    db 5Dh, 4, 0, 5, 0,	0Bh, 11h, 0Ch, 11h, 0Dh, 11h, 0Eh
seg000:7102		    db 11h, 0Fh, 11h, 10h, 11h,	5Eh, 2 dup(3), 68h, 7, 1, 52h
seg000:7102		    db 1, 0Ah, 50h, 4, 0Dh, 51h, 7, 0Ch, 58h, 4, 8, 5, 8, 6
seg000:7102		    db 8, 5Bh, 7, 3 dup(8), 9, 8, 73h, 13h, 6, 40h, 3, 0, 3 dup(2)
seg000:7102		    db 6, 3C0h dup(0FFh), 48h, 20h, 44h, 52h, 4Fh, 49h,	44h
seg000:7102		    db 2 dup(0), 73h, 8, 21h, 40h, 3, 0, 14h, 2, 7, 6, 54h
seg000:7102		    db 48h, 45h, 20h, 54h, 49h,	4Dh, 45h, 4Ch, 4Fh, 52h, 44h
seg000:7102		    db 53h, 20h, 48h, 41h, 56h,	45h, 20h, 56h, 4Fh, 57h, 45h
seg000:7102		    db 44h, 1, 2 dup(20h), 54h,	4Fh, 20h, 53h, 45h, 54h, 20h
seg000:7102		    db 45h, 56h, 45h, 52h, 59h,	54h, 48h, 49h, 4Eh, 47h, 20h
seg000:7102		    db 52h, 49h, 47h, 48h, 54h,	2Eh, 1,	54h, 48h, 45h, 59h
seg000:7102		    db 27h, 56h, 45h, 20h, 41h,	52h, 4Dh, 45h, 44h, 20h, 54h
seg000:7102		    db 48h, 45h, 4Dh, 53h, 45h,	4Ch, 56h, 45h, 53h, 1, 2 dup(20h)
seg000:7102		    db 41h, 4Eh, 44h, 20h, 4Ch,	45h, 41h, 52h, 4Eh, 45h, 44h
seg000:7102		    db 20h, 54h, 4Fh, 20h, 46h,	49h, 47h, 48h, 54h, 2Eh, 1
seg000:7102		    db 54h, 48h, 45h, 53h, 45h,	20h, 22h, 54h, 45h, 43h, 48h
seg000:7102		    db 4Eh, 4Fh, 2Dh, 42h, 41h,	4Eh, 44h, 49h, 54h, 53h, 22h
seg000:7102		    db 20h, 4Eh, 4Fh, 57h, 1, 2	dup(20h), 53h, 43h, 4Fh, 55h
seg000:7102		    db 52h, 20h, 54h, 48h, 45h,	20h, 4Ch, 41h, 4Eh, 44h, 53h
seg000:7102		    db 1, 41h, 4Eh, 44h, 20h, 42h, 41h,	2 dup(54h), 4Ch, 45h
seg000:7102		    db 20h, 54h, 48h, 45h, 20h,	47h, 55h, 41h, 52h, 44h, 49h
seg000:7102		    db 41h, 4Eh, 53h, 1, 2 dup(20h), 57h, 48h, 45h, 52h, 45h
seg000:7102		    db 56h, 45h, 52h, 20h, 54h,	48h, 45h, 59h, 20h, 53h, 54h
seg000:7102		    db 41h, 4Eh, 44h, 2Eh, 3, 0, 7Ah, 2, 3, 6, 49h, 4Eh, 54h
seg000:7102		    db 4Fh, 20h, 41h, 2	dup(4Ch), 20h, 54h, 48h, 49h, 53h
seg000:7102		    db 20h, 43h, 4Fh, 4Eh, 46h,	55h, 53h, 49h, 4Fh, 4Eh, 1
seg000:7102		    db 2 dup(20h), 54h,	48h, 45h, 20h, 54h, 49h, 4Dh, 45h
seg000:7102		    db 20h, 42h, 41h, 4Eh, 44h,	49h, 54h, 20h, 47h, 4Fh, 45h
seg000:7102		    db 53h, 2Eh, 1, 41h, 4Dh, 4Fh, 4Eh,	47h, 20h, 54h, 45h
seg000:7102		    db 43h, 48h, 4Eh, 4Fh, 53h,	20h, 26h, 20h, 47h, 55h, 41h
seg000:7102		    db 52h, 44h, 49h, 41h, 4Eh,	53h, 1,	2 dup(20h), 48h, 45h
seg000:7102		    db 20h, 46h, 49h, 4Eh, 44h,	53h, 20h, 4Fh, 4Eh, 4Ch, 59h
seg000:7102		    db 20h, 46h, 4Fh, 45h, 53h,	2Ch, 1,	46h, 4Fh, 52h, 20h
seg000:7102		    db 48h, 45h, 20h, 54h, 41h,	4Bh, 45h, 53h, 20h, 54h, 48h
seg000:7102		    db 45h, 20h, 54h, 52h, 45h,	41h, 53h, 55h, 52h, 45h, 1
seg000:7102		    db 2 dup(20h), 54h,	48h, 41h, 54h, 20h, 42h, 4Fh, 54h
seg000:7102		    db 48h, 20h, 57h, 49h, 53h,	48h, 20h, 54h, 4Fh, 20h, 4Fh
seg000:7102		    db 57h, 4Eh, 1, 41h, 4Eh, 44h, 20h,	43h, 41h, 2 dup(52h)
seg000:7102		    db 49h, 45h, 53h, 20h, 49h,	54h, 20h, 4Fh, 2 dup(46h)
seg000:7102		    db 20h, 46h, 4Fh
seg000:76D4		    db 52h, 1, 2 dup(20h), 52h,	45h, 41h, 53h, 4Fh, 4Eh, 53h
seg000:76D4		    db 20h, 55h, 4Eh, 4Bh, 4Eh,	4Fh, 57h, 4Eh, 3 dup(2Eh)
seg000:76D4		    db 3, 0, 0E0h, 2, 5, 6, 54h, 48h, 45h, 20h,	43h, 52h, 45h
seg000:76D4		    db 41h, 54h, 4Fh, 52h, 53h,	20h, 4Eh, 4Fh, 57h, 20h, 4Fh
seg000:76D4		    db 2 dup(46h), 45h,	52h, 1,	2 dup(20h), 54h, 48h, 45h
seg000:76D4		    db 20h, 42h, 41h, 4Eh, 44h,	49h, 54h, 20h, 41h, 20h, 44h
seg000:76D4		    db 41h, 52h, 45h, 1, 54h, 41h, 4Bh,	49h, 4Eh, 47h, 20h
seg000:76D4		    db 41h, 20h, 53h, 54h, 52h,	45h, 4Eh, 47h, 54h, 48h, 2Ch
seg000:76D4		    db 20h, 53h, 4Bh, 49h, 2 dup(4Ch), 2Ch, 1, 2 dup(20h)
seg000:76D4		    db 41h, 4Eh, 44h, 20h, 43h,	55h, 2 dup(4Eh), 49h, 4Eh
seg000:76D4		    db 47h, 20h, 53h, 4Fh, 20h,	52h, 41h, 52h, 45h, 2Eh, 1
seg000:76D4		    db 57h, 49h, 2 dup(4Ch), 20h, 54h, 48h, 45h, 20h, 43h
seg000:76D4		    db 48h, 41h, 2 dup(4Ch), 45h, 4Eh, 47h, 45h, 20h, 42h
seg000:76D4		    db 45h, 20h, 4Dh, 45h, 54h,	1, 2 dup(20h), 42h, 59h, 20h
seg000:76D4		    db 41h, 20h, 54h, 52h, 55h,	45h, 20h, 43h, 48h, 41h, 4Dh
seg000:76D4		    db 50h, 49h, 4Fh, 4Eh, 2Ch,	1, 4Fh,	52h, 20h, 57h, 49h
seg000:76D4		    db 2 dup(4Ch), 20h,	54h, 48h, 45h, 20h, 42h, 41h, 4Eh
seg000:76D4		    db 44h, 49h, 54h, 20h, 46h,	4Ch, 2 dup(45h), 2Ch, 1, 2 dup(20h)
seg000:76D4		    db 41h, 44h, 4Dh, 49h, 2 dup(54h), 49h, 4Eh, 47h, 20h
seg000:76D4		    db 57h, 45h, 27h, 56h, 45h,	20h, 57h, 4Fh, 4Eh, 3Fh, 2
seg000:76D4		    db 4, 6, 4,	2 dup(0), 46h, 1, 54h, 48h, 45h, 20h, 46h
seg000:76D4		    db 49h, 52h, 53h, 54h, 20h,	54h, 41h, 53h, 4Bh, 20h, 49h
seg000:76D4		    db 53h, 20h, 54h, 4Fh, 20h,	46h, 49h, 4Eh, 44h, 1, 2 dup(20h)
seg000:76D4		    db 54h, 48h, 45h, 20h, 47h,	52h, 45h, 41h, 54h, 20h, 41h
seg000:76D4		    db 52h, 54h, 49h, 46h, 41h,	43h, 54h, 53h, 1, 54h, 48h
seg000:76D4		    db 41h, 54h, 20h, 54h, 48h,	45h, 20h, 47h, 55h, 41h, 52h
seg000:76D4		    db 44h, 49h, 41h, 4Eh, 53h,	20h, 53h, 54h, 4Fh, 4Ch, 45h
seg000:76D4		    db 1, 2 dup(20h), 46h, 52h,	4Fh, 4Dh, 20h, 54h, 48h, 45h
seg000:76D4		    db 20h, 54h, 52h, 45h, 41h,	53h, 55h, 52h, 59h, 20h, 52h
seg000:76D4		    db 41h, 43h, 4Bh, 53h, 2Eh,	1, 47h,	52h, 45h, 41h, 54h
seg000:76D4		    db 20h, 42h, 45h, 41h, 55h,	54h, 59h, 20h, 41h, 4Eh, 44h
seg000:76D4		    db 20h, 4Dh, 45h, 41h, 4Eh,	49h, 4Eh, 47h, 1, 2 dup(20h)
seg000:76D4		    db 54h, 48h, 45h, 53h, 45h,	20h, 41h, 52h, 54h, 49h, 46h
seg000:76D4		    db 41h, 43h, 54h, 53h, 20h,	48h, 4Fh, 4Ch, 44h, 2Ch, 1
seg000:76D4		    db 47h, 49h, 56h, 49h, 4Eh,	47h, 20h, 50h, 52h, 45h, 53h
seg000:76D4		    db 54h, 49h, 47h, 45h, 20h,	41h, 4Eh, 44h, 20h, 50h, 4Fh
seg000:76D4		    db 57h, 45h, 52h, 1, 2 dup(20h), 54h, 4Fh, 20h, 54h, 48h
seg000:76D4		    db 45h, 20h, 42h, 41h, 4Eh,	44h, 49h, 54h, 20h, 54h, 48h
seg000:76D4		    db 49h, 53h, 20h, 42h, 4Fh,	4Ch, 44h, 2Eh, 2 dup(2), 6
seg000:76D4		    db 4, 2 dup(0), 0ACh, 1, 41h, 20h, 52h, 45h, 41h, 4Ch
seg000:76D4		    db 20h, 4Dh, 41h, 53h, 54h,	45h, 52h, 20h, 43h, 41h, 4Eh
seg000:76D4		    db 20h, 41h, 43h, 54h, 55h,	41h, 2 dup(4Ch), 59h, 1, 2 dup(20h)
seg000:76D4		    db 43h, 4Fh, 4Eh, 51h, 55h,	45h, 52h, 20h, 41h, 20h, 4Dh
seg000:76D4		    db 41h, 5Ah, 45h, 1, 42h, 59h, 20h,	44h, 45h, 46h, 45h
seg000:76D4		    db 41h, 54h, 49h, 4Eh, 47h,	20h, 34h, 44h, 2Ch, 20h, 49h
seg000:76D4		    db 54h, 53h, 20h, 4Dh, 4Fh,	53h, 54h, 1, 2 dup(20h), 4Fh
seg000:76D4		    db 4Dh, 49h, 4Eh, 4Fh, 55h,	53h, 20h, 50h, 48h, 41h, 53h
seg000:76D4		    db 45h, 2Eh, 1, 54h, 48h, 45h, 20h,	47h, 41h, 54h, 45h
seg000:76D4		    db 53h, 20h, 43h, 41h, 4Eh,	20h, 42h, 45h, 20h, 42h
seg000:78ED		    db 52h, 4Fh, 4Bh, 45h, 4Eh,	2Ch, 1,	2 dup(20h), 4Fh, 4Eh
seg000:78ED		    db 45h, 20h, 42h, 59h, 20h,	4Fh, 4Eh, 45h, 2Ch, 1, 42h
seg000:78ED		    db 55h, 54h, 20h, 57h, 49h,	2 dup(4Eh), 49h, 4Eh, 47h
seg000:78ED		    db 20h, 54h, 48h, 45h, 4Dh,	20h, 41h, 2 dup(4Ch), 20h
seg000:78ED		    db 48h, 41h, 53h, 1
seg000:791B aNeverBeenDone_ db '  NEVER BEEN DONE...',0
seg000:7930		    db 0, 0FAh,	69h, 2Dh, 6Bh, 45h, 6Bh, 60h, 6Bh, 89h,	6Bh
seg000:7930		    db 0A5h, 6Bh, 0BDh,	6Bh, 0ECh, 6Bh,	97h, 6Ch, 21h, 6Dh
seg000:7930		    db 7Bh, 6Dh, 0C7h, 6Dh, 0E5h, 6Dh, 35h, 6Eh, 6Fh, 6Eh
seg000:7930		    db 0F0h, 6Eh, 1Ah, 6Fh, 56h, 6Fh, 0CBh, 6Fh, 0DEh, 6Fh
seg000:7930		    db 5Dh, 70h, 2, 71h, 20h, 71h, 0F2h, 71h, 5Ch, 75h,	6Bh
seg000:7930		    db 79h, 1, 7Ah, 85h, 7Ah, 9, 7Bh, 2, 0, 5, 0, 0FFh,	1
seg000:7930		    db 11h, 0, 29h, 0, 0FFh, 2 dup(1), 0, 0Ch, 0, 0FFh,	0
seg000:7930		    db 21h, 0, 25h, 0, 0FFh, 0,	18h, 0,	0Bh, 0,	0FFh, 0, 9
seg000:7930		    db 0, 59h, 0, 0FFh,	1, 4, 0, 85h, 0, 0FFh, 3, 5, 0,	30h
seg000:7930		    db 0, 0FFh,	0, 10h,	0, 13h,	0, 0FFh, 0, 30h, 0, 0Fh, 0
seg000:7930		    db 0FFh, 0,	8, 0, 8Bh, 0, 0FFh, 0, 1, 0, 25h, 0, 0FFh
seg000:7930		    db 0, 14h, 0, 13h, 0, 0FFh,	0, 4, 0, 15h, 0, 0FFh, 0, 1
seg000:7930		    db 0, 69h, 0, 0FFh,	0, 12h,	0, 0A4h, 0, 0FFh, 0, 1,	0
seg000:7930		    db 1Bh, 0, 0FFh, 0,	1, 0, 0Eh, 0, 0FFh, 0, 28h, 0, 2Ah
seg000:7930		    db 0, 0FFh,	0, 9, 0, 6Dh, 0, 0FFh, 3, 11h, 0, 9Ah, 0, 0FFh
seg000:7930		    db 0, 1, 0,	46h, 0,	0FFh, 0, 1, 0, 1Fh, 0, 3Fh, 0, 1, 0
seg000:7930		    db 1, 0, 1,	0, 1, 0, 1, 0, 1, 0, 2,	0, 5, 0, 0FFh, 1, 0Eh
seg000:7930		    db 0, 56h, 0, 0FFh,	1, 0Ah,	0, 15h,	0, 0FFh, 0, 23h, 0
seg000:7930		    db 35h, 0, 0FFh, 0,	1Ah, 0,	1Dh, 0,	0FFh, 0, 13h, 0, 33h
seg000:7930		    db 0, 0FFh,	1, 0Ah,	0, 19h,	0, 0FFh, 3, 15h, 0, 1Ah, 0
seg000:7930		    db 0FFh, 0,	0Ah, 0,	56h, 0,	0FFh, 0, 38h, 0, 26h, 0, 0FFh
seg000:7930		    db 0, 19h, 0, 5Bh, 0, 0FFh,	0, 0Ah,	0, 36h,	0, 0FFh, 0
seg000:7930		    db 23h, 0, 9Ah, 0, 0FFh, 0,	0Ch, 0,	3Bh, 0,	0FFh, 0, 0Ah
seg000:7930		    db 0, 96h, 0, 0FFh,	0, 16h,	0, 0ADh, 0, 0FFh, 0, 9,	0
seg000:7930		    db 2Bh, 0, 0FFh, 0,	6, 0, 33h, 0, 0FFh, 0, 15h, 0, 1Ch
seg000:7930		    db 0, 0FFh,	0, 0Bh,	0, 0BEh, 0, 0FFh, 3, 13h, 0, 73h, 0
seg000:7930		    db 0FFh, 0,	3, 0, 5Ch, 0, 0FFh, 0, 1, 0, 6,	0, 0FFh, 1
seg000:7930		    db 17h, 0, 3Eh, 0, 0FFh, 1,	13h, 0,	1Eh, 0,	0FFh, 0, 2Bh
seg000:7930		    db 0, 3Dh, 0, 0FFh,	0, 1Bh,	0, 2Dh,	0, 0FFh, 0Dh, 1Bh
seg000:7930		    db 0, 5Bh, 0, 0FFh,	1, 0Dh,	0, 0DCh, 0, 0FFh, 3, 2Dh, 0
seg000:7930		    db 2Eh, 0, 0FFh, 0,	13h, 0,	42h, 0,	0FFh, 0, 3Ah, 0, 1Fh
seg000:7930		    db 0, 0FFh,	0, 1Dh,	0, 0AFh, 0, 0FFh, 0, 0Eh, 0, 35h, 0
seg000:7930		    db 0FFh, 0,	36h, 0,	73h, 0,	0FFh, 0, 0Dh, 0, 3Fh, 0, 0FFh
seg000:7930		    db 0, 7, 0,	3Bh, 0,	0FFh, 0, 36h, 0, 5Bh, 0, 0FFh, 99h
seg000:7930		    db 0Eh, 0, 2Fh, 0, 0FFh, 0,	0Dh, 0,	3Eh, 0,	0FFh, 0, 35h
seg000:7930		    db 0, 3Dh, 0, 0FFh,	0, 0Dh,	0, 0D7h, 0, 0FFh, 3, 1Dh, 0
seg000:7930		    db 6Dh, 0, 0FFh, 0,	7, 0, 6Eh, 0, 0FFh, 0, 4, 0, 3,	0
seg000:7930		    db 0FFh, 1,	1Fh, 0,	7Fh, 0,	0FFh, 1, 1Fh, 0, 1Fh, 0, 0FFh
seg000:7930		    db 0, 3Fh, 0, 7Fh, 0, 0FFh,	0, 1Fh,	0, 3Fh,	0, 0FFh, 2 dup(1Fh)
seg000:7930		    db 0, 7Fh, 0, 0FFh,	1, 0Fh,	0, 0FFh, 0, 0FFh
seg000:7B32		    db 3, 3Fh, 0, 7Fh, 0, 0FFh,	0, 1Fh,	0, 7Fh,	0, 0FFh, 0
seg000:7B32		    db 3Fh, 0, 3Fh, 0, 0FFh, 0,	1Fh, 0,	0FFh, 0, 0FFh, 0, 0Fh
seg000:7B32		    db 0, 3Fh, 0, 0FFh,	0, 3Fh,	0, 0FFh, 0, 0FFh, 0, 0Fh, 0
seg000:7B32		    db 7Fh, 0, 0FFh, 0,	0Fh, 0,	6Fh, 0,	0FFh, 0, 3Fh, 0, 3Fh
seg000:7B32		    db 0, 2 dup(0FFh), 0Fh, 0, 3Fh, 0, 0FFh, 0,	0Fh, 0,	3Fh
seg000:7B32		    db 0, 0FFh,	0, 1Fh,	0, 3Fh,	0, 0FFh, 0, 0Fh, 0, 0FFh, 0
seg000:7B32		    db 0FFh, 3,	1Fh, 0,	0FFh, 0, 0FFh, 0, 0Fh, 0, 7Fh, 0, 0FFh
seg000:7B32		    db 4 dup(0), 0E3h, 84h, 89h, 85h, 0B7h, 85h, 1Bh, 90h
seg000:7B32		    db 10h dup(0), 2 dup(0AAh),	2 dup(55h), 2 dup(0AAh), 2 dup(55h)
seg000:7B32		    db 2 dup(0AAh), 10h	dup(0FFh), 23h,	9Ch, 0F2h, 59h,	95h
seg000:7B32		    db 0D0h, 9Ch, 23h, 0C1h, 8Eh, 99h, 0ADh, 2,	0, 0B7h
seg000:7BD1 word_7BD1	    dw 140h		    ; DATA XREF: seg000:9608w
seg000:7BD1					    ; seg000:964Cw ...
seg000:7BD3 word_7BD3	    dw 0		    ; DATA XREF: seg000:960Bw
seg000:7BD3					    ; seg000:9652w ...
seg000:7BD5		    db 2 dup(0), 2 dup(0FFh), 15h dup(0), 0FCh,	0, 2, 0, 0FCh
seg000:7BD5		    db 92h, 0C3h, 0A7h,	51h, 0Ch dup(0)
seg000:7C03 byte_7C03	    db 0		    ; DATA XREF: sub_A599+11r
seg000:7C04 byte_7C04	    db 0		    ; DATA XREF: sub_A599+1Dr
seg000:7C05 byte_7C05	    db 2 dup(0), 2, 6, 7, 50h, 46h, 31h, 2, 2 dup(3), 20h
seg000:7C05					    ; DATA XREF: seg000:96DAr
seg000:7C05					    ; seg000:9759r ...
seg000:7C05		    db 53h, 4Fh, 4Ch, 4Fh, 20h,	4Bh, 45h, 59h, 42h, 4Fh, 41h
seg000:7C05		    db 52h, 44h, 1, 0, 2, 6, 7,	50h, 46h, 32h, 2, 2 dup(3)
seg000:7C05		    db 20h, 53h, 4Fh, 4Ch, 4Fh,	20h, 4Ah, 4Fh, 59h, 53h, 54h
seg000:7C05		    db 49h, 43h, 4Bh, 1, 0, 2, 6, 7, 50h, 46h, 33h, 2, 2 dup(3)
seg000:7C05		    db 20h, 44h, 55h, 41h, 4Ch,	20h, 53h, 54h, 49h, 43h, 4Bh
seg000:7C05		    db 2Fh, 4Bh, 45h, 59h, 53h,	1, 0, 2, 6, 7, 50h, 46h, 34h
seg000:7C05		    db 2, 2 dup(3), 20h, 44h, 55h, 41h,	4Ch, 20h, 32h, 20h
seg000:7C05		    db 4Ah, 4Fh, 59h, 53h, 54h,	49h, 43h, 4Bh, 0, 5, 3,	0
seg000:7C05		    db 0BCh, 2,	2 dup(5), 42h, 59h, 20h, 42h, 49h, 2 dup(4Ch)
seg000:7C05		    db 20h, 44h, 55h, 4Eh, 4Ch,	45h, 56h, 59h, 20h, 26h, 20h
seg000:7C05		    db 48h, 41h, 2 dup(52h), 59h, 20h, 4Ch, 41h, 46h, 4Eh
seg000:7C05		    db 45h, 41h, 52h, 3, 64h, 0BCh
seg000:7C97 aC1984Michtron  db '(C) 1984 MICHTRON',0
seg000:7CA9		    db 5, 20h, 57h, 45h, 4Ch, 43h, 4Fh,	4Dh, 45h, 20h, 54h
seg000:7CA9		    db 4Fh, 20h, 54h, 49h, 4Dh,	45h, 20h, 42h, 41h, 4Eh, 44h
seg000:7CA9		    db 49h, 54h, 3Ah, 1
seg000:7CC3 aTheAdventureAr db '  THE ADVENTURE ARCADE!',0
seg000:7CDB		    align 2
seg000:7CDC		    db 64h, 5, 4Dh, 4Fh, 56h, 45h, 20h,	54h, 48h, 45h, 20h
seg000:7CDC		    db 42h, 41h, 4Eh, 44h, 49h,	54h, 20h, 55h, 53h, 49h, 4Eh
seg000:7CDC		    db 47h, 20h, 54h, 48h, 45h,	1
seg000:7CF8 aJoystickOrArro db 'JOYSTICK OR ARROW KEYS.',0
seg000:7D10		    db 0, 32h, 2, 4, 3,	8, 4, 8, 1, 8, 2, 8, 0,	19h, 5,	54h
seg000:7D10		    db 48h, 45h, 53h, 45h, 20h,	41h, 52h, 45h, 20h, 53h, 4Fh
seg000:7D10		    db 4Ch, 49h, 44h, 20h, 4Ch,	41h, 4Eh, 44h, 4Dh, 41h, 52h
seg000:7D10		    db 4Bh, 53h, 3Bh, 1
seg000:7D3A aYouCanTGoThrou db 'YOU CAN',27h,'T GO THROUGH THEM.',0
seg000:7D55		    align 2
seg000:7D56		    db 1Ch, 3, 2 dup(2), 4, 1, 2, 0, 0Ch, 3, 2 dup(4), 2, 3
seg000:7D56		    db 2, 4, 6,	1, 2, 0, 8, 3, 3 dup(4), 1, 6, 4, 2, 0,	4
seg000:7D56		    db 2 dup(2), 3, 6, 2 dup(2), 0, 4, 8, 5, 57h, 48h, 45h
seg000:7D56		    db 4Eh, 20h, 59h, 4Fh, 55h,	20h, 52h, 45h, 41h, 43h, 48h
seg000:7D56		    db 20h, 54h, 48h, 45h, 20h,	45h, 44h, 47h, 45h, 2Ch, 1
seg000:7D56		    db 54h, 48h, 45h, 20h, 4Dh,	41h, 50h, 20h, 4Dh, 4Fh, 56h
seg000:7D56		    db 45h, 53h, 21h, 2	dup(0),	28h, 3,	0Ch, 0,	0Fh, 8,	5
seg000:7D56		    db 4Fh, 4Eh, 45h, 2Dh, 57h,	41h, 59h, 20h, 44h, 2 dup(4Fh)
seg000:7D56		    db 52h, 53h, 20h, 4Ch, 45h,	54h, 20h, 59h, 4Fh, 55h, 20h
seg000:7D56		    db 4Dh, 4Fh, 56h, 45h, 1
seg000:7DCA aInDirectionOfA db 'IN DIRECTION OF ARROWS ONLY',0
seg000:7DE6		    db 0, 2Dh, 2 dup(4), 1, 6, 2, 4, 3,	6, 2, 6, 0, 8, 2 dup(4)
seg000:7DE6		    db 2, 4, 0,	8, 1, 6, 2, 4, 3, 6, 4,	8, 0, 0Ch, 8, 3, 8
seg000:7DE6		    db 1, 4, 0,	4, 5, 54h, 48h,	45h, 53h, 45h, 20h, 41h, 52h
seg000:7DE6		    db 45h, 20h, 45h, 56h, 49h,	4Ch, 20h, 50h, 4Fh, 52h, 54h
seg000:7DE6		    db 41h, 4Ch, 53h, 3Bh, 1
seg000:7E24 aCreaturesEmerg db 'CREATURES EMERGE FROM THEM.',0
seg000:7E40		    db 0, 32h, 8, 5, 55h, 53h, 45h, 20h, 53h, 50h, 41h,	43h
seg000:7E40		    db 45h, 42h, 41h, 52h, 20h,	4Fh, 52h, 20h, 4Ah, 4Fh, 59h
seg000:7E40		    db 53h, 54h, 49h, 43h, 4Bh,	1
seg000:7E5D aButtonToShootC db 'BUTTON TO SHOOT CREATURES!',0
seg000:7E78		    db 6, 9, 0Eh, 2 dup(3), 0, 0Eh, 2, 1, 6, 0,	0Eh, 4,	1
seg000:7E78		    db 7, 4, 1,	0, 0Dh,	7, 6, 9, 0Eh, 5, 3, 6, 0, 0Eh, 6, 1
seg000:7E78		    db 2, 1, 0,	8, 7, 4, 1, 7, 0, 23h, 8, 5, 49h, 46h, 20h
seg000:7E78		    db 59h, 4Fh, 55h, 20h, 47h,	45h, 54h, 20h, 48h, 49h, 54h
seg000:7E78		    db 2Ch, 20h, 59h, 4Fh, 55h,	20h, 4Ch, 4Fh, 53h, 45h, 20h
seg000:7E78		    db 41h, 1
seg000:7EBD aLifeAndTheGame db 'LIFE AND THE GAME GOES ON!',0
seg000:7ED8		    db 0, 41h, 6, 4, 11h, 7, 0,	6, 0, 0Eh, 8, 1, 6, 9, 0Eh
seg000:7ED8		    db 4, 3, 0,	1Eh, 8,	5
seg000:7EED aSearchForTheKe db 'SEARCH FOR THE KEY!!!',0
seg000:7F03		    align 2
seg000:7F04		    db 28h, 3, 4, 2, 10h, 1, 8,	0, 0Ah,	5, 1
seg000:7F0F aAndGrabTreasur db 'AND GRAB TREASURE TOO!',0
seg000:7F26		    db 0, 14h, 2 dup(4), 2 dup(2), 0, 0Ch, 2, 4, 1, 8, 0, 19h
seg000:7F26		    db 3, 8, 4,	2, 3, 8, 2, 6, 1, 2 dup(2), 6, 3, 2, 0,	4
seg000:7F26		    db 5, 1
seg000:7F46 a___andAnotherT db '...AND ANOTHER TREASURE...',0
seg000:7F61		    align 2
seg000:7F62		    db 14h, 2 dup(4), 2, 4, 0, 0Ah, 1, 6, 2 dup(4), 1, 2 dup(4)
seg000:7F62		    db 3 dup(2), 0, 0Ch, 2 dup(2), 1, 3	dup(2),	1, 2, 0, 19h
seg000:7F62		    db 1, 2, 3,	2, 0, 0Fh, 8, 5, 41h, 4Eh, 44h,	20h, 4Eh, 4Fh
seg000:7F62		    db 57h, 20h, 59h, 4Fh, 55h,	20h, 4Dh, 55h, 53h, 54h, 20h
seg000:7F62		    db 53h, 45h, 41h, 52h, 43h,	48h, 1,	46h, 4Fh, 52h, 20h
seg000:7F62		    db 54h, 48h, 45h, 20h, 4Ch,	4Fh, 43h, 4Bh, 2Eh, 2 dup(0)
seg000:7F62		    db 28h, 3, 2, 4, 2,	3, 6, 2	dup(2),	3, 8, 0, 3, 8, 5, 42h
seg000:7F62		    db 45h, 57h, 41h, 52h, 45h,	20h, 4Fh, 46h, 20h, 57h, 41h
seg000:7F62		    db 52h, 50h, 53h, 1, 4Eh, 45h, 41h,	52h, 20h, 54h, 48h
seg000:7F62		    db 45h, 20h, 45h, 44h, 47h,	45h, 2Eh, 2 dup(0), 28h, 8
seg000:7F62		    db 3, 4, 0,	3, 5, 57h, 48h,	41h, 54h, 20h, 48h, 41h, 2 dup(50h)
seg000:7F62		    db 45h, 4Eh, 45h, 44h, 3Fh,	20h, 54h, 48h, 45h, 20h, 42h
seg000:7F62		    db 41h, 4Eh, 44h, 49h, 54h,	1
seg000:7FFE aWarpedToANewSe db 'WARPED TO A NEW SECTION.',0
seg000:8017		    align 2
seg000:8018		    db 28h, 8, 5
seg000:801B aLetSTryItSomeM db 'LET',27h,'S TRY IT SOME MORE!',0
seg000:8033		    align 2
seg000:8034		    db 14h, 1, 8, 0, 0Ah, 3, 8,	1, 8, 3, 8, 0, 14h, 8, 5, 59h
seg000:8034		    db 4Fh, 55h, 20h, 45h, 41h,	52h, 4Eh, 20h, 41h, 4Eh, 20h
seg000:8034		    db 45h, 58h, 54h, 52h, 41h,	20h, 4Ch, 49h, 46h, 45h, 1
seg000:805A aEvery100Cubits db 'EVERY 100 CUBITS.',0
seg000:806C		    db 0, 1Eh, 3, 4, 1,	2, 0, 14h, 8, 5, 47h, 4Fh, 20h,	4Fh
seg000:806C		    db 50h, 45h, 4Eh, 20h, 54h,	48h, 45h, 20h, 4Ch, 4Fh, 43h
seg000:806C		    db 4Bh, 2 dup(2Dh),	1
seg000:8089 aAndPrepareForB db 'AND PREPARE FOR BATTLE!',0
seg000:80A1		    align 2
seg000:80A2		    db 28h, 6, 0Ah, 2, 8, 1, 6,	0Ah, 6,	7, 1, 6, 0Fh, 4, 3
seg000:80A2		    db 0, 6, 0Fh, 4, 5,	2, 4, 2, 0, 4, 7, 0, 2 dup(4), 6, 7
seg000:80A2		    db 0, 4, 6,	0Fh, 4,	6, 0, 4, 6, 1, 2, 7, 1,	2 dup(2), 2 dup(4)
seg000:80A2		    db 2, 0, 0Fh, 4, 2,	3, 2, 7, 3, 4, 6, 0Ah, 2, 9, 1,	2 dup(2)
seg000:80A2		    db 7, 6, 0Fh, 4, 5,	2, 0, 8, 3, 2, 7, 0, 3,	8, 5, 2, 5
seg000:80A2		    db 7, 51h, 55h, 49h, 43h, 4Bh, 2Ch,	20h, 45h, 58h, 49h
seg000:80A2		    db 54h, 20h, 54h, 48h, 52h,	4Fh, 55h, 47h, 48h, 20h, 54h
seg000:80A2		    db 48h, 45h, 1
seg000:810D aSpinningGate__ db 'SPINNING GATE...VICTORY!!',0
seg000:8127		    align 2
seg000:8128		    db 5, 3, 3 dup(2), 2 dup(7), 2 dup(2), 6, 0Ah, 6, 8, 2 dup(1)
seg000:8128		    db 2 dup(2), 2 dup(4), 2, 2	dup(7),	2 dup(2), 3, 3 dup(2)
seg000:8128		    db 5, 3, 39h, 14h, 2, 4, 6,	56h, 49h, 43h, 54h, 4Fh, 52h
seg000:8128		    db 59h, 2 dup(21h),	0, 5, 3, 39h, 14h, 2, 3, 5, 56h, 49h
seg000:8128		    db 43h, 54h, 4Fh, 52h, 59h,	2 dup(21h), 0, 5, 3, 39h, 14h
seg000:8128		    db 2 dup(2), 3, 56h, 49h, 43h, 54h,	4Fh, 52h, 59h, 2 dup(21h)
seg000:8128		    db 0, 5, 3,	39h, 14h, 2, 6,	2, 56h,	49h, 43h, 54h, 4Fh
seg000:8128		    db 52h, 59h, 2 dup(21h), 0,	5, 3, 39h, 14h,	2, 4, 6, 56h
seg000:8128		    db 49h, 43h, 54h, 4Fh, 52h,	59h, 2 dup(21h), 0, 5, 3, 39h
seg000:8128		    db 14h, 2, 3, 5, 56h, 49h, 43h, 54h, 4Fh, 52h, 59h,	2 dup(21h)
seg000:8128		    db 0, 5, 3,	39h, 14h, 2 dup(2), 3, 56h, 49h, 43h, 54h
seg000:8128		    db 4Fh, 52h, 59h, 2	dup(21h), 0, 5,	3, 39h,	14h, 2,	6
seg000:8128		    db 7, 56h, 49h, 43h, 54h, 4Fh, 52h,	59h, 2 dup(21h), 2 dup(0)
seg000:8128		    db 14h, 2, 4, 2 dup(0), 5, 2, 7, 3,	3 dup(20h), 54h, 48h
seg000:8128		    db 45h, 20h, 4Ch, 45h, 47h,	45h, 4Eh, 44h, 20h, 41h, 4Eh
seg000:8128		    db 44h, 20h, 4Ch, 4Fh, 52h,	45h, 1
seg000:81ED aOfTheTimegateW db '   OF THE TIMEGATE WAR',0
seg000:8204		    db 6, 2, 1Ch, 4, 1,	6, 7, 1Ch, 6, 1, 6, 2, 1Eh, 3, 1, 6
seg000:8204		    db 7, 1Eh, 8, 1, 6,	2, 20h,	5, 1, 6, 7, 20h, 7, 1, 0, 2
seg000:8204		    db 3, 2, 0,	2, 3, 2, 0, 2, 3, 2, 0,	2, 3, 2, 0, 2, 3, 2
seg000:8204		    db 0, 2, 3,	2, 0, 2, 3, 2, 0, 87h, 3, 0Ch, 0, 87h, 3, 0Ch
seg000:8204		    db 0, 9Bh, 3, 0Eh, 0, 9Bh, 3, 0Ch, 0, 87h, 4, 2, 5,	2
seg000:8204		    db 7, 3, 3 dup(20h), 54h, 48h, 45h,	20h, 4Ch, 45h, 47h
seg000:8204		    db 45h, 4Eh, 44h, 20h, 41h,	4Eh, 44h, 20h, 4Ch, 4Fh, 52h
seg000:8204		    db 45h, 1
seg000:826D aOfTheTimegat_0 db '   OF THE TIMEGATE WAR',0
seg000:8284 ; ───────────────────────────────────────────────────────────────────────────
seg000:8284		    add	    [bp+si], al
seg000:8286		    add	    ax,	[bp+si]
seg000:8288		    add	    [bp+si], al
seg000:828A		    add	    ax,	[bp+si]
seg000:828C		    add	    [bp+si], al
seg000:828E		    add	    ax,	[bp+si]
seg000:8290		    add	    [bp+si], al
seg000:8292		    add	    ax,	[bp+si]
seg000:8294		    add	    [bp+si], al
seg000:8296		    add	    ax,	[bp+si]
seg000:8298		    add	    [bp+si], al
seg000:829A		    add	    ax,	[bp+si]
seg000:829C		    add	    [bp+si], al
seg000:829E		    add	    ax,	[bp+si]
seg000:82A0		    add	    [bp+0C03h],	bh
seg000:82A4		    add	    dl,	dl
seg000:82A6		    add	    cx,	[si]
seg000:82A8		    add	    dl,	dl
seg000:82AA		    add	    cx,	ds:0D200h
seg000:82AE		    add	    cx,	[si]
seg000:82B0		    add	    dl,	dl
seg000:82B2		    add	    al,	2
seg000:82B4
seg000:82B4 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:82B4
seg000:82B4
seg000:82B4 sub_82B4	    proc near		    ; CODE XREF: sub_82F7+24p
seg000:82B4					    ; seg000:8FC5p ...
seg000:82B4		    cmp	    dx,	ds:7BD7h
seg000:82B8		    jz	    short locret_82F6
seg000:82BA		    mov	    ds:7BD7h, dx
seg000:82BE		    mov	    di,	7B98h
seg000:82C1		    mov	    cx,	3
seg000:82C4
seg000:82C4 loc_82C4:				    ; CODE XREF: sub_82B4+40j
seg000:82C4		    xor	    ax,	ax
seg000:82C6		    xor	    bx,	bx
seg000:82C8		    shr	    dl,	1
seg000:82CA		    jnb	    short loc_82CD
seg000:82CC		    dec	    ax
seg000:82CD
seg000:82CD loc_82CD:				    ; CODE XREF: sub_82B4+16j
seg000:82CD		    shr	    dh,	1
seg000:82CF		    jnb	    short loc_82D2
seg000:82D1		    dec	    bx
seg000:82D2
seg000:82D2 loc_82D2:				    ; CODE XREF: sub_82B4+1Bj
seg000:82D2		    mov	    [di], ax
seg000:82D4		    mov	    [di+0Ch], bx
seg000:82D7		    and	    ax,	0AAAAh
seg000:82DA		    and	    bx,	5555h
seg000:82DE		    or	    ax,	bx
seg000:82E0		    mov	    [di+2], ax
seg000:82E3		    mov	    [di+6], ax
seg000:82E6		    mov	    [di+0Ah], ax
seg000:82E9		    rol	    ax,	1
seg000:82EB		    mov	    [di+4], ax
seg000:82EE		    mov	    [di+8], ax
seg000:82F1		    add	    di,	0Eh
seg000:82F4		    loop    loc_82C4
seg000:82F6
seg000:82F6 locret_82F6:			    ; CODE XREF: sub_82B4+4j
seg000:82F6		    retn
seg000:82F6 sub_82B4	    endp
seg000:82F6
seg000:82F7
seg000:82F7 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:82F7
seg000:82F7
seg000:82F7 sub_82F7	    proc near		    ; CODE XREF: seg000:8FD2p
seg000:82F7					    ; seg000:90A2p ...
seg000:82F7		    mov	    ds:81D0h, ax
seg000:82FA
seg000:82FA loc_82FA:				    ; CODE XREF: sub_82F7+15j
seg000:82FA					    ; sub_82F7+2Aj ...
seg000:82FA		    mov	    dl,	[si]
seg000:82FC		    inc	    si
seg000:82FD		    or	    dl,	dl
seg000:82FF		    jz	    short locret_8351
seg000:8301		    cmp	    dl,	1
seg000:8304		    jnz	    short loc_830E
seg000:8306		    mov	    ax,	ds:81D0h
seg000:8309		    add	    bx,	0Ch
seg000:830C		    jmp	    short loc_82FA
seg000:830E ; ───────────────────────────────────────────────────────────────────────────
seg000:830E
seg000:830E loc_830E:				    ; CODE XREF: sub_82F7+Dj
seg000:830E		    cmp	    dl,	2
seg000:8311		    jnz	    short loc_8323
seg000:8313		    push    ax
seg000:8314		    push    bx
seg000:8315		    mov	    dx,	[si]
seg000:8317		    add	    si,	2
seg000:831A		    push    si
seg000:831B		    call    sub_82B4
seg000:831E		    pop	    si
seg000:831F		    pop	    bx
seg000:8320		    pop	    ax
seg000:8321		    jmp	    short loc_82FA
seg000:8323 ; ───────────────────────────────────────────────────────────────────────────
seg000:8323
seg000:8323 loc_8323:				    ; CODE XREF: sub_82F7+1Aj
seg000:8323		    cmp	    dl,	3
seg000:8326		    jnz	    short loc_8334
seg000:8328		    lodsw
seg000:8329		    mov	    bl,	ah
seg000:832B		    xor	    ah,	ah
seg000:832D		    mov	    bh,	ah
seg000:832F		    mov	    ds:81D0h, ax
seg000:8332		    jmp	    short loc_82FA
seg000:8334 ; ───────────────────────────────────────────────────────────────────────────
seg000:8334
seg000:8334 loc_8334:				    ; CODE XREF: sub_82F7+2Fj
seg000:8334		    cmp	    dl,	4
seg000:8337		    jnz	    short loc_8343
seg000:8339		    lodsw
seg000:833A		    mov	    bx,	ax
seg000:833C		    lodsw
seg000:833D		    xchg    ax,	bx
seg000:833E		    mov	    ds:81D0h, ax
seg000:8341		    jmp	    short loc_82FA
seg000:8343 ; ───────────────────────────────────────────────────────────────────────────
seg000:8343
seg000:8343 loc_8343:				    ; CODE XREF: sub_82F7+40j
seg000:8343		    push    ax
seg000:8344		    push    bx
seg000:8345		    push    si
seg000:8346		    call    sub_8352
seg000:8349		    pop	    si
seg000:834A		    pop	    bx
seg000:834B		    pop	    ax
seg000:834C		    add	    ax,	3
seg000:834F		    jmp	    short loc_82FA
seg000:8351 ; ───────────────────────────────────────────────────────────────────────────
seg000:8351
seg000:8351 locret_8351:			    ; CODE XREF: sub_82F7+8j
seg000:8351		    retn
seg000:8351 sub_82F7	    endp
seg000:8351
seg000:8352
seg000:8352 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:8352
seg000:8352
seg000:8352 sub_8352	    proc near		    ; CODE XREF: sub_82F7+4Fp
seg000:8352		    mov	    si,	0FE20h
seg000:8355		    xor	    dh,	dh
seg000:8357		    shl	    dx,	1
seg000:8359		    shl	    dx,	1
seg000:835B		    shl	    dx,	1
seg000:835D		    mov	    cx,	dx
seg000:835F		    shl	    dx,	1
seg000:8361		    add	    dx,	cx
seg000:8363		    add	    si,	dx
seg000:8365		    cli
seg000:8366		    mov	    ds:7BF8h, sp
seg000:836A		    xor	    dh,	dh
seg000:836C		    mov	    cx,	ax
seg000:836E		    shr	    cx,	1
seg000:8370		    jnb	    short loc_8374
seg000:8372		    dec	    dh
seg000:8374
seg000:8374 loc_8374:				    ; CODE XREF: sub_8352+1Ej
seg000:8374		    mov	    bp,	dx
seg000:8376		    shl	    cx,	1
seg000:8378		    shl	    cx,	1
seg000:837A		    mov	    di,	bx
seg000:837C		    and	    di,	3
seg000:8380		    shr	    bx,	1
seg000:8382		    shr	    bx,	1
seg000:8384		    mov	    ax,	ds:7BD1h
seg000:8387		    mov	    sp,	ax
seg000:8389		    sub	    sp,	4
seg000:838C		    mul	    bx
seg000:838E		    mov	    dx,	bp
seg000:8390		    add	    di,	ax
seg000:8392		    add	    di,	cx
seg000:8394		    mov	    bp,	7B98h
seg000:8397		    mov	    word ptr ds:7BD5h, 0F00h
seg000:839D		    or	    dh,	dh
seg000:839F		    jz	    short loc_83A7
seg000:83A1		    mov	    word ptr ds:7BD5h, 0F0h ; '≡'
seg000:83A7
seg000:83A7 loc_83A7:				    ; CODE XREF: sub_8352+4Dj
seg000:83A7		    mov	    bx,	ds:7BD3h
seg000:83AB
seg000:83AB loc_83AB:				    ; CODE XREF: sub_8352+F9j
seg000:83AB		    mov	    es,	word ptr [bx]
seg000:83AD		    mov	    ds:7BFCh, di
seg000:83B1		    mov	    ds:7BFAh, bx
seg000:83B5		    mov	    bx,	ds:7BD5h
seg000:83B9		    mov	    dl,	0FCh ; 'ⁿ'
seg000:83BB		    mov	    cx,	0Ch
seg000:83BE		    test    byte ptr ds:7BF7h, 0FFh
seg000:83C3		    jnz	    short loc_83FF
seg000:83C5
seg000:83C5 loc_83C5:				    ; CODE XREF: sub_8352+A3j
seg000:83C5					    ; sub_8352+A9j
seg000:83C5		    lodsw
seg000:83C6		    and	    ax,	[bp+0]
seg000:83C9		    shr	    dl,	1
seg000:83CB		    jnb	    short loc_83D0
seg000:83CD		    add	    bp,	2
seg000:83D0
seg000:83D0 loc_83D0:				    ; CODE XREF: sub_8352+79j
seg000:83D0		    ror	    dh,	1
seg000:83D2		    jnb	    short loc_83E0
seg000:83D4		    xchg    al,	ah
seg000:83D6		    shr	    ax,	1
seg000:83D8		    shr	    ax,	1
seg000:83DA		    shr	    ax,	1
seg000:83DC		    shr	    ax,	1
seg000:83DE		    xchg    al,	ah
seg000:83E0
seg000:83E0 loc_83E0:				    ; CODE XREF: sub_8352+80j
seg000:83E0		    and	    es:[di], bl
seg000:83E3		    and	    es:[di+4], bh
seg000:83E7		    or	    es:[di], al
seg000:83EA		    or	    es:[di+4], ah
seg000:83EE		    inc	    di
seg000:83EF		    test    di,	3
seg000:83F3		    jz	    short loc_83F9
seg000:83F5		    loop    loc_83C5
seg000:83F7		    jmp	    short loc_8430
seg000:83F9 ; ───────────────────────────────────────────────────────────────────────────
seg000:83F9
seg000:83F9 loc_83F9:				    ; CODE XREF: sub_8352+A1j
seg000:83F9		    add	    di,	sp
seg000:83FB		    loop    loc_83C5
seg000:83FD		    jmp	    short loc_8430
seg000:83FF ; ───────────────────────────────────────────────────────────────────────────
seg000:83FF
seg000:83FF loc_83FF:				    ; CODE XREF: sub_8352+71j
seg000:83FF					    ; sub_8352+D6j ...
seg000:83FF		    lodsw
seg000:8400		    and	    ax,	[bp+0]
seg000:8403		    shr	    dl,	1
seg000:8405		    jnb	    short loc_840A
seg000:8407		    add	    bp,	2
seg000:840A
seg000:840A loc_840A:				    ; CODE XREF: sub_8352+B3j
seg000:840A		    ror	    dh,	1
seg000:840C		    jnb	    short loc_841A
seg000:840E		    xchg    al,	ah
seg000:8410		    shr	    ax,	1
seg000:8412		    shr	    ax,	1
seg000:8414		    shr	    ax,	1
seg000:8416		    shr	    ax,	1
seg000:8418		    xchg    al,	ah
seg000:841A
seg000:841A loc_841A:				    ; CODE XREF: sub_8352+BAj
seg000:841A		    xor	    es:[di], al
seg000:841D		    xor	    es:[di+4], ah
seg000:8421		    inc	    di
seg000:8422		    test    di,	3
seg000:8426		    jz	    short loc_842C
seg000:8428		    loop    loc_83FF
seg000:842A		    jmp	    short loc_8430
seg000:842C ; ───────────────────────────────────────────────────────────────────────────
seg000:842C
seg000:842C loc_842C:				    ; CODE XREF: sub_8352+D4j
seg000:842C		    add	    di,	sp
seg000:842E		    loop    loc_83FF
seg000:8430
seg000:8430 loc_8430:				    ; CODE XREF: sub_8352+A5j
seg000:8430					    ; sub_8352+ABj ...
seg000:8430		    mov	    di,	ds:7BFCh
seg000:8434		    mov	    bx,	ds:7BFAh
seg000:8438		    sub	    si,	18h
seg000:843B		    add	    bp,	2
seg000:843E		    add	    bx,	2
seg000:8441		    mov	    ax,	ds:7BD3h
seg000:8444		    add	    ax,	6
seg000:8447		    cmp	    ax,	bx
seg000:8449		    jz	    short loc_844E
seg000:844B		    jmp	    loc_83AB
seg000:844E ; ───────────────────────────────────────────────────────────────────────────
seg000:844E
seg000:844E loc_844E:				    ; CODE XREF: sub_8352+F7j
seg000:844E		    mov	    sp,	ds:7BF8h
seg000:8452		    sti
seg000:8453		    mov	    ax,	cs
seg000:8455		    mov	    es,	ax
seg000:8457		    assume es:seg000
seg000:8457		    retn
seg000:8457 sub_8352	    endp ; sp =	-4
seg000:8457
seg000:8458
seg000:8458 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:8458
seg000:8458
seg000:8458 sub_8458	    proc near		    ; CODE XREF: sub_9480-1B4p
seg000:8458					    ; sub_A90C+1Dp ...
seg000:8458		    push    si
seg000:8459		    push    di
seg000:845A		    mov	    bx,	279Fh
seg000:845D		    add	    bx,	5423h
seg000:8461		    call    sub_AB83
seg000:8464		    mov	    cx,	ds:7BF5h
seg000:8468		    mov	    dx,	ds:7BF3h
seg000:846C		    mov	    si,	cx
seg000:846E		    mov	    di,	dx
seg000:8470		    mov	    al,	ch
seg000:8472		    mov	    ch,	cl
seg000:8474		    mov	    cl,	dh
seg000:8476		    mov	    dh,	dl
seg000:8478		    mov	    dl,	al
seg000:847A		    shr	    cx,	1
seg000:847C		    rcr	    dx,	1
seg000:847E		    sub	    dx,	di
seg000:8480		    sbb	    cx,	si
seg000:8482		    sub	    dx,	di
seg000:8484		    sbb	    cx,	si
seg000:8486		    sub	    dx,	di
seg000:8488		    sbb	    cx,	si
seg000:848A		    mov	    ds:7BF3h, dx
seg000:848E		    mov	    ds:7BF5h, cx
seg000:8492		    pop	    di
seg000:8493		    pop	    si
seg000:8494		    retn
seg000:8494 sub_8458	    endp
seg000:8494
seg000:8495
seg000:8495 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:8495
seg000:8495
seg000:8495 sub_8495	    proc near		    ; CODE XREF: sub_989F+23p
seg000:8495		    mov	    al,	0Ch
seg000:8497		    out	    30h, al
seg000:8499		    xor	    al,	al
seg000:849B		    out	    32h, al
seg000:849D		    mov	    al,	0Dh
seg000:849F		    out	    30h, al
seg000:84A1		    xor	    al,	al
seg000:84A3		    out	    32h, al
seg000:84A5		    mov	    al,	5
seg000:84A7		    out	    10h, al
seg000:84A9		    xor	    di,	di
seg000:84AB		    mov	    ax,	di
seg000:84AD		    mov	    es,	word ptr ds:8932h
seg000:84B1		    assume es:nothing
seg000:84B1		    mov	    cx,	2004h
seg000:84B4		    rep	stosw
seg000:84B6		    xor	    di,	di
seg000:84B8		    mov	    dx,	0F000h
seg000:84BB		    mov	    es,	dx
seg000:84BD		    assume es:nothing
seg000:84BD		    mov	    cx,	4000h
seg000:84C0		    rep	stosw
seg000:84C2		    mov	    ax,	cs
seg000:84C4		    mov	    es,	ax
seg000:84C6		    assume es:seg000
seg000:84C6		    retn
seg000:84C6 sub_8495	    endp
seg000:84C6
seg000:84C7
seg000:84C7 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:84C7
seg000:84C7
seg000:84C7 sub_84C7	    proc near		    ; CODE XREF: sub_9EAE+6p
seg000:84C7		    shl	    bx,	1
seg000:84C9		    jmp	    word ptr [bx+7B90h]
seg000:84C9 sub_84C7	    endp
seg000:84C9
seg000:84CD
seg000:84CD ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:84CD
seg000:84CD
seg000:84CD sub_84CD	    proc near		    ; CODE XREF: seg000:96D7p
seg000:84CD					    ; seg000:loc_9756p	...
seg000:84CD		    mov	    word ptr ds:7C05h, 0
seg000:84D3		    mov	    ah,	1
seg000:84D5		    call    sub_86D6
seg000:84D8		    jz	    short locret_84E2
seg000:84DA		    xor	    ah,	ah
seg000:84DC		    call    sub_86D6
seg000:84DF		    mov	    ds:7C05h, ax
seg000:84E2
seg000:84E2 locret_84E2:			    ; CODE XREF: sub_84CD+Bj
seg000:84E2		    retn
seg000:84E2 sub_84CD	    endp
seg000:84E2
seg000:84E3 ; ───────────────────────────────────────────────────────────────────────────
seg000:84E3		    mov	    ax,	ds:7C05h
seg000:84E6		    mov	    byte ptr ds:7BFEh, 50h ; 'P'
seg000:84EB		    cmp	    ax,	4B00h
seg000:84EE		    jz	    short loc_8505
seg000:84F0		    cmp	    ax,	4700h
seg000:84F3		    jz	    short loc_8505
seg000:84F5		    cmp	    al,	0Ah
seg000:84F7		    jz	    short loc_8505
seg000:84F9		    cmp	    al,	34h ; '4'
seg000:84FB		    jz	    short loc_8505
seg000:84FD		    cmp	    al,	37h ; '7'
seg000:84FF		    jz	    short loc_8505
seg000:8501		    cmp	    al,	31h ; '1'
seg000:8503		    jnz	    short loc_850A
seg000:8505
seg000:8505 loc_8505:				    ; CODE XREF: seg000:84EEj
seg000:8505					    ; seg000:84F3j ...
seg000:8505		    mov	    byte ptr ds:7BFEh, 19h
seg000:850A
seg000:850A loc_850A:				    ; CODE XREF: seg000:8503j
seg000:850A		    cmp	    ax,	4D00h
seg000:850D		    jz	    short loc_8525
seg000:850F		    cmp	    ax,	4900h
seg000:8512		    jz	    short loc_8525
seg000:8514		    cmp	    ax,	5100h
seg000:8517		    jz	    short loc_8525
seg000:8519		    cmp	    al,	36h ; '6'
seg000:851B		    jz	    short loc_8525
seg000:851D		    cmp	    al,	39h ; '9'
seg000:851F		    jz	    short loc_8525
seg000:8521		    cmp	    al,	33h ; '3'
seg000:8523		    jnz	    short loc_852A
seg000:8525
seg000:8525 loc_8525:				    ; CODE XREF: seg000:850Dj
seg000:8525					    ; seg000:8512j ...
seg000:8525		    mov	    byte ptr ds:7BFEh, 87h ; 'ç'
seg000:852A
seg000:852A loc_852A:				    ; CODE XREF: seg000:8523j
seg000:852A		    mov	    byte ptr ds:7BFFh, 50h ; 'P'
seg000:852F		    cmp	    ax,	4800h
seg000:8532		    jz	    short loc_854A
seg000:8534		    cmp	    ax,	4700h
seg000:8537		    jz	    short loc_854A
seg000:8539		    cmp	    ax,	4900h
seg000:853C		    jz	    short loc_854A
seg000:853E		    cmp	    al,	37h ; '7'
seg000:8540		    jz	    short loc_854A
seg000:8542		    cmp	    al,	38h ; '8'
seg000:8544		    jz	    short loc_854A
seg000:8546		    cmp	    al,	39h ; '9'
seg000:8548		    jnz	    short loc_854F
seg000:854A
seg000:854A loc_854A:				    ; CODE XREF: seg000:8532j
seg000:854A					    ; seg000:8537j ...
seg000:854A		    mov	    byte ptr ds:7BFFh, 19h
seg000:854F
seg000:854F loc_854F:				    ; CODE XREF: seg000:8548j
seg000:854F		    cmp	    ax,	5000h
seg000:8552		    jz	    short loc_8569
seg000:8554		    cmp	    ax,	5100h
seg000:8557		    jz	    short loc_8569
seg000:8559		    cmp	    al,	0Ah
seg000:855B		    jz	    short loc_8569
seg000:855D		    cmp	    al,	35h ; '5'
seg000:855F		    jz	    short loc_8569
seg000:8561		    cmp	    al,	31h ; '1'
seg000:8563		    jz	    short loc_8569
seg000:8565		    cmp	    al,	33h ; '3'
seg000:8567		    jnz	    short loc_856E
seg000:8569
seg000:8569 loc_8569:				    ; CODE XREF: seg000:8552j
seg000:8569					    ; seg000:8557j ...
seg000:8569		    mov	    byte ptr ds:7BFFh, 8Ch ; 'î'
seg000:856E
seg000:856E loc_856E:				    ; CODE XREF: seg000:8567j
seg000:856E		    mov	    word ptr ds:7C00h, 0
seg000:8574		    cmp	    al,	20h ; ' '
seg000:8576		    jnz	    short loc_857C
seg000:8578		    inc	    byte ptr ds:7C00h
seg000:857C
seg000:857C loc_857C:				    ; CODE XREF: seg000:8576j
seg000:857C		    cmp	    al,	41h ; 'A'
seg000:857E		    jb	    short locret_8588
seg000:8580		    cmp	    al,	7Ah ; 'z'
seg000:8582		    ja	    short locret_8588
seg000:8584		    inc	    byte ptr ds:7C01h
seg000:8588
seg000:8588 locret_8588:			    ; CODE XREF: seg000:857Ej
seg000:8588					    ; seg000:8582j
seg000:8588		    retn
seg000:8589 ; ───────────────────────────────────────────────────────────────────────────
seg000:8589		    test    byte ptr ds:7C03h, 0FFh
seg000:858E		    jnz	    short locret_85B6
seg000:8590		    mov	    cl,	1
seg000:8592		    call    sub_861F
seg000:8595		    mov	    ds:7BFEh, ah
seg000:8599		    mov	    cl,	2
seg000:859B		    call    sub_861F
seg000:859E		    mov	    ds:7BFFh, ah
seg000:85A2		    mov	    word ptr ds:7C00h, 0
seg000:85A8		    ror	    al,	1
seg000:85AA		    ror	    al,	1
seg000:85AC		    rcr	    byte ptr ds:7C00h, 1
seg000:85B0		    ror	    al,	1
seg000:85B2		    rcr	    byte ptr ds:7C01h, 1
seg000:85B6
seg000:85B6 locret_85B6:			    ; CODE XREF: seg000:858Ej
seg000:85B6		    retn
seg000:85B7 ; ───────────────────────────────────────────────────────────────────────────
seg000:85B7		    test    byte ptr ds:7C04h, 0FFh
seg000:85BC		    jnz	    short locret_85E6
seg000:85BE		    mov	    cl,	3
seg000:85C0		    call    sub_861F
seg000:85C3		    mov	    ds:7BFEh, ah
seg000:85C7		    mov	    cl,	4
seg000:85C9		    call    sub_861F
seg000:85CC		    mov	    ds:7BFFh, ah
seg000:85D0		    mov	    word ptr ds:7C00h, 0
seg000:85D6		    ror	    al,	1
seg000:85D8		    rcr	    byte ptr ds:7C00h, 1
seg000:85DC		    ror	    al,	1
seg000:85DE		    ror	    al,	1
seg000:85E0		    ror	    al,	1
seg000:85E2		    rcr	    byte ptr ds:7C01h, 1
seg000:85E6
seg000:85E6 locret_85E6:			    ; CODE XREF: seg000:85BCj
seg000:85E6		    retn
seg000:85E7 ; ───────────────────────────────────────────────────────────────────────────
seg000:85E7 ; START OF FUNCTION	CHUNK FOR sub_85F0
seg000:85E7
seg000:85E7 loc_85E7:				    ; CODE XREF: sub_85F0+8j
seg000:85E7					    ; sub_85F0+24j
seg000:85E7		    pop	    bx
seg000:85E8		    cmp	    bx,	85F0h
seg000:85EC		    jz	    short loc_8609
seg000:85EE		    jmp	    bx
seg000:85EE ; END OF FUNCTION CHUNK FOR	sub_85F0
seg000:85F0
seg000:85F0 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:85F0
seg000:85F0
seg000:85F0 sub_85F0	    proc near		    ; CODE XREF: sub_86D6+2Ap
seg000:85F0					    ; sub_A721+AAp
seg000:85F0
seg000:85F0 ; FUNCTION CHUNK AT	seg000:85E7 SIZE 00000009 BYTES
seg000:85F0
seg000:85F0		    mov	    cx,	[bp+0Bh]
seg000:85F3
seg000:85F3 loc_85F3:				    ; CODE XREF: sub_85F0+6j
seg000:85F3		    dec	    byte ptr [bp+0Dh]
seg000:85F6		    loopne  loc_85F3
seg000:85F8		    jcxz    short loc_85E7
seg000:85FA		    push    cx
seg000:85FB		    mov	    dx,	[bp+5]
seg000:85FE		    mov	    cx,	[bp+9]
seg000:8601		    sub	    cx,	[bp+7]
seg000:8604		    shr	    cx,	1
seg000:8606
seg000:8606 loc_8606:				    ; CODE XREF: sub_85F0+2Cj
seg000:8606		    mov	    si,	[bp+7]
seg000:8609
seg000:8609 loc_8609:				    ; CODE XREF: sub_85F0-4j
seg000:8609					    ; sub_85F0+1Ej
seg000:8609		    lodsw
seg000:860A		    add	    dx,	ax
seg000:860C		    rol	    dx,	1
seg000:860E		    loop    loc_8609
seg000:8610		    pop	    ax
seg000:8611		    xor	    dx,	[bp+3]
seg000:8614		    jz	    short loc_85E7
seg000:8616		    mov	    word ptr ds:8609h, 0ABh ; '½'
seg000:861C		    jmp	    short loc_8606
seg000:861C sub_85F0	    endp
seg000:861C
seg000:861E ; ───────────────────────────────────────────────────────────────────────────
seg000:861E		    retn
seg000:861F
seg000:861F ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:861F
seg000:861F
seg000:861F sub_861F	    proc near		    ; CODE XREF: seg000:8592p
seg000:861F					    ; seg000:859Bp ...
seg000:861F		    cli
seg000:8620		    mov	    al,	ds:7C02h
seg000:8623		    out	    1Ah, al
seg000:8625		    mov	    ah,	8
seg000:8627		    shl	    ah,	cl
seg000:8629		    mov	    cx,	800h
seg000:862C		    in	    al,	1Ah
seg000:862E		    and	    al,	7Fh
seg000:8630		    out	    1Ah, al
seg000:8632		    or	    al,	80h
seg000:8634		    out	    1Ah, al
seg000:8636		    and	    al,	7Fh
seg000:8638		    out	    1Ah, al
seg000:863A
seg000:863A loc_863A:				    ; CODE XREF: sub_861F+21j
seg000:863A		    shr	    al,	1
seg000:863C		    in	    al,	18h
seg000:863E		    and	    al,	ah
seg000:8640		    loopne  loc_863A
seg000:8642		    in	    al,	1Ah
seg000:8644		    mov	    ds:7C02h, al
seg000:8647		    in	    al,	18h
seg000:8649		    sti
seg000:864A		    mov	    ah,	cl
seg000:864C		    or	    ch,	cl
seg000:864E		    jnz	    short loc_8652
seg000:8650		    stc
seg000:8651		    retn
seg000:8652 ; ───────────────────────────────────────────────────────────────────────────
seg000:8652
seg000:8652 loc_8652:				    ; CODE XREF: sub_861F+2Fj
seg000:8652		    mov	    cl,	ah
seg000:8654		    xor	    ch,	ch
seg000:8656		    jcxz    short $+2
seg000:8658		    neg	    ah
seg000:865A		    clc
seg000:865B		    retn
seg000:865B sub_861F	    endp
seg000:865B
seg000:865C
seg000:865C ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:865C
seg000:865C
seg000:865C sub_865C	    proc near		    ; CODE XREF: sub_A599+3p
seg000:865C		    in	    al,	1Ah
seg000:865E		    mov	    ds:7C02h, al
seg000:8661		    mov	    cl,	1
seg000:8663		    mov	    word ptr ds:7C03h, 0
seg000:8669		    call    sub_861F
seg000:866C		    jnb	    short loc_8672
seg000:866E		    inc	    byte ptr ds:7C03h
seg000:8672
seg000:8672 loc_8672:				    ; CODE XREF: sub_865C+10j
seg000:8672		    mov	    cl,	3
seg000:8674		    call    sub_861F
seg000:8677		    jnb	    short locret_867D
seg000:8679		    inc	    byte ptr ds:7C04h
seg000:867D
seg000:867D locret_867D:			    ; CODE XREF: sub_865C+1Bj
seg000:867D		    retn
seg000:867D sub_865C	    endp
seg000:867D
seg000:867D ; ───────────────────────────────────────────────────────────────────────────
seg000:867E		    db 0E4h ; Σ
seg000:867F		    db	3Ah ; :
seg000:8680		    db 0A8h ; ¿
seg000:8681		    db	  2
seg000:8682		    db 0C3h ; ├
seg000:8683		    db 50h, 53h, 6, 1Eh, 0E8h, 0F4h, 0FFh, 74h,	22h, 8Ch, 0CBh
seg000:8683		    db 8Eh, 0DBh, 0A8h,	8, 0C4h, 1Eh, 0EBh, 7Bh, 74h, 4, 0C4h
seg000:8683		    db 1Eh, 0EFh, 7Bh, 33h, 0C0h, 0E4h,	38h, 0D1h, 0E0h, 3
seg000:8683		    db 0D8h, 0B0h, 35h,	0E6h, 3Ah, 26h,	8Bh, 7,	0E8h, 5, 0
seg000:8683		    db 1Fh, 7, 5Bh, 58h, 0CFh, 32h, 0FFh, 8Ah, 1Eh, 0D9h, 7Bh
seg000:8683		    db 89h, 87h, 0DBh, 7Bh, 80h, 0C3h, 2, 80h, 0E3h, 0Fh, 8Ah
seg000:8683		    db 3Eh, 0DAh, 7Bh, 3Ah, 0DFh, 75h, 6, 80h, 0EBh, 2,	80h
seg000:8683		    db 0E3h, 0Fh, 89h, 1Eh, 0D9h, 7Bh, 0C3h
seg000:86D6
seg000:86D6 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:86D6
seg000:86D6
seg000:86D6 sub_86D6	    proc near		    ; CODE XREF: sub_84CD+8p
seg000:86D6					    ; sub_84CD+Fp
seg000:86D6		    push    bx
seg000:86D7		    dec	    ah
seg000:86D9		    js	    short loc_86DF
seg000:86DB		    jz	    short loc_8706
seg000:86DD		    pop	    bx
seg000:86DE		    retn
seg000:86DF ; ───────────────────────────────────────────────────────────────────────────
seg000:86DF
seg000:86DF loc_86DF:				    ; CODE XREF: sub_86D6+3j
seg000:86DF					    ; sub_86D6+10j
seg000:86DF		    mov	    al,	ds:7BDAh
seg000:86E2		    cmp	    al,	ds:7BD9h
seg000:86E6		    jz	    short loc_86DF
seg000:86E8		    xor	    bh,	bh
seg000:86EA		    mov	    bl,	al
seg000:86EC		    mov	    ax,	[bx+7BDBh]
seg000:86F0		    add	    bl,	2
seg000:86F3		    and	    bl,	0Fh
seg000:86F6		    mov	    ds:7BDAh, bl
seg000:86FA		    mov	    bx,	8719h
seg000:86FD		    xchg    bx,	bp
seg000:86FF		    push    ax
seg000:8700		    call    sub_85F0
seg000:8703		    pop	    ax
seg000:8704		    pop	    bx
seg000:8705		    retn
seg000:8706 ; ───────────────────────────────────────────────────────────────────────────
seg000:8706
seg000:8706 loc_8706:				    ; CODE XREF: sub_86D6+5j
seg000:8706		    cli
seg000:8707		    xor	    bh,	bh
seg000:8709		    mov	    al,	ds:7BDAh
seg000:870C		    cmp	    al,	ds:7BD9h
seg000:8710		    mov	    bl,	al
seg000:8712		    mov	    ax,	[bx+7BDBh]
seg000:8716		    sti
seg000:8717		    pop	    bx
seg000:8718		    retn
seg000:8718 sub_86D6	    endp
seg000:8718
seg000:8718 ; ───────────────────────────────────────────────────────────────────────────
seg000:8719		    db 68h, 0Dh, 0ACh, 0D5h, 27h, 2 dup(0AAh), 0D2h, 81h, 19h
seg000:8719		    db 87h, 2, 0, 2Bh, 20Ah dup(0), 0F4h
seg000:8932 word_8932	    dw 1C00h		    ; DATA XREF: sub_97D0+19r
seg000:8932					    ; sub_A69C+40r
seg000:8934 word_8934	    dw 0F000h		    ; DATA XREF: sub_97D0+1Dr
seg000:8934					    ; sub_A69C+52r
seg000:8936 word_8936	    dw 0		    ; DATA XREF: sub_A643+10w
seg000:8936					    ; sub_A69C+6r ...
seg000:8938 word_8938	    dw 0		    ; DATA XREF: sub_A643+1Cw
seg000:8938					    ; sub_A69C+9w ...
seg000:893A word_893A	    dw 0		    ; DATA XREF: sub_A643+2Cw
seg000:893A					    ; sub_A69C+Dw ...
seg000:893C		    db 0, 0B0h
seg000:893E word_893E	    dw 0		    ; DATA XREF: sub_A643+20w
seg000:8940 word_8940	    dw 0		    ; DATA XREF: sub_A643+30w
seg000:8942 word_8942	    dw 0		    ; DATA XREF: sub_A643+34w
seg000:8944 word_8944	    dw 0		    ; DATA XREF: sub_A643+38w
seg000:8946 word_8946	    dw 0		    ; DATA XREF: sub_A643+3Cw
seg000:8948 word_8948	    dw 0		    ; DATA XREF: sub_A643+14w
seg000:894A		    db 0, 0B0h
seg000:894C word_894C	    dw 0		    ; DATA XREF: sub_A643+24w
seg000:894E byte_894E	    db 0		    ; DATA XREF: sub_9BFA+5r
seg000:894E					    ; seg000:9E99r ...
seg000:894F byte_894F	    db 19h		    ; DATA XREF: sub_9B4F+25w
seg000:8950 byte_8950	    db 0		    ; DATA XREF: sub_9B4F+28w
seg000:8951 word_8951	    dw 96h		    ; DATA XREF: sub_989F+BBw
seg000:8953		    db 4 dup(0)
seg000:8957 byte_8957	    db 0		    ; DATA XREF: sub_989F:loc_9956w
seg000:8958		    db 0
seg000:8959 word_8959	    dw 0		    ; DATA XREF: sub_8FF5:loc_9000w
seg000:8959					    ; seg000:970Aw
seg000:895B		    db 19h dup(0)
seg000:8974 byte_8974	    db 0		    ; DATA XREF: sub_989F+6Dr
seg000:8975		    align 2
seg000:8976 byte_8976	    db 0		    ; DATA XREF: sub_989F+C7w
seg000:8977		    db 2 dup(0)
seg000:8979 byte_8979	    db 0		    ; DATA XREF: sub_8FF5+11w
seg000:8979					    ; seg000:loc_9705w	...
seg000:897A		    db 3 dup(0)
seg000:897D word_897D	    dw 0		    ; DATA XREF: sub_989F+7Dw
seg000:897F		    db 4 dup(0)
seg000:8983 byte_8983	    db 0FFh		    ; DATA XREF: seg000:loc_8FA9r
seg000:8983					    ; sub_9480-195r ...
seg000:8984 byte_8984	    db 19h		    ; DATA XREF: sub_9B4F+32w
seg000:8985 byte_8985	    db 0		    ; DATA XREF: sub_9B4F+35w
seg000:8986 word_8986	    dw 0A5h		    ; DATA XREF: sub_989F+C3w
seg000:8988		    db 4 dup(0)
seg000:898C byte_898C	    db 0		    ; DATA XREF: sub_989F+BFw
seg000:898D		    align 2
seg000:898E word_898E	    dw 0		    ; DATA XREF: sub_9B4F+42w
seg000:8990		    db 19h dup(0)
seg000:89A9 byte_89A9	    db 0		    ; DATA XREF: sub_989F+A0r
seg000:89AA		    db 0
seg000:89AB byte_89AB	    db 0		    ; DATA XREF: sub_989F+D2w
seg000:89AC		    db 6 dup(0)		    ; DATA XREF: seg000:9710w
seg000:89AC					    ; seg000:972Cw
seg000:89B2 word_89B2	    dw 0		    ; DATA XREF: sub_989F+B0w
seg000:89B4		    align 8
seg000:89B8		    db 2, 2 dup(7), 2Bh, 20h, 54h, 49h,	4Dh, 45h, 20h, 42h
seg000:89B8		    db 41h, 4Eh, 44h, 49h, 54h,	20h, 2Bh, 20h, 31h, 2Eh, 31h
seg000:89B8		    db 1, 0, 2,	6, 7, 31h, 37h,	35h, 34h, 33h, 20h, 47h, 52h
seg000:89B8		    db 45h, 59h, 20h, 4Dh, 4Fh,	55h, 53h, 45h, 52h, 2 dup(20h)
seg000:89B8		    db 1, 2, 5,	6, 20h,	39h, 37h, 32h, 37h, 20h, 54h, 48h
seg000:89B8		    db 45h, 20h, 44h, 4Fh, 43h,	54h, 4Fh, 52h, 3 dup(20h)
seg000:89B8		    db 1, 2, 4,	5, 20h,	32h, 30h, 31h, 30h, 20h, 55h, 4Eh
seg000:89B8		    db 43h, 4Ch, 45h, 20h, 48h,	41h, 4Ch, 4 dup(20h), 1, 2
seg000:89B8		    db 3, 4, 20h, 31h, 2 dup(30h), 37h,	20h, 4Dh, 52h, 2Eh
seg000:89B8		    db 20h, 42h, 4Fh, 4Eh, 44h,	2 dup(20h), 3Eh, 2 dup(20h)
seg000:89B8		    db 1, 2 dup(2), 3
seg000:8A2F a13Jason	    db '   13 JASON        ',0
seg000:8A43		    db 87h, 44h, 0FFh, 25h, 0DAh, 7, 0EFh, 3, 0Dh, 22Fh	dup(0)
seg000:8A43		    db 43h, 55h, 42h, 49h, 54h,	53h, 3Ah, 20h, 1, 0
seg000:8C85 aSpacebarToResu db 'SPACEBAR TO RESUME.',0
seg000:8C99		    db '                   ',0
seg000:8CAD		    db 28h
seg000:8CAE byte_8CAE	    db 31h		    ; DATA XREF: sub_989F+10Aw
seg000:8CAF byte_8CAF	    db 41h		    ; DATA XREF: sub_989F+11Aw
seg000:8CB0		    db 29h, 0, 2, 2 dup(7), 59h, 4Fh, 55h, 27h,	52h, 45h, 20h
seg000:8CB0		    db 41h, 20h, 53h, 48h, 41h,	44h, 4Fh, 57h, 1, 0, 47h, 45h
seg000:8CB0		    db 54h, 20h, 0
seg000:8CCB ; ───────────────────────────────────────────────────────────────────────────
seg000:8CCB		    inc	    bp
seg000:8CCC		    dec	    si
seg000:8CCD		    inc	    sp
seg000:8CCE		    and	    [bx+46h], cl
seg000:8CD1		    and	    [bx+di+44h], al
seg000:8CD4		    push    si
seg000:8CD5		    inc	    bp
seg000:8CD6		    dec	    si
seg000:8CD7		    push    sp
seg000:8CD8		    push    bp
seg000:8CD9		    push    dx
seg000:8CDA		    inc	    bp
seg000:8CDB		    and	    [bx+si], sp
seg000:8CDD		    and	    [bx+si], al
seg000:8CDF		    add	    al,	[bx]
seg000:8CE1		    add	    dx,	[si+45h]
seg000:8CE4		    inc	    bx
seg000:8CE5		    dec	    ax
seg000:8CE6		    dec	    si
seg000:8CE7
seg000:8CE7 loc_8CE7:				    ; CODE XREF: seg000:8D24j
seg000:8CE7		    dec	    di
seg000:8CE8		    sub	    ax,	4142h
seg000:8CEB		    dec	    si
seg000:8CEC		    inc	    sp
seg000:8CED		    dec	    cx
seg000:8CEE		    push    sp
seg000:8CEF		    and	    [bx+di+4Ch], al
seg000:8CF2		    inc	    bp
seg000:8CF3
seg000:8CF3 loc_8CF3:				    ; CODE XREF: seg000:8D21j
seg000:8CF3		    push    dx
seg000:8CF4		    push    sp
seg000:8CF5		    add	    [bx+si+4Ch], dl
seg000:8CF8		    inc	    cx
seg000:8CF9		    pop	    cx
seg000:8CFA		    inc	    bp
seg000:8CFB		    push    dx
seg000:8CFC		    and	    [bx+4Eh], cl
seg000:8CFF		    inc	    bp
seg000:8D00		    cmp	    ah,	[bx+si]
seg000:8D02		    dec	    si
seg000:8D03		    inc	    cx
seg000:8D04		    dec	    bp
seg000:8D05		    inc	    bp
seg000:8D06		    aas
seg000:8D07		    aas
seg000:8D08		    aas
seg000:8D09		    add	    [bx+si+4Ch], dl
seg000:8D0C		    inc	    cx
seg000:8D0D		    pop	    cx
seg000:8D0E		    inc	    bp
seg000:8D0F		    push    dx
seg000:8D10		    and	    [si+57h], dl
seg000:8D13		    dec	    di
seg000:8D14		    cmp	    ah,	[bx+si]
seg000:8D16		    dec	    si
seg000:8D17		    inc	    cx
seg000:8D18		    dec	    bp
seg000:8D19		    inc	    bp
seg000:8D1A		    aas
seg000:8D1B		    aas
seg000:8D1C		    aas
seg000:8D1D		    add	    [bx+si+49h], cl
seg000:8D20		    push    sp
seg000:8D21		    db	    2Eh
seg000:8D21		    jno	    short loc_8CF3
seg000:8D24		    jb	    short loc_8CE7
seg000:8D26		    mov	    ds,	word ptr [bx+di+61ADh]
seg000:8D2A		    assume es:nothing
seg000:8D2A		    add	    ch,	ah
seg000:8D2C		    add	    [bx+di], al
seg000:8D2E		    add	    [bp+si], ax
seg000:8D30		    add	    al,	[bp+si]
seg000:8D32		    add	    ax,	[bp+di]
seg000:8D32 ; ───────────────────────────────────────────────────────────────────────────
seg000:8D34		    db 2 dup(0), 1, 2 dup(2), 3	dup(3),	2 dup(0), 2 dup(1)
seg000:8D34		    db 2, 2 dup(3), 2 dup(0), 3	dup(1),	2 dup(2), 3, 2 dup(0)
seg000:8D34		    db 1
seg000:8D4E byte_8D4E	    db 0		    ; DATA XREF: sub_AD0A+6r
seg000:8D4F		    db 1, 8, 9,	0Ah, 0Bh, 2, 3,	2, 3, 4, 5, 6, 7, 3 dup(0)
seg000:8D4F		    db 1, 2 dup(0), 2, 4 dup(0), 2 dup(2), 2 dup(1), 2,	3 dup(3)
seg000:8D4F		    db 5, 2 dup(0), 2 dup(3), 2	dup(5),	4, 2 dup(3), 6,	2 dup(7)
seg000:8D4F		    db 3 dup(0Ch), 0Dh,	0Ch, 0Dh, 0Eh
seg000:8D83 byte_8D83	    db 0Eh		    ; DATA XREF: sub_AD0A+16r
seg000:8D84		    db 4 dup(0Eh), 0Ch,	0Dh, 0Ch, 0Dh, 0Ch, 0Dh, 0Eh, 0Fh
seg000:8D84		    db 0Eh, 0Fh, 0Eh, 5	dup(0Fh), 4 dup(0Ch), 3	dup(0FFh)
seg000:8D84		    db 0AAh, 0DAh, 0AAh, 2 dup(0FFh), 0DAh, 0FFh
seg000:8DA6 byte_8DA6	    db 0FFh		    ; DATA XREF: sub_8FF5+1Bw
seg000:8DA6					    ; seg000:902Br ...
seg000:8DA7 byte_8DA7	    db 0		    ; DATA XREF: sub_8FF5+20w
seg000:8DA7					    ; seg000:9034w ...
seg000:8DA8 word_8DA8	    dw 7C6Eh		    ; DATA XREF: sub_8FF5w
seg000:8DA8					    ; seg000:loc_903Cr	...
seg000:8DAA byte_8DAA	    db 0		    ; DATA XREF: sub_9B4F+89w
seg000:8DAA					    ; sub_A474:loc_A4BFr ...
seg000:8DAB byte_8DAB	    db 0		    ; DATA XREF: sub_9B4F+99w
seg000:8DAB					    ; sub_A474:loc_A4EDr ...
seg000:8DAC word_8DAC	    dw 0		    ; DATA XREF: sub_9B4F+18w
seg000:8DAC					    ; sub_A474+6r ...
seg000:8DAE word_8DAE	    dw 0		    ; DATA XREF: sub_9B4F+1Cw
seg000:8DAE					    ; sub_A474+18r ...
seg000:8DB0 word_8DB0	    dw 0		    ; DATA XREF: sub_9B4F+14w
seg000:8DB0					    ; sub_9B4F+91r ...
seg000:8DB2 word_8DB2	    dw 0		    ; DATA XREF: sub_9B4F+10w
seg000:8DB2					    ; sub_9B4F+57r ...
seg000:8DB4 word_8DB4	    dw 0		    ; DATA XREF: sub_9B4F+63w
seg000:8DB4					    ; sub_A69C+5Dr
seg000:8DB6 word_8DB6	    dw 0		    ; DATA XREF: sub_9B4F+75w
seg000:8DB6					    ; sub_A69C+61r
seg000:8DB8 byte_8DB8	    db 1		    ; DATA XREF: seg000:loc_96E5w
seg000:8DB9 word_8DB9	    dw 0		    ; DATA XREF: sub_989F+57r
seg000:8DB9					    ; sub_9B4F+20w
seg000:8DBB word_8DBB	    dw 0		    ; DATA XREF: sub_989F+8Ar
seg000:8DBB					    ; sub_9B4F+2Dw
seg000:8DBD word_8DBD	    dw 0		    ; DATA XREF: sub_989F+DFr
seg000:8DBD					    ; sub_9B4F+3Aw
seg000:8DBF word_8DBF	    dw 0		    ; DATA XREF: sub_99F6r
seg000:8DBF					    ; sub_9A0B+Cr ...
seg000:8DC1 word_8DC1	    dw 0		    ; DATA XREF: seg000:8FC8r
seg000:8DC1					    ; seg000:9749r ...
seg000:8DC3 word_8DC3	    dw 0		    ; DATA XREF: seg000:8FCBr
seg000:8DC3					    ; seg000:974Cr ...
seg000:8DC5 word_8DC5	    dw 0		    ; DATA XREF: sub_989F+26r
seg000:8DC5					    ; sub_9B4F+54w
seg000:8DC7 byte_8DC7	    db 8 dup(0)		    ; DATA XREF: sub_9A0B:loc_9A35w
seg000:8DC7					    ; sub_9A0B:loc_9B1Dr ...
seg000:8DCF word_8DCF	    dw 0		    ; DATA XREF: sub_9480-19Fr
seg000:8DCF					    ; sub_A4F8:loc_A56Br ...
seg000:8DD1 byte_8DD1	    db 2 dup(0)		    ; DATA XREF: seg000:8F78r
seg000:8DD1					    ; seg000:9118w
seg000:8DD3 byte_8DD3	    db 0		    ; DATA XREF: seg000:loc_8FB1w
seg000:8DD3					    ; seg000:8FB5r ...
seg000:8DD4 byte_8DD4	    db 0		    ; DATA XREF: sub_9480:loc_92A7r
seg000:8DD4					    ; seg000:9670r ...
seg000:8DD5 byte_8DD5	    db 4 dup(0)		    ; DATA XREF: sub_9480-14Fr
seg000:8DD5					    ; sub_A279+C8w ...
seg000:8DD9 byte_8DD9	    db 0		    ; DATA XREF: sub_8FF5+16w
seg000:8DD9					    ; seg000:9715w ...
seg000:8DDA byte_8DDA	    db 0		    ; DATA XREF: seg000:loc_96FEr
seg000:8DDA					    ; sub_989F+136r ...
seg000:8DDB byte_8DDB	    db 0		    ; DATA XREF: sub_9B4Fr
seg000:8DDB					    ; sub_A964+28w ...
seg000:8DDC byte_8DDC	    db 0		    ; DATA XREF: sub_A279+B4w
seg000:8DDC					    ; sub_A279+B9r ...
seg000:8DDD byte_8DDD	    db 1		    ; DATA XREF: sub_8FF5+6w
seg000:8DDD					    ; seg000:90E5r ...
seg000:8DDE byte_8DDE	    db 0		    ; DATA XREF: sub_9255+Er
seg000:8DDE					    ; sub_A721+1Aw ...
seg000:8DDF byte_8DDF	    db 0		    ; DATA XREF: sub_A721+8w
seg000:8DDF					    ; sub_A721+34w ...
seg000:8DE0 byte_8DE0	    db 0		    ; DATA XREF: sub_A721+Bw
seg000:8DE0					    ; sub_A721+3Aw ...
seg000:8DE1 byte_8DE1	    db 1		    ; DATA XREF: sub_A279:loc_A34Fw
seg000:8DE1					    ; sub_A279:loc_A36Ew ...
seg000:8DE2 word_8DE2	    dw 0		    ; DATA XREF: sub_A721+5Dw
seg000:8DE2					    ; sub_A721+EEr
seg000:8DE4 word_8DE4	    dw 0		    ; DATA XREF: sub_A721+61w
seg000:8DE4					    ; sub_A721+B1r
seg000:8DE6 word_8DE6	    dw 0FFFFh		    ; DATA XREF: sub_A721+65w
seg000:8DE6					    ; sub_A721+D5r
seg000:8DE8 word_8DE8	    dw 0		    ; DATA XREF: sub_A721+74w
seg000:8DE8					    ; sub_AAF0r
seg000:8DEA word_8DEA	    dw 0		    ; DATA XREF: sub_A721+7Bw
seg000:8DEA					    ; sub_A721+ADr
seg000:8DEC word_8DEC	    dw 0		    ; DATA XREF: sub_A721+82w
seg000:8DEC					    ; sub_A721+D1r
seg000:8DEE word_8DEE	    dw 0		    ; DATA XREF: sub_A721+89w
seg000:8DEE					    ; sub_A721+EAr
seg000:8DF0 word_8DF0	    dw 0		    ; DATA XREF: sub_A721+90w
seg000:8DF0					    ; sub_A721+10Ar
seg000:8DF2 word_8DF2	    dw 0		    ; DATA XREF: sub_A721+BAw
seg000:8DF4 word_8DF4	    dw 0		    ; DATA XREF: seg000:8F6Dr
seg000:8DF4					    ; sub_A279+73w ...
seg000:8DF6 word_8DF6	    dw 0		    ; DATA XREF: sub_A279+A1w
seg000:8DF6					    ; sub_A721+F7w ...
seg000:8DF8 word_8DF8	    dw 0		    ; DATA XREF: seg000:910Br
seg000:8DF8					    ; sub_A721+DEw
seg000:8DFA word_8DFA	    dw 0		    ; DATA XREF: sub_A721+2w
seg000:8DFC word_8DFC	    dw 0		    ; DATA XREF: sub_989Fr
seg000:8DFC					    ; sub_A721+A0w
seg000:8DFE byte_8DFE	    db 0		    ; DATA XREF: sub_A964+37w
seg000:8DFE					    ; sub_A9FF+3Cr
seg000:8DFF byte_8DFF	    db 0		    ; DATA XREF: sub_A964+5Ew
seg000:8E00 byte_8E00	    db 0		    ; DATA XREF: sub_9480-FBr
seg000:8E00					    ; sub_9B4F+8Cr ...
seg000:8E01 byte_8E01	    db 0		    ; DATA XREF: sub_912F+1Dr
seg000:8E01					    ; sub_9480:loc_9363r ...
seg000:8E02 word_8E02	    dw 0		    ; DATA XREF: sub_A964+6Bw
seg000:8E04 word_8E04	    dw 0		    ; DATA XREF: sub_912Fr
seg000:8E04					    ; seg000:9602r ...
seg000:8E06 byte_8E06	    db 0		    ; DATA XREF: sub_AAF0+21w
seg000:8E07 byte_8E07	    db 0		    ; DATA XREF: sub_AAF0+2Aw
seg000:8E08 byte_8E08	    db 0		    ; DATA XREF: sub_A279:loc_A2B8w
seg000:8E08					    ; sub_A279+12Bw ...
seg000:8E09 byte_8E09	    db 0		    ; DATA XREF: sub_A964:loc_A9BEw
seg000:8E09					    ; sub_A9FF+1Dr ...
seg000:8E0A byte_8E0A	    db 0		    ; DATA XREF: seg000:90F8r
seg000:8E0A					    ; seg000:90FFw
seg000:8E0B byte_8E0B	    db 0		    ; DATA XREF: sub_A721+C6w
seg000:8E0B					    ; sub_A721+CDw ...
seg000:8E0C		    db 24h dup(0)
seg000:8E30 word_8E30	    dw 0		    ; DATA XREF: sub_A279+112r
seg000:8E30					    ; sub_A279+116w ...
seg000:8E32 aBqoOfhohloqyo  db 'bQÄ^[ÄfhÄhlÄqyÄ',0
seg000:8E42		    db 4Ch, 4Fh, 56h, 45h, 4Bh,	68h, 53h, 49h, 0D2h, 81h, 19h
seg000:8E42		    db 87h, 2, 0, 0Dh, 63h, 1, 0, 64h, 0, 1, 65h, 2 dup(1)
seg000:8E42		    db 0, 5Fh, 1, 0, 60h, 2, 0,	61h, 0,	1, 61h,	2, 1, 0, 67h
seg000:8E42		    db 0, 1, 0,	69h, 1,	0, 6Ah,	2, 0, 6Bh, 0, 1, 6Bh, 2, 1
seg000:8E42		    db 0, 69h, 1, 0, 69h, 2, 0,	6Ah, 3,	0, 6Bh,	0, 1, 6Bh
seg000:8E42		    db 3, 1, 0,	1Bh dup(20h), 1, 1Bh dup(20h), 0, 8Fh, 0A1h
seg000:8E42		    db 3Eh, 0A2h, 3, 0A2h, 0C9h, 0A1h, 67h, 90h, 68h, 90h
seg000:8E42		    db 73h, 90h, 7Eh, 90h, 89h,	90h, 94h, 90h, 0BCh, 90h, 0B6h
seg000:8E42		    db 90h, 0AAh, 90h
seg000:8EDB		    assume ss:seg000, ds:nothing
seg000:8EDB
seg000:8EDB ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:8EDB
seg000:8EDB
seg000:8EDB		    public start
seg000:8EDB start	    proc near
seg000:8EDB		    cli
seg000:8EDC		    mov	    ax,	cs
seg000:8EDE		    mov	    ds,	ax
seg000:8EE0		    assume ds:seg000
seg000:8EE0		    mov	    es,	ax
seg000:8EE2		    assume es:seg000
seg000:8EE2		    mov	    ss,	ax
seg000:8EE4		    mov	    sp,	8930h
seg000:8EE7		    sti
seg000:8EE8		    call    near ptr sub_ABF7
seg000:8EEB
seg000:8EEB loc_8EEB:				    ; CODE XREF: start+13j
seg000:8EEB		    call    sub_94C8
seg000:8EEE		    jb	    short loc_8EEB
seg000:8EF0		    call    sub_9BEC
seg000:8EF3
seg000:8EF3 loc_8EF3:				    ; CODE XREF: seg000:8FF2j
seg000:8EF3					    ; seg000:96EEj ...
seg000:8EF3		    call    sub_8FF5
seg000:8EF6
seg000:8EF6 loc_8EF6:				    ; CODE XREF: seg000:loc_9737j
seg000:8EF6					    ; sub_A279+1F8j
seg000:8EF6		    call    sub_A599
seg000:8EF9
seg000:8EF9 loc_8EF9:				    ; CODE XREF: sub_A279+1AAj
seg000:8EF9					    ; sub_A279+1DBj
seg000:8EF9		    call    sub_A721
seg000:8EFC		    call    sub_AC2A
seg000:8EFF		    call    sub_A61D
seg000:8F02		    call    sub_989F
seg000:8F05		    mov	    sp,	8930h
seg000:8F08		    call    sub_9BFA
seg000:8F0B
seg000:8F0B loc_8F0B:				    ; CODE XREF: start+36j
seg000:8F0B		    mov	    bx,	8F1Ch
seg000:8F0E
seg000:8F0E loc_8F0E:				    ; CODE XREF: start+3Fj
seg000:8F0E		    cmp	    word ptr [bx], 0
seg000:8F11		    jz	    short loc_8F0B
seg000:8F13		    push    bx
seg000:8F14		    call    word ptr [bx]
seg000:8F16		    pop	    bx
seg000:8F17		    add	    bx,	2
seg000:8F1A		    jmp	    short loc_8F0E
seg000:8F1A start	    endp
seg000:8F1A
seg000:8F1A ; ───────────────────────────────────────────────────────────────────────────
seg000:8F1C		    db 0D7h, 2 dup(96h), 9Eh, 46h, 0A1h, 4Ah, 8Fh, 49h,	0A0h
seg000:8F1C		    db 0A1h, 8Fh, 0FAh,	9Bh, 0FAh, 9Bh,	3Dh, 9Fh, 0BCh,	9Fh
seg000:8F1C		    db 87h, 92h, 0FEh, 95h, 0F2h, 90h, 62h, 96h, 5Dh, 96h
seg000:8F1C		    db 7Bh, 92h, 6Eh, 97h, 0Ah,	0ADh, 0E4h, 0A0h, 0D0h,	0
seg000:8F1C		    db 84h, 0A6h, 0D0h,	3 dup(0)
seg000:8F4A		    dw 4EBEh
seg000:8F4C ; ───────────────────────────────────────────────────────────────────────────
seg000:8F4C		    mov	    ax,	bp
seg000:8F4E		    add	    ax,	[bx+si]
seg000:8F50		    mov	    si,	8983h
seg000:8F53		    test    byte ptr [si], 0FFh
seg000:8F56		    jns	    short loc_8F59
seg000:8F58		    retn
seg000:8F59 ; ───────────────────────────────────────────────────────────────────────────
seg000:8F59
seg000:8F59 loc_8F59:				    ; CODE XREF: seg000:8F56j
seg000:8F59		    mov	    di,	[si+2Fh]
seg000:8F5C		    mov	    dx,	130h
seg000:8F5F		    mov	    bx,	8930h
seg000:8F62		    cmp	    byte ptr [si+2Eh], 0
seg000:8F66		    jnz	    short loc_8F90
seg000:8F68		    cmp	    byte ptr [si], 0
seg000:8F6B		    jnz	    short loc_8F74
seg000:8F6D		    cmp	    word_8DF4, 0
seg000:8F72		    jnz	    short loc_8F7F
seg000:8F74
seg000:8F74 loc_8F74:				    ; CODE XREF: seg000:8F6Bj
seg000:8F74		    mov	    byte ptr [si+31h], 3
seg000:8F78		    mov	    si,	word ptr byte_8DD1
seg000:8F7C		    jmp	    loc_ACA7
seg000:8F7F ; ───────────────────────────────────────────────────────────────────────────
seg000:8F7F
seg000:8F7F loc_8F7F:				    ; CODE XREF: seg000:8F72j
seg000:8F7F		    cmp	    byte ptr [si+31h], 1
seg000:8F83		    jnz	    short loc_8F86
seg000:8F85		    retn
seg000:8F86 ; ───────────────────────────────────────────────────────────────────────────
seg000:8F86
seg000:8F86 loc_8F86:				    ; CODE XREF: seg000:8F83j
seg000:8F86		    mov	    byte ptr [si+31h], 1
seg000:8F8A		    mov	    si,	0AF0h
seg000:8F8D		    jmp	    loc_ACA7
seg000:8F90 ; ───────────────────────────────────────────────────────────────────────────
seg000:8F90
seg000:8F90 loc_8F90:				    ; CODE XREF: seg000:8F66j
seg000:8F90		    cmp	    byte ptr [si+31h], 2
seg000:8F94		    jnz	    short loc_8F97
seg000:8F96		    retn
seg000:8F97 ; ───────────────────────────────────────────────────────────────────────────
seg000:8F97
seg000:8F97 loc_8F97:				    ; CODE XREF: seg000:8F94j
seg000:8F97		    mov	    byte ptr [si+31h], 2
seg000:8F9B		    mov	    si,	0A30h
seg000:8F9E		    jmp	    loc_ACA7
seg000:8F9E ; ───────────────────────────────────────────────────────────────────────────
seg000:8FA1		    db 80h
seg000:8FA2 ; ───────────────────────────────────────────────────────────────────────────
seg000:8FA2		    db	    3Eh
seg000:8FA2		    dec	    si
seg000:8FA4		    mov	    [bx+si], ax
seg000:8FA6		    jnz	    short loc_8FA9
seg000:8FA8		    retn
seg000:8FA9 ; ───────────────────────────────────────────────────────────────────────────
seg000:8FA9
seg000:8FA9 loc_8FA9:				    ; CODE XREF: seg000:8FA6j
seg000:8FA9		    cmp	    byte_8983, 0
seg000:8FAE		    jnz	    short loc_8FB1
seg000:8FB0		    retn
seg000:8FB1 ; ───────────────────────────────────────────────────────────────────────────
seg000:8FB1
seg000:8FB1 loc_8FB1:				    ; CODE XREF: seg000:8FAEj
seg000:8FB1		    inc	    byte_8DD3
seg000:8FB5		    cmp	    byte_8DD3, 5
seg000:8FBA		    jnb	    short loc_8FBD
seg000:8FBC		    retn
seg000:8FBD ; ───────────────────────────────────────────────────────────────────────────
seg000:8FBD
seg000:8FBD loc_8FBD:				    ; CODE XREF: seg000:8FBAj
seg000:8FBD		    mov	    dx,	1
seg000:8FC0		    mov	    cx,	3Fh ; '?'
seg000:8FC3
seg000:8FC3 loc_8FC3:				    ; CODE XREF: seg000:8FE4j
seg000:8FC3		    push    dx
seg000:8FC4		    push    cx
seg000:8FC5		    call    sub_82B4
seg000:8FC8		    mov	    ax,	word_8DC1
seg000:8FCB		    mov	    bx,	word_8DC3
seg000:8FCF		    mov	    si,	8CCBh
seg000:8FD2		    call    sub_82F7
seg000:8FD5		    mov	    cx,	2EEh
seg000:8FD8
seg000:8FD8 loc_8FD8:				    ; CODE XREF: seg000:loc_8FD8j
seg000:8FD8		    loop    loc_8FD8
seg000:8FDA		    pop	    cx
seg000:8FDB		    pop	    dx
seg000:8FDC		    add	    dx,	101h
seg000:8FE0		    and	    dx,	707h
seg000:8FE4		    loop    loc_8FC3
seg000:8FE6		    mov	    si,	894Eh
seg000:8FE9		    call    sub_9A0B
seg000:8FEC		    mov	    si,	8983h
seg000:8FEF		    call    sub_9A0B
seg000:8FF2		    jmp	    loc_8EF3
seg000:8FF5
seg000:8FF5 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:8FF5
seg000:8FF5
seg000:8FF5 sub_8FF5	    proc near		    ; CODE XREF: start:loc_8EF3p
seg000:8FF5		    mov	    word_8DA8, 7C6Eh
seg000:8FFB		    mov	    byte_8DDD, 17h
seg000:9000
seg000:9000 loc_9000:				    ; CODE XREF: sub_A279:loc_A46Ep
seg000:9000		    mov	    word_8959, 0B50h
seg000:9006		    mov	    byte_8979, 3
seg000:900B		    mov	    byte_8DD9, 0
seg000:9010		    mov	    byte_8DA6, 0FFh
seg000:9015		    mov	    byte_8DA7, 0
seg000:901A		    retn
seg000:901A sub_8FF5	    endp
seg000:901A
seg000:901B ; ───────────────────────────────────────────────────────────────────────────
seg000:901B		    mov	    word ptr byte_7BD5+2Bh, 0
seg000:9021		    mov	    byte_7BD5+29h, 50h ; 'P'
seg000:9026		    mov	    byte_7BD5+2Ah, 50h ; 'P'
seg000:902B		    mov	    bl,	byte_8DA6
seg000:902F		    cmp	    bl,	4
seg000:9032		    ja	    short loc_903C
seg000:9034		    dec	    byte_8DA7
seg000:9038		    jz	    short loc_903C
seg000:903A		    jmp	    short loc_904B
seg000:903C ; ───────────────────────────────────────────────────────────────────────────
seg000:903C
seg000:903C loc_903C:				    ; CODE XREF: seg000:9032j
seg000:903C					    ; seg000:9038j
seg000:903C		    mov	    si,	word_8DA8
seg000:9040		    mov	    bl,	[si]
seg000:9042		    mov	    byte_8DA6, bl
seg000:9046		    inc	    si
seg000:9047		    mov	    word_8DA8, si
seg000:904B
seg000:904B loc_904B:				    ; CODE XREF: seg000:903Aj
seg000:904B		    xor	    bh,	bh
seg000:904D		    shl	    bx,	1
seg000:904F		    cmp	    bx,	8
seg000:9052		    ja	    short loc_9063
seg000:9054		    test    byte_8DA7, 0FFh
seg000:9059		    jnz	    short loc_9063
seg000:905B		    lodsb
seg000:905C		    mov	    byte_8DA7, al
seg000:905F		    mov	    word_8DA8, si
seg000:9063
seg000:9063 loc_9063:				    ; CODE XREF: seg000:9052j
seg000:9063					    ; seg000:9059j
seg000:9063		    jmp	    word ptr [bx-7137h]
seg000:9067 ; ───────────────────────────────────────────────────────────────────────────
seg000:9067		    retn
seg000:9068 ; ───────────────────────────────────────────────────────────────────────────
seg000:9068		    mov	    byte_7BD5+29h, 50h ; 'P'
seg000:906D		    mov	    byte_7BD5+2Ah, 0
seg000:9072		    retn
seg000:9073 ; ───────────────────────────────────────────────────────────────────────────
seg000:9073		    mov	    byte_7BD5+29h, 96h ; 'û'
seg000:9078		    mov	    byte_7BD5+2Ah, 50h ; 'P'
seg000:907D		    retn
seg000:907E ; ───────────────────────────────────────────────────────────────────────────
seg000:907E		    mov	    byte_7BD5+29h, 50h ; 'P'
seg000:9083		    mov	    byte_7BD5+2Ah, 96h ; 'û'
seg000:9088		    retn
seg000:9089 ; ───────────────────────────────────────────────────────────────────────────
seg000:9089		    mov	    byte_7BD5+29h, 0
seg000:908E		    mov	    byte_7BD5+2Ah, 50h ; 'P'
seg000:9093		    retn
seg000:9094 ; ───────────────────────────────────────────────────────────────────────────
seg000:9094		    push    si
seg000:9095		    mov	    dx,	706h
seg000:9098		    call    sub_82B4
seg000:909B		    pop	    si
seg000:909C		    mov	    ax,	9
seg000:909F		    mov	    bx,	8
seg000:90A2		    call    sub_82F7
seg000:90A5		    mov	    word_8DA8, si
seg000:90A9		    retn
seg000:90AA ; ───────────────────────────────────────────────────────────────────────────
seg000:90AA		    mov	    ax,	9
seg000:90AD		    mov	    bx,	8
seg000:90B0		    mov	    si,	8E89h
seg000:90B3		    jmp	    sub_82F7
seg000:90B6 ; ───────────────────────────────────────────────────────────────────────────
seg000:90B6		    mov	    byte_7BD5+2Bh, 1
seg000:90BB		    retn
seg000:90BC ; ───────────────────────────────────────────────────────────────────────────
seg000:90BC		    mov	    word_8DA8, si
seg000:90C0		    add	    word_8DA8, 4
seg000:90C5		    mov	    di,	si
seg000:90C7		    call    sub_917E
seg000:90CA		    call    sub_916B
seg000:90CD		    xchg    si,	di
seg000:90CF		    lodsw
seg000:90D0		    mov	    [di], ax
seg000:90D2		    shl	    al,	1
seg000:90D4		    shl	    ah,	1
seg000:90D6		    mov	    [di+4], ax
seg000:90D9		    lodsw
seg000:90DA		    mov	    [di+8], al
seg000:90DD		    mov	    [di+9], ah
seg000:90E0		    xchg    di,	si
seg000:90E2		    call    sub_9255
seg000:90E5		    cmp	    byte_8DDD, 18h
seg000:90EA		    jz	    short loc_90ED
seg000:90EC		    retn
seg000:90ED ; ───────────────────────────────────────────────────────────────────────────
seg000:90ED
seg000:90ED loc_90ED:				    ; CODE XREF: seg000:90EAj
seg000:90ED		    mov	    byte ptr [si+0Ah], 0FFh
seg000:90F1		    retn
seg000:90F2 ; ───────────────────────────────────────────────────────────────────────────
seg000:90F2		    mov	    bx,	8936h
seg000:90F5		    mov	    bp,	60E9h
seg000:90F8		    mov	    al,	byte_8E0A
seg000:90FB		    inc	    al
seg000:90FD		    and	    al,	3
seg000:90FF		    mov	    byte_8E0A, al
seg000:9102		    mov	    ah,	0C0h ; '└'
seg000:9104		    mul	    ah
seg000:9106		    mov	    si,	3A4Eh
seg000:9109		    add	    si,	ax
seg000:910B		    mov	    cx,	word_8DF8
seg000:910F		    push    si
seg000:9110		    call    sub_912F
seg000:9113		    pop	    si
seg000:9114		    add	    si,	300h
seg000:9118		    mov	    word ptr byte_8DD1,	si
seg000:911C		    mov	    cx,	1
seg000:911F		    mov	    bp,	8E06h
seg000:9122		    cmp	    byte_8DDD, 1
seg000:9127		    jnz	    short sub_912F
seg000:9129		    mov	    cx,	15h
seg000:912C		    mov	    bp,	6094h
seg000:912F
seg000:912F ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:912F
seg000:912F
seg000:912F sub_912F	    proc near		    ; CODE XREF: seg000:9110p
seg000:912F					    ; seg000:9127j
seg000:912F		    mov	    dx,	word_8E04
seg000:9133
seg000:9133 loc_9133:				    ; CODE XREF: sub_912F+39j
seg000:9133		    push    cx
seg000:9134		    xor	    ah,	ah
seg000:9136		    mov	    al,	[bp+0]
seg000:9139		    inc	    bp
seg000:913A		    mov	    di,	ax
seg000:913C		    shl	    di,	1
seg000:913E		    shl	    di,	1
seg000:9140		    shl	    di,	1
seg000:9142		    shl	    di,	1
seg000:9144		    mov	    al,	[bp+0]
seg000:9147		    inc	    bp
seg000:9148		    or	    al,	al
seg000:914A		    js	    short loc_9167
seg000:914C		    mul	    byte_8E01
seg000:9150		    shl	    ax,	1
seg000:9152		    shl	    ax,	1
seg000:9154		    shl	    ax,	1
seg000:9156		    shl	    ax,	1
seg000:9158		    shl	    ax,	1
seg000:915A		    shl	    ax,	1
seg000:915C		    add	    di,	ax
seg000:915E		    mov	    ax,	si
seg000:9160		    push    bp
seg000:9161		    call    loc_ACA7
seg000:9164		    pop	    bp
seg000:9165		    mov	    si,	ax
seg000:9167
seg000:9167 loc_9167:				    ; CODE XREF: sub_912F+1Bj
seg000:9167		    pop	    cx
seg000:9168		    loop    loc_9133
seg000:916A		    retn
seg000:916A sub_912F	    endp
seg000:916A
seg000:916B
seg000:916B ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:916B
seg000:916B
seg000:916B sub_916B	    proc near		    ; CODE XREF: seg000:90CAp
seg000:916B					    ; sub_9480-62p ...
seg000:916B		    push    di
seg000:916C		    mov	    di,	si
seg000:916E		    mov	    cx,	11h
seg000:9171		    mov	    al,	0
seg000:9173		    rep	stosb
seg000:9175		    mov	    byte ptr [si+0F8h],	0FFh
seg000:917A		    dec	    byte ptr [si]
seg000:917C		    pop	    di
seg000:917D		    retn
seg000:917D sub_916B	    endp
seg000:917D
seg000:917E
seg000:917E ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:917E
seg000:917E
seg000:917E sub_917E	    proc near		    ; CODE XREF: seg000:90C7p
seg000:917E					    ; sub_9438+11p
seg000:917E		    mov	    si,	8A6Fh
seg000:9181		    mov	    cx,	0Ah
seg000:9184
seg000:9184 loc_9184:				    ; CODE XREF: sub_917E+Ej
seg000:9184		    cmp	    byte ptr [si], 0FFh
seg000:9187		    jz	    short locret_918F
seg000:9189		    add	    si,	11h
seg000:918C		    loop    loc_9184
seg000:918E		    pop	    ax
seg000:918F
seg000:918F locret_918F:			    ; CODE XREF: sub_917E+9j
seg000:918F		    retn
seg000:918F sub_917E	    endp ; sp =	 2
seg000:918F
seg000:9190 ; ───────────────────────────────────────────────────────────────────────────
seg000:9190
seg000:9190 loc_9190:				    ; CODE XREF: sub_A279+80p
seg000:9190					    ; sub_A279+9Ep ...
seg000:9190		    mov	    dx,	406h
seg000:9193		    cmp	    si,	894Eh
seg000:9197		    jnz	    short loc_919C
seg000:9199		    mov	    dx,	307h
seg000:919C
seg000:919C loc_919C:				    ; CODE XREF: seg000:9197j
seg000:919C		    mov	    bp,	8C2Bh
seg000:919F		    mov	    cx,	8
seg000:91A2
seg000:91A2 loc_91A2:				    ; CODE XREF: seg000:91ABj
seg000:91A2		    test    byte ptr [bp+0], 0FFh
seg000:91A6		    jz	    short loc_91AE
seg000:91A8		    add	    bp,	0Ah
seg000:91AB		    loop    loc_91A2
seg000:91AD		    retn
seg000:91AE ; ───────────────────────────────────────────────────────────────────────────
seg000:91AE
seg000:91AE loc_91AE:				    ; CODE XREF: seg000:91A6j
seg000:91AE		    mov	    [bp+5], dx
seg000:91B1		    mov	    byte ptr [bp+0], 1Fh
seg000:91B5		    mov	    dl,	0Ah
seg000:91B7		    div	    dl
seg000:91B9		    or	    ax,	3030h
seg000:91BC		    mov	    [bp+7], ax
seg000:91BF		    mov	    ax,	[si+1Bh]
seg000:91C2		    mov	    bl,	ah
seg000:91C4		    xor	    ah,	ah
seg000:91C6		    xor	    bh,	bh
seg000:91C8		    mov	    cl,	3
seg000:91CA		    shl	    ax,	cl
seg000:91CC		    inc	    cl
seg000:91CC ; ───────────────────────────────────────────────────────────────────────────
seg000:91CE		    db 0D3h
seg000:91CF word_91CF	    dw 40E3h		    ; DATA XREF: sub_AD28+Ar
seg000:91D1 ; ───────────────────────────────────────────────────────────────────────────
seg000:91D1		    add	    bx,	2
seg000:91D4		    mov	    [bp+1], ax
seg000:91D7		    mov	    [bp+3], bx
seg000:91DA		    retn
seg000:91DA ; ───────────────────────────────────────────────────────────────────────────
seg000:91DB		    db	8Bh ; ï
seg000:91DC		    db	1Eh
seg000:91DD		    db 0FAh ; ·
seg000:91DE		    db	8Dh ; ì
seg000:91DF		    db 0D1h ; ╤
seg000:91E0		    db 0E3h ; π
seg000:91E1		    db	8Bh ; ï
seg000:91E2		    db	87h ; ç
seg000:91E3		    db 0E9h ; Θ
seg000:91E4		    db	60h ; `
seg000:91E5		    db 0D1h ; ╤
seg000:91E6		    db 0EBh ; δ
seg000:91E7		    db	43h ; C
seg000:91E8		    db	3Bh ; ;
seg000:91E9		    db	1Eh
seg000:91EA		    db 0F8h ; °
seg000:91EB		    db	8Dh ; ì
seg000:91EC		    db	72h ; r
seg000:91ED		    db	  2
seg000:91EE		    db	33h ; 3
seg000:91EF		    db 0DBh ; █
seg000:91F0		    db	89h ; ë
seg000:91F1		    db	1Eh
seg000:91F2		    db 0FAh ; ·
seg000:91F3		    db	8Dh ; ì
seg000:91F4		    db 0C3h ; ├
seg000:91F5		    db 0E8h, 86h, 0FFh,	0E8h, 70h, 0FFh, 0E8h, 0DDh, 0FFh
seg000:91F5		    db 89h, 4
seg000:9200 byte_9200	    db 0D0h		    ; DATA XREF: sub_AC2A+59r
seg000:9201 byte_9201	    db 0E0h		    ; DATA XREF: sub_AC2A+48r
seg000:9202		    db 0D0h, 0E4h
seg000:9204 word_9204	    dw 4489h		    ; DATA XREF: sub_AC2A+5r
seg000:9206		    db 4, 0E8h,	4Eh, 0F2h, 80h,	0E5h, 3, 88h, 6Ch, 7, 88h
seg000:9206		    db 6Ch, 9, 0B8h, 45h, 1, 80h, 3Eh, 0DEh, 8Dh, 0, 75h, 3
seg000:9206		    db 0B8h, 58h, 2, 80h, 3Eh, 0DEh, 8Dh, 0Dh, 72h, 3, 0B8h
seg000:9206		    db 14h, 0, 39h, 6, 0CFh, 8Dh, 77h, 0Ah, 0F6h, 0C6h,	70h
seg000:9206		    db 75h, 16h, 80h, 0E6h, 7, 75h, 4, 0B6h, 9,	0EBh, 14h
seg000:9206		    db 0FEh, 0CEh, 80h,	0FEh, 6, 74h, 6, 80h, 0C6h, 3, 0EBh
seg000:9206		    db 8, 90h, 80h, 0E6h, 1, 2,	36h, 0FFh, 8Dh,	88h, 74h, 8
seg000:9255
seg000:9255 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9255
seg000:9255
seg000:9255 sub_9255	    proc near		    ; CODE XREF: seg000:90E2p
seg000:9255					    ; sub_9438+45j
seg000:9255
seg000:9255 ; FUNCTION CHUNK AT	seg000:9FA7 SIZE 00000015 BYTES
seg000:9255
seg000:9255		    mov	    al,	[si+8]
seg000:9258		    mov	    ah,	al
seg000:925A		    mov	    bx,	8D9Ch
seg000:925D		    xlat
seg000:925E		    and	    cl,	7
seg000:9261		    rol	    al,	cl
seg000:9263		    cmp	    byte_8DDE, 6
seg000:9268		    jb	    short loc_926C
seg000:926A		    mov	    al,	0FFh
seg000:926C
seg000:926C loc_926C:				    ; CODE XREF: sub_9255+13j
seg000:926C		    mov	    [si+0Ah], al
seg000:926F		    mov	    al,	ah
seg000:9271		    mov	    bx,	3A44h
seg000:9274		    xlat
seg000:9275		    mov	    [si+6], al
seg000:9278		    jmp	    loc_9FA7
seg000:9278 sub_9255	    endp
seg000:9278
seg000:927B ; ───────────────────────────────────────────────────────────────────────────
seg000:927B ; START OF FUNCTION	CHUNK FOR sub_A61D
seg000:927B
seg000:927B loc_927B:				    ; CODE XREF: sub_A61D+23j
seg000:927B		    mov	    si,	8A4Dh
seg000:927E		    mov	    di,	8B3Bh
seg000:9281		    mov	    cx,	78h ; 'x'
seg000:9284		    rep	movsw
seg000:9286		    retn
seg000:9286 ; END OF FUNCTION CHUNK FOR	sub_A61D
seg000:9287 ; ───────────────────────────────────────────────────────────────────────────
seg000:9287		    mov	    si,	8A4Dh
seg000:928A		    mov	    bp,	0Eh
seg000:928D ; START OF FUNCTION	CHUNK FOR sub_9480
seg000:928D
seg000:928D loc_928D:				    ; CODE XREF: sub_9480-4Cj
seg000:928D		    mov	    ah,	[si+8]
seg000:9290		    cmp	    ah,	3
seg000:9293		    jb	    short loc_929F
seg000:9295		    mov	    bl,	[si+0Eh]
seg000:9298		    inc	    bl
seg000:929A		    jz	    short loc_929F
seg000:929C		    mov	    [si+0Eh], bl
seg000:929F
seg000:929F loc_929F:				    ; CODE XREF: sub_9480-1EDj
seg000:929F					    ; sub_9480-1E6j
seg000:929F		    cmp	    byte ptr [si], 0FFh
seg000:92A2		    jnz	    short loc_92A7
seg000:92A4		    jmp	    loc_942E
seg000:92A7 ; ───────────────────────────────────────────────────────────────────────────
seg000:92A7
seg000:92A7 loc_92A7:				    ; CODE XREF: sub_9480-1DEj
seg000:92A7		    mov	    al,	byte_8DD4
seg000:92AA		    and	    al,	[si+0Ah]
seg000:92AD		    jnz	    short loc_92B2
seg000:92AF		    jmp	    loc_942E
seg000:92B2 ; ───────────────────────────────────────────────────────────────────────────
seg000:92B2
seg000:92B2 loc_92B2:				    ; CODE XREF: sub_9480-1D3j
seg000:92B2		    cmp	    ah,	3
seg000:92B5		    jb	    short loc_92C0
seg000:92B7		    cmp	    byte ptr [si+0Eh], 8
seg000:92BB		    ja	    short loc_92C0
seg000:92BD		    jmp	    loc_9403
seg000:92C0 ; ───────────────────────────────────────────────────────────────────────────
seg000:92C0
seg000:92C0 loc_92C0:				    ; CODE XREF: sub_9480-1CBj
seg000:92C0					    ; sub_9480-1C5j
seg000:92C0		    mov	    byte_8DD5+1, 0
seg000:92C5		    mov	    ax,	[si+2]
seg000:92C8		    or	    ax,	ax
seg000:92CA		    jnz	    short loc_932B
seg000:92CC		    call    sub_8458
seg000:92CF		    cmp	    byte ptr [si+8], 3
seg000:92D3		    jb	    short loc_932B
seg000:92D5		    test    dh,	10h
seg000:92D8		    jnz	    short loc_932B
seg000:92DA		    inc	    byte_8DD5+1
seg000:92DE		    mov	    bl,	[si+23h]
seg000:92E1		    mov	    al,	byte ptr word_8DCF
seg000:92E4		    test    al,	10h
seg000:92E6		    jz	    short loc_9323
seg000:92E8		    mov	    di,	8983h
seg000:92EB		    test    byte_8983, 0FFh
seg000:92F0		    js	    short loc_92F6
seg000:92F2		    test    al,	20h
seg000:92F4		    jz	    short loc_92F9
seg000:92F6
seg000:92F6 loc_92F6:				    ; CODE XREF: sub_9480-190j
seg000:92F6		    mov	    di,	894Eh
seg000:92F9
seg000:92F9 loc_92F9:				    ; CODE XREF: sub_9480-18Cj
seg000:92F9		    mov	    ah,	1
seg000:92FB		    mov	    al,	[di+1Dh]
seg000:92FE		    sub	    al,	[si+4]
seg000:9301		    jns	    short loc_9307
seg000:9303		    neg	    al
seg000:9305		    mov	    ah,	3
seg000:9307
seg000:9307 loc_9307:				    ; CODE XREF: sub_9480-17Fj
seg000:9307		    cmp	    al,	2
seg000:9309		    jnb	    short loc_9317
seg000:930B		    xor	    ah,	ah
seg000:930D		    mov	    al,	[di+1Eh]
seg000:9310		    sub	    al,	[si+5]
seg000:9313		    js	    short loc_9317
seg000:9315		    mov	    ah,	2
seg000:9317
seg000:9317 loc_9317:				    ; CODE XREF: sub_9480-177j
seg000:9317					    ; sub_9480-16Dj
seg000:9317		    mov	    [si+9], ah
seg000:931A		    push    bx
seg000:931B		    push    si
seg000:931C		    call    sub_9438
seg000:931F		    pop	    si
seg000:9320		    pop	    bx
seg000:9321		    jmp	    short loc_932B
seg000:9323 ; ───────────────────────────────────────────────────────────────────────────
seg000:9323
seg000:9323 loc_9323:				    ; CODE XREF: sub_9480-19Aj
seg000:9323		    shr	    dl,	1
seg000:9325		    and	    dl,	3
seg000:9328		    mov	    [si+9], dl
seg000:932B
seg000:932B loc_932B:				    ; CODE XREF: sub_9480-1B6j
seg000:932B					    ; sub_9480-1ADj ...
seg000:932B		    cmp	    byte ptr [si+8], 3
seg000:932F		    jb	    short loc_933B
seg000:9331		    mov	    al,	byte_8DD5
seg000:9334		    or	    al,	al
seg000:9336		    jz	    short loc_933B
seg000:9338		    jmp	    loc_9403
seg000:933B ; ───────────────────────────────────────────────────────────────────────────
seg000:933B
seg000:933B loc_933B:				    ; CODE XREF: sub_9480-151j
seg000:933B					    ; sub_9480-14Aj ...
seg000:933B		    mov	    al,	[si+9]
seg000:933E		    dec	    al
seg000:9340		    js	    short loc_9354
seg000:9342		    dec	    al
seg000:9344		    js	    short loc_93A1
seg000:9346		    dec	    al
seg000:9348		    js	    short loc_937B
seg000:934A		    dec	    al
seg000:934C		    jns	    short loc_9351
seg000:934E		    jmp	    loc_93DB
seg000:9351 ; ───────────────────────────────────────────────────────────────────────────
seg000:9351
seg000:9351 loc_9351:				    ; CODE XREF: sub_9480-134j
seg000:9351		    jmp	    loc_9403
seg000:9354 ; ───────────────────────────────────────────────────────────────────────────
seg000:9354
seg000:9354 loc_9354:				    ; CODE XREF: sub_9480-140j
seg000:9354		    test    byte ptr [si+3], 0FFh
seg000:9358		    jnz	    short loc_9372
seg000:935A		    test    byte ptr [si+1], 0FFh
seg000:935E		    jnz	    short loc_9363
seg000:9360		    jmp	    loc_9403
seg000:9363 ; ───────────────────────────────────────────────────────────────────────────
seg000:9363
seg000:9363 loc_9363:				    ; CODE XREF: sub_9480-122j
seg000:9363		    mov	    al,	byte_8E01
seg000:9366		    neg	    al
seg000:9368		    call    sub_9480
seg000:936B		    mov	    byte ptr [si+3], 2
seg000:936F		    dec	    byte ptr [si+1]
seg000:9372
seg000:9372 loc_9372:				    ; CODE XREF: sub_9480-128j
seg000:9372		    dec	    byte ptr [si+5]
seg000:9375		    dec	    byte ptr [si+3]
seg000:9378		    jmp	    loc_9403
seg000:937B ; ───────────────────────────────────────────────────────────────────────────
seg000:937B
seg000:937B loc_937B:				    ; CODE XREF: sub_9480-138j
seg000:937B		    test    byte ptr [si+3], 0FFh
seg000:937F		    jnz	    short loc_9391
seg000:9381		    mov	    al,	[si+1]
seg000:9384		    inc	    ax
seg000:9385		    cmp	    al,	byte_8E00
seg000:9389		    jz	    short loc_9403
seg000:938B		    mov	    al,	byte_8E01
seg000:938E		    call    sub_9480
seg000:9391
seg000:9391 loc_9391:				    ; CODE XREF: sub_9480-101j
seg000:9391		    inc	    byte ptr [si+5]
seg000:9394		    mov	    al,	[si+3]
seg000:9397		    xor	    al,	1
seg000:9399		    mov	    [si+3], al
seg000:939C		    add	    [si+1], al
seg000:939F		    jmp	    short loc_9403
seg000:93A1 ; ───────────────────────────────────────────────────────────────────────────
seg000:93A1
seg000:93A1 loc_93A1:				    ; CODE XREF: sub_9480-13Cj
seg000:93A1		    test    byte ptr [si+2], 0FFh
seg000:93A5		    jnz	    short loc_93B5
seg000:93A7		    mov	    al,	[si]
seg000:93A9		    inc	    ax
seg000:93AA		    cmp	    al,	byte_8E01
seg000:93AE		    jz	    short loc_9403
seg000:93B0		    mov	    al,	1
seg000:93B2		    call    sub_9480
seg000:93B5
seg000:93B5 loc_93B5:				    ; CODE XREF: sub_9480-DBj
seg000:93B5		    inc	    byte ptr [si+4]
seg000:93B8		    mov	    al,	[si+2]
seg000:93BB		    xor	    al,	1
seg000:93BD		    mov	    [si+2], al
seg000:93C0		    add	    [si], al
seg000:93C2		    mov	    ah,	[si+6]
seg000:93C5		    test    ah,	4
seg000:93C8		    jz	    short loc_9403
seg000:93CA		    mov	    word ptr [si+0Fh], 180h
seg000:93CF		    test    ah,	2
seg000:93D2		    jz	    short loc_9403
seg000:93D4		    mov	    word ptr [si+0Fh], 300h
seg000:93D9		    jmp	    short loc_9403
seg000:93DB ; ───────────────────────────────────────────────────────────────────────────
seg000:93DB
seg000:93DB loc_93DB:				    ; CODE XREF: sub_9480-132j
seg000:93DB		    test    byte ptr [si+2], 0FFh
seg000:93DF		    jnz	    short loc_93F2
seg000:93E1		    test    byte ptr [si+4], 0FFh
seg000:93E5		    jz	    short loc_9403
seg000:93E7		    mov	    al,	0FFh
seg000:93E9		    call    sub_9480
seg000:93EC		    dec	    byte ptr [si]
seg000:93EE		    mov	    byte ptr [si+2], 2
seg000:93F2
seg000:93F2 loc_93F2:				    ; CODE XREF: sub_9480-A1j
seg000:93F2		    dec	    byte ptr [si+4]
seg000:93F5		    dec	    byte ptr [si+2]
seg000:93F8		    test    byte ptr [si+6], 4
seg000:93FC		    jz	    short loc_9403
seg000:93FE		    mov	    word ptr [si+0Fh], 0
seg000:9403
seg000:9403 loc_9403:				    ; CODE XREF: sub_9480-1C3j
seg000:9403					    ; sub_9480-148j ...
seg000:9403		    cmp	    byte ptr [si+8], 1
seg000:9407		    jz	    short loc_9419
seg000:9409		    cmp	    byte ptr [si+8], 2
seg000:940D		    ja	    short loc_9423
seg000:940F		    test    word ptr [si+2], 0FFFFh
seg000:9414		    jz	    short loc_9419
seg000:9416		    jmp	    loc_933B
seg000:9419 ; ───────────────────────────────────────────────────────────────────────────
seg000:9419
seg000:9419 loc_9419:				    ; CODE XREF: sub_9480-79j
seg000:9419					    ; sub_9480-6Cj
seg000:9419		    dec	    byte ptr [si+0Eh]
seg000:941C		    jnz	    short loc_9423
seg000:941E		    call    sub_916B
seg000:9421		    jmp	    short loc_942E
seg000:9423 ; ───────────────────────────────────────────────────────────────────────────
seg000:9423
seg000:9423 loc_9423:				    ; CODE XREF: sub_9480-73j
seg000:9423					    ; sub_9480-64j
seg000:9423		    inc	    byte ptr [si+7]
seg000:9426		    mov	    al,	[si+6]
seg000:9429		    and	    al,	3
seg000:942B		    and	    [si+7], al
seg000:942E
seg000:942E loc_942E:				    ; CODE XREF: sub_9480-1DCj
seg000:942E					    ; sub_9480-1D1j ...
seg000:942E		    add	    si,	11h
seg000:9431		    dec	    bp
seg000:9432		    jz	    short locret_9437
seg000:9434		    jmp	    loc_928D
seg000:9437 ; ───────────────────────────────────────────────────────────────────────────
seg000:9437
seg000:9437 locret_9437:			    ; CODE XREF: sub_9480-4Ej
seg000:9437		    retn
seg000:9437 ; END OF FUNCTION CHUNK FOR	sub_9480
seg000:9438
seg000:9438 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9438
seg000:9438
seg000:9438 sub_9438	    proc near		    ; CODE XREF: sub_9480-164p
seg000:9438		    cmp	    byte ptr [si+8], 9
seg000:943C		    jz	    short loc_943F
seg000:943E		    retn
seg000:943F ; ───────────────────────────────────────────────────────────────────────────
seg000:943F
seg000:943F loc_943F:				    ; CODE XREF: sub_9438+4j
seg000:943F		    test    word ptr [si+2], 0FFFFh
seg000:9444		    jz	    short loc_9447
seg000:9446		    retn
seg000:9447 ; ───────────────────────────────────────────────────────────────────────────
seg000:9447
seg000:9447 loc_9447:				    ; CODE XREF: sub_9438+Cj
seg000:9447		    xchg    si,	di
seg000:9449		    call    sub_917E
seg000:944C		    call    sub_916B
seg000:944F		    mov	    al,	[di+9]
seg000:9452		    mov	    [si+9], al
seg000:9455		    mov	    byte ptr [si+6], 3
seg000:9459		    mov	    ax,	[di]
seg000:945B		    mov	    [si], ax
seg000:945D		    mov	    ax,	[di+4]
seg000:9460		    mov	    [si+4], ax
seg000:9463		    mov	    byte ptr [si+0Eh], 10h
seg000:9467		    mov	    byte ptr [si+8], 2
seg000:946B		    mov	    ax,	6
seg000:946E		    call    sub_A2
seg000:9471		    push    si
seg000:9472		    push    bx
seg000:9473		    push    bp
seg000:9474		    mov	    bx,	8E42h
seg000:9477		    call    sub_AB83
seg000:947A		    pop	    bp
seg000:947B		    pop	    bx
seg000:947C		    pop	    si
seg000:947D		    jmp	    sub_9255
seg000:947D sub_9438	    endp
seg000:947D
seg000:9480
seg000:9480 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9480
seg000:9480
seg000:9480 sub_9480	    proc near		    ; CODE XREF: sub_9480-118p
seg000:9480					    ; sub_9480-F2p ...
seg000:9480
seg000:9480 ; FUNCTION CHUNK AT	seg000:928D SIZE 000001AB BYTES
seg000:9480
seg000:9480		    cbw
seg000:9481		    mov	    di,	ax
seg000:9483		    add	    di,	[si+0Bh]
seg000:9486		    mov	    al,	[di]
seg000:9488		    cmp	    al,	78h ; 'x'
seg000:948A		    jz	    short loc_94AD
seg000:948C		    cmp	    byte ptr [si+0Eh], 0FFh
seg000:9490		    jz	    short loc_949A
seg000:9492		    cmp	    al,	40h ; '@'
seg000:9494		    jz	    short loc_949A
seg000:9496		    cmp	    al,	72h ; 'r'
seg000:9498		    jnz	    short loc_949E
seg000:949A
seg000:949A loc_949A:				    ; CODE XREF: sub_9480+10j
seg000:949A					    ; sub_9480+14j ...
seg000:949A		    mov	    [si+0Bh], di
seg000:949D		    retn
seg000:949E ; ───────────────────────────────────────────────────────────────────────────
seg000:949E
seg000:949E loc_949E:				    ; CODE XREF: sub_9480+18j
seg000:949E		    cmp	    al,	50h ; 'P'
seg000:94A0		    jb	    short loc_94AD
seg000:94A2		    cmp	    al,	53h ; 'S'
seg000:94A4		    ja	    short loc_94AD
seg000:94A6		    sub	    al,	50h ; 'P'
seg000:94A8		    cmp	    al,	[si+9]
seg000:94AB		    jnz	    short loc_949A
seg000:94AD
seg000:94AD loc_94AD:				    ; CODE XREF: sub_9480+Aj
seg000:94AD					    ; sub_9480+20j ...
seg000:94AD		    pop	    ax
seg000:94AE		    test    byte_8DD5+1, 0FFh
seg000:94B3		    jz	    short loc_94BF
seg000:94B5		    dec	    byte_8DD5+1
seg000:94B9		    mov	    [si+9], bl
seg000:94BC		    jmp	    loc_932B
seg000:94BF ; ───────────────────────────────────────────────────────────────────────────
seg000:94BF
seg000:94BF loc_94BF:				    ; CODE XREF: sub_9480+33j
seg000:94BF		    and	    ch,	3
seg000:94C2		    mov	    [si+9], ch
seg000:94C5		    jmp	    loc_9403
seg000:94C5 sub_9480	    endp
seg000:94C5
seg000:94C8
seg000:94C8 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:94C8
seg000:94C8
seg000:94C8 sub_94C8	    proc near		    ; CODE XREF: start:loc_8EEBp
seg000:94C8		    mov	    dl,	2
seg000:94CA
seg000:94CA loc_94CA:				    ; CODE XREF: sub_94C8+13j
seg000:94CA		    mov	    cx,	3
seg000:94CD		    xor	    dl,	3
seg000:94D0
seg000:94D0 loc_94D0:				    ; CODE XREF: sub_94C8+11j
seg000:94D0		    push    cx
seg000:94D1		    push    dx
seg000:94D2		    call    sub_94F0
seg000:94D5		    pop	    dx
seg000:94D6		    pop	    cx
seg000:94D7		    jnb	    short loc_94DD
seg000:94D9		    loop    loc_94D0
seg000:94DB		    jmp	    short loc_94CA
seg000:94DD ; ───────────────────────────────────────────────────────────────────────────
seg000:94DD
seg000:94DD loc_94DD:				    ; CODE XREF: sub_94C8+Fj
seg000:94DD					    ; sub_94C8+25j
seg000:94DD		    mov	    bx,	8A4Dh
seg000:94E0		    mov	    dx,	8
seg000:94E3		    xor	    ax,	ax
seg000:94E5		    mov	    cx,	1
seg000:94E8		    call    sub_6B6
seg000:94EB		    or	    al,	al
seg000:94ED		    jz	    short loc_94DD
seg000:94EF		    retn
seg000:94EF sub_94C8	    endp
seg000:94EF
seg000:94F0
seg000:94F0 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:94F0
seg000:94F0
seg000:94F0 sub_94F0	    proc near		    ; CODE XREF: sub_94C8+Ap
seg000:94F0		    xor	    al,	al
seg000:94F2		    out	    1Ch, al
seg000:94F4		    mov	    al,	4
seg000:94F6		    out	    1Eh, al
seg000:94F8		    mov	    cx,	1A04h
seg000:94FB
seg000:94FB loc_94FB:				    ; CODE XREF: sub_94F0:loc_94FBj
seg000:94FB		    loop    loc_94FB
seg000:94FD		    mov	    al,	8
seg000:94FF		    out	    8, al	    ; DMA 8237A-5. cmd reg bits:
seg000:94FF					    ; 0: enable	mem-to-mem DMA
seg000:94FF					    ; 1: enable	Ch0 address hold
seg000:94FF					    ; 2: disable controller
seg000:94FF					    ; 3: compressed timing mode
seg000:94FF					    ; 4: enable	rotating priority
seg000:94FF					    ; 5: extended write	mode; 0=late write
seg000:94FF					    ; 6: DRQ sensing - active high
seg000:94FF					    ; 7: DACK sensing -	active high
seg000:9501		    aam
seg000:9503		    aam
seg000:9505		    aam
seg000:9507
seg000:9507 loc_9507:				    ; CODE XREF: sub_94F0+1Bj
seg000:9507					    ; sub_94F0+29j
seg000:9507		    in	    al,	8	    ; DMA 8237A-5. status register bits:
seg000:9507					    ; 0-3: channel 0-3 has reached terminal count
seg000:9507					    ; 4-7: channel 0-3 has a request pending
seg000:9509		    test    al,	1
seg000:950B		    jnz	    short loc_9507
seg000:950D		    test    al,	80h
seg000:950F		    jz	    short loc_951B
seg000:9511		    mov	    al,	8
seg000:9513		    out	    8, al	    ; DMA 8237A-5. cmd reg bits:
seg000:9513					    ; 0: enable	mem-to-mem DMA
seg000:9513					    ; 1: enable	Ch0 address hold
seg000:9513					    ; 2: disable controller
seg000:9513					    ; 3: compressed timing mode
seg000:9513					    ; 4: enable	rotating priority
seg000:9513					    ; 5: extended write	mode; 0=late write
seg000:9513					    ; 6: DRQ sensing - active high
seg000:9513					    ; 7: DACK sensing -	active high
seg000:9515		    aam
seg000:9517		    aam
seg000:9519		    jmp	    short loc_9507
seg000:951B ; ───────────────────────────────────────────────────────────────────────────
seg000:951B
seg000:951B loc_951B:				    ; CODE XREF: sub_94F0+1Fj
seg000:951B		    cli
seg000:951C		    cld
seg000:951D
seg000:951D loc_951D:				    ; CODE XREF: sub_94F0+4Ej
seg000:951D		    mov	    cx,	1B51h
seg000:9520
seg000:9520 loc_9520:				    ; CODE XREF: sub_94F0:loc_9520j
seg000:9520		    loop    loc_9520
seg000:9522		    mov	    al,	dl
seg000:9524		    out	    0Eh, al	    ; DMA controller, 8237A-5.
seg000:9524					    ; Clear mask registers.
seg000:9524					    ; Any OUT enables all 4 channels.
seg000:9526		    mov	    al,	18h
seg000:9528		    out	    8, al	    ; DMA 8237A-5. cmd reg bits:
seg000:9528					    ; 0: enable	mem-to-mem DMA
seg000:9528					    ; 1: enable	Ch0 address hold
seg000:9528					    ; 2: disable controller
seg000:9528					    ; 3: compressed timing mode
seg000:9528					    ; 4: enable	rotating priority
seg000:9528					    ; 5: extended write	mode; 0=late write
seg000:9528					    ; 6: DRQ sensing - active high
seg000:9528					    ; 7: DACK sensing -	active high
seg000:952A		    aam
seg000:952C		    aam
seg000:952E		    aam
seg000:9530		    aam
seg000:9532		    aam
seg000:9534
seg000:9534 loc_9534:				    ; CODE XREF: sub_94F0+48j
seg000:9534		    in	    al,	8	    ; DMA 8237A-5. status register bits:
seg000:9534					    ; 0-3: channel 0-3 has reached terminal count
seg000:9534					    ; 4-7: channel 0-3 has a request pending
seg000:9536		    test    al,	1
seg000:9538		    jnz	    short loc_9534
seg000:953A		    test    al,	80h
seg000:953C		    jz	    short loc_9540
seg000:953E		    jmp	    short loc_951D
seg000:9540 ; ───────────────────────────────────────────────────────────────────────────
seg000:9540
seg000:9540 loc_9540:				    ; CODE XREF: sub_94F0+4Cj
seg000:9540		    mov	    cx,	1B51h
seg000:9543
seg000:9543 loc_9543:				    ; CODE XREF: sub_94F0:loc_9543j
seg000:9543		    loop    loc_9543
seg000:9545		    mov	    dx,	8
seg000:9548		    mov	    di,	8A4Dh
seg000:954B		    mov	    bh,	0FCh ; 'ⁿ'
seg000:954D		    mov	    bl,	2
seg000:954F		    mov	    cx,	200h
seg000:9552		    mov	    al,	0E4h ; 'Σ'
seg000:9554		    out	    dx,	al	    ; DMA 8237A-5. cmd reg bits:
seg000:9554					    ; 0: enable	mem-to-mem DMA
seg000:9554					    ; 1: enable	Ch0 address hold
seg000:9554					    ; 2: disable controller
seg000:9554					    ; 3: compressed timing mode
seg000:9554					    ; 4: enable	rotating priority
seg000:9554					    ; 5: extended write	mode; 0=late write
seg000:9554					    ; 6: DRQ sensing - active high
seg000:9554					    ; 7: DACK sensing -	active high
seg000:9555		    aam
seg000:9557		    aam
seg000:9559
seg000:9559 loc_9559:				    ; CODE XREF: sub_94F0+6Cj
seg000:9559		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:9559					    ; 0-3: channel 0-3 has reached terminal count
seg000:9559					    ; 4-7: channel 0-3 has a request pending
seg000:955A		    test    al,	1
seg000:955C		    jz	    short loc_9559
seg000:955E
seg000:955E loc_955E:				    ; CODE XREF: sub_94F0+A5j
seg000:955E		    test    al,	bh
seg000:9560		    jnz	    short loc_959C
seg000:9562
seg000:9562 loc_9562:				    ; CODE XREF: sub_94F0+7Aj
seg000:9562					    ; sub_94F0+86j ...
seg000:9562		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:9562					    ; 0-3: channel 0-3 has reached terminal count
seg000:9562					    ; 4-7: channel 0-3 has a request pending
seg000:9563		    test    al,	bl
seg000:9565		    jz	    short loc_956E
seg000:9567		    in	    al,	0Eh	    ; DMA controller, 8237A-5.
seg000:9567					    ; Clear mask registers.
seg000:9567					    ; Any OUT enables all 4 channels.
seg000:9569		    stosb
seg000:956A		    loop    loc_9562
seg000:956C		    jmp	    short loc_959C
seg000:956E ; ───────────────────────────────────────────────────────────────────────────
seg000:956E
seg000:956E loc_956E:				    ; CODE XREF: sub_94F0+75j
seg000:956E		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:956E					    ; 0-3: channel 0-3 has reached terminal count
seg000:956E					    ; 4-7: channel 0-3 has a request pending
seg000:956F		    test    al,	bl
seg000:9571		    jz	    short loc_957A
seg000:9573		    in	    al,	0Eh	    ; DMA controller, 8237A-5.
seg000:9573					    ; Clear mask registers.
seg000:9573					    ; Any OUT enables all 4 channels.
seg000:9575		    stosb
seg000:9576		    loop    loc_9562
seg000:9578		    jmp	    short loc_959C
seg000:957A ; ───────────────────────────────────────────────────────────────────────────
seg000:957A
seg000:957A loc_957A:				    ; CODE XREF: sub_94F0+81j
seg000:957A		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:957A					    ; 0-3: channel 0-3 has reached terminal count
seg000:957A					    ; 4-7: channel 0-3 has a request pending
seg000:957B		    test    al,	bl
seg000:957D		    jz	    short loc_9586
seg000:957F		    in	    al,	0Eh	    ; DMA controller, 8237A-5.
seg000:957F					    ; Clear mask registers.
seg000:957F					    ; Any OUT enables all 4 channels.
seg000:9581		    stosb
seg000:9582		    loop    loc_9562
seg000:9584		    jmp	    short loc_959C
seg000:9586 ; ───────────────────────────────────────────────────────────────────────────
seg000:9586
seg000:9586 loc_9586:				    ; CODE XREF: sub_94F0+8Dj
seg000:9586		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:9586					    ; 0-3: channel 0-3 has reached terminal count
seg000:9586					    ; 4-7: channel 0-3 has a request pending
seg000:9587		    test    al,	bl
seg000:9589		    jz	    short loc_9592
seg000:958B		    in	    al,	0Eh	    ; DMA controller, 8237A-5.
seg000:958B					    ; Clear mask registers.
seg000:958B					    ; Any OUT enables all 4 channels.
seg000:958D		    stosb
seg000:958E		    loop    loc_9562
seg000:9590		    jmp	    short loc_959C
seg000:9592 ; ───────────────────────────────────────────────────────────────────────────
seg000:9592
seg000:9592 loc_9592:				    ; CODE XREF: sub_94F0+99j
seg000:9592		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:9592					    ; 0-3: channel 0-3 has reached terminal count
seg000:9592					    ; 4-7: channel 0-3 has a request pending
seg000:9593		    test    al,	bl
seg000:9595		    jz	    short loc_955E
seg000:9597		    in	    al,	0Eh	    ; DMA controller, 8237A-5.
seg000:9597					    ; Clear mask registers.
seg000:9597					    ; Any OUT enables all 4 channels.
seg000:9599		    stosb
seg000:959A		    loop    loc_9562
seg000:959C
seg000:959C loc_959C:				    ; CODE XREF: sub_94F0+70j
seg000:959C					    ; sub_94F0+7Cj ...
seg000:959C		    in	    al,	dx	    ; DMA 8237A-5. status register bits:
seg000:959C					    ; 0-3: channel 0-3 has reached terminal count
seg000:959C					    ; 4-7: channel 0-3 has a request pending
seg000:959D		    sti
seg000:959E		    and	    al,	0F8h
seg000:95A0		    jz	    short loc_95A4
seg000:95A2		    stc
seg000:95A3		    retn
seg000:95A4 ; ───────────────────────────────────────────────────────────────────────────
seg000:95A4
seg000:95A4 loc_95A4:				    ; CODE XREF: sub_94F0+B0j
seg000:95A4		    mov	    si,	95E3h
seg000:95A7		    call    sub_95C6
seg000:95AA		    jnb	    short loc_95AD
seg000:95AC		    retn
seg000:95AD ; ───────────────────────────────────────────────────────────────────────────
seg000:95AD
seg000:95AD loc_95AD:				    ; CODE XREF: sub_94F0+BAj
seg000:95AD		    mov	    si,	95EAh
seg000:95B0		    call    sub_95C6
seg000:95B3		    jnb	    short loc_95B6
seg000:95B5		    retn
seg000:95B6 ; ───────────────────────────────────────────────────────────────────────────
seg000:95B6
seg000:95B6 loc_95B6:				    ; CODE XREF: sub_94F0+C3j
seg000:95B6		    mov	    si,	95F3h
seg000:95B9		    call    sub_95C6
seg000:95BC		    jnb	    short loc_95BF
seg000:95BE		    retn
seg000:95BF ; ───────────────────────────────────────────────────────────────────────────
seg000:95BF
seg000:95BF loc_95BF:				    ; CODE XREF: sub_94F0+CCj
seg000:95BF		    mov	    si,	95F9h
seg000:95C2		    call    sub_95C6
seg000:95C5		    retn
seg000:95C5 sub_94F0	    endp
seg000:95C5
seg000:95C6
seg000:95C6 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:95C6
seg000:95C6
seg000:95C6 sub_95C6	    proc near		    ; CODE XREF: sub_94F0+B7p
seg000:95C6					    ; sub_94F0+C0p ...
seg000:95C6		    mov	    bx,	8A4Dh
seg000:95C9
seg000:95C9 loc_95C9:				    ; CODE XREF: sub_95C6+17j
seg000:95C9		    mov	    di,	bx
seg000:95CB		    mov	    cx,	[si]
seg000:95CD		    push    si
seg000:95CE		    add	    si,	2
seg000:95D1		    repe cmpsb
seg000:95D3		    pop	    si
seg000:95D4		    jz	    short loc_95DF
seg000:95D6		    inc	    bx
seg000:95D7		    cmp	    bx,	8E4Dh
seg000:95DB		    jz	    short loc_95E1
seg000:95DD		    jmp	    short loc_95C9
seg000:95DF ; ───────────────────────────────────────────────────────────────────────────
seg000:95DF
seg000:95DF loc_95DF:				    ; CODE XREF: sub_95C6+Ej
seg000:95DF		    clc
seg000:95E0		    retn
seg000:95E1 ; ───────────────────────────────────────────────────────────────────────────
seg000:95E1
seg000:95E1 loc_95E1:				    ; CODE XREF: sub_95C6+15j
seg000:95E1		    stc
seg000:95E2		    retn
seg000:95E2 sub_95C6	    endp
seg000:95E2
seg000:95E3 ; ───────────────────────────────────────────────────────────────────────────
seg000:95E3		    add	    ax,	8700h
seg000:95E6		    add	    [bp+di+0], al
seg000:95E9		    or	    ax,	7
seg000:95EC		    push    bp
seg000:95ED		    not	    word ptr [di-0Ah]
seg000:95F0		    push    bp
seg000:95F1		    cmc
seg000:95F2		    push    bp
seg000:95F3		    add	    al,	0
seg000:95F5		    sub	    ax,	0FFEEh
seg000:95F8		    dec	    si
seg000:95F9		    add	    ax,	[bx+si]
seg000:95FB		    mov	    sp,	0FF57h
seg000:95FE		    inc	    byte_7BD5+22h
seg000:9602		    mov	    ax,	word_8E04
seg000:9605		    add	    ax,	10h
seg000:9608		    mov	    word_7BD1, ax
seg000:960B		    mov	    word_7BD3, 8936h
seg000:9611		    mov	    si,	8C2Bh
seg000:9614		    mov	    word ptr byte_8DD5+2, 8
seg000:961A
seg000:961A loc_961A:				    ; CODE XREF: seg000:964Aj
seg000:961A		    test    byte ptr [si], 0FFh
seg000:961D		    jz	    short loc_9643
seg000:961F		    dec	    byte ptr [si]
seg000:9621		    jz	    short loc_962D
seg000:9623		    cmp	    byte ptr [si], 5
seg000:9626		    jb	    short loc_962D
seg000:9628		    cmp	    byte ptr [si], 1Eh
seg000:962B		    jnz	    short loc_9643
seg000:962D
seg000:962D loc_962D:				    ; CODE XREF: seg000:9621j
seg000:962D					    ; seg000:9626j
seg000:962D		    mov	    dx,	[si+5]
seg000:9630		    push    si
seg000:9631		    call    sub_82B4
seg000:9634		    pop	    si
seg000:9635		    push    si
seg000:9636		    mov	    ax,	[si+1]
seg000:9639		    mov	    bx,	[si+3]
seg000:963C		    lea	    si,	[si+7]
seg000:963F		    call    sub_82F7
seg000:9642		    pop	    si
seg000:9643
seg000:9643 loc_9643:				    ; CODE XREF: seg000:961Dj
seg000:9643					    ; seg000:962Bj
seg000:9643		    add	    si,	0Ah
seg000:9646		    dec	    word ptr byte_8DD5+2
seg000:964A		    jnz	    short loc_961A
seg000:964C		    mov	    word_7BD1, 140h
seg000:9652		    mov	    word_7BD3, 8930h
seg000:9658		    dec	    byte_7BD5+22h
seg000:965C		    retn
seg000:965D ; ───────────────────────────────────────────────────────────────────────────
seg000:965D		    mov	    bx,	8B3Bh
seg000:9660		    jmp	    short loc_9665
seg000:9662 ; ───────────────────────────────────────────────────────────────────────────
seg000:9662		    mov	    bx,	8A4Dh
seg000:9665
seg000:9665 loc_9665:				    ; CODE XREF: seg000:9660j
seg000:9665		    mov	    word ptr byte_8DD5+2, 0Eh
seg000:966B
seg000:966B loc_966B:				    ; CODE XREF: seg000:96D4j
seg000:966B		    cmp	    byte ptr [bx], 0FFh
seg000:966E		    jz	    short loc_96CD
seg000:9670		    mov	    al,	byte_8DD4
seg000:9673		    and	    al,	[bx+0Ah]
seg000:9676		    jz	    short loc_96CD
seg000:9678		    xor	    dh,	dh
seg000:967A		    mov	    dl,	[bx+4]
seg000:967D		    mov	    di,	dx
seg000:967F		    shl	    di,	1
seg000:9681		    shl	    di,	1
seg000:9683		    shl	    di,	1
seg000:9685		    mov	    al,	[bx+5]
seg000:9688		    mul	    byte_8E01
seg000:968C		    shl	    ax,	1
seg000:968E		    shl	    ax,	1
seg000:9690		    shl	    ax,	1
seg000:9692		    shl	    ax,	1
seg000:9694		    shl	    ax,	1
seg000:9696		    add	    di,	ax
seg000:9698		    mov	    dl,	[bx+8]
seg000:969B		    mov	    si,	dx
seg000:969D		    shl	    si,	1
seg000:969F		    mov	    si,	[si+3A30h]
seg000:96A3		    mov	    dl,	[bx+7]
seg000:96A6		    shl	    dx,	1
seg000:96A8		    shl	    dx,	1
seg000:96AA		    shl	    dx,	1
seg000:96AC		    shl	    dx,	1
seg000:96AE		    shl	    dx,	1
seg000:96B0		    shl	    dx,	1
seg000:96B2		    mov	    ax,	dx
seg000:96B4		    shl	    dx,	1
seg000:96B6		    add	    si,	ax
seg000:96B8		    add	    si,	dx
seg000:96BA		    add	    si,	[bx+0Fh]
seg000:96BD		    push    bx
seg000:96BE		    cmp	    byte ptr [bx+8], 9
seg000:96C2		    mov	    bx,	12h
seg000:96C5		    jz	    short loc_96C9
seg000:96C7		    xor	    bx,	bx
seg000:96C9
seg000:96C9 loc_96C9:				    ; CODE XREF: seg000:96C5j
seg000:96C9		    call    loc_9C3A
seg000:96CC		    pop	    bx
seg000:96CD
seg000:96CD loc_96CD:				    ; CODE XREF: seg000:966Ej
seg000:96CD					    ; seg000:9676j
seg000:96CD		    add	    bx,	11h
seg000:96D0		    dec	    word ptr byte_8DD5+2
seg000:96D4		    jnz	    short loc_966B
seg000:96D6		    retn
seg000:96D7 ; ───────────────────────────────────────────────────────────────────────────
seg000:96D7		    call    sub_84CD
seg000:96DA		    mov	    ax,	word ptr byte_7C05
seg000:96DD		    cmp	    al,	53h ; 'S'
seg000:96DF		    jz	    short loc_96E5
seg000:96E1		    cmp	    al,	73h ; 's'
seg000:96E3		    jnz	    short loc_96EA
seg000:96E5
seg000:96E5 loc_96E5:				    ; CODE XREF: seg000:96DFj
seg000:96E5		    xor	    byte_8DB8, 1
seg000:96EA
seg000:96EA loc_96EA:				    ; CODE XREF: seg000:96E3j
seg000:96EA		    cmp	    al,	11h
seg000:96EC		    jnz	    short loc_96F1
seg000:96EE		    jmp	    loc_8EF3
seg000:96F1 ; ───────────────────────────────────────────────────────────────────────────
seg000:96F1
seg000:96F1 loc_96F1:				    ; CODE XREF: seg000:96ECj
seg000:96F1		    cmp	    byte_8DDD, 16h
seg000:96F6		    jbe	    short loc_973A
seg000:96F8		    sub	    ah,	3Bh ; ';'
seg000:96FB		    jns	    short loc_96FE
seg000:96FD		    retn
seg000:96FE ; ───────────────────────────────────────────────────────────────────────────
seg000:96FE
seg000:96FE loc_96FE:				    ; CODE XREF: seg000:96FBj
seg000:96FE		    cmp	    ah,	byte_8DDA
seg000:9702		    jb	    short loc_9705
seg000:9704		    retn
seg000:9705 ; ───────────────────────────────────────────────────────────────────────────
seg000:9705
seg000:9705 loc_9705:				    ; CODE XREF: seg000:9702j
seg000:9705		    mov	    byte_8979, 1
seg000:970A		    mov	    word_8959, 0
seg000:9710		    mov	    byte_89AC+2, 0
seg000:9715		    mov	    byte_8DD9, 0
seg000:971A		    mov	    byte_8DDD, 1
seg000:971F		    or	    ah,	ah
seg000:9721		    jnz	    short loc_9727
seg000:9723		    dec	    byte_8979
seg000:9727
seg000:9727 loc_9727:				    ; CODE XREF: seg000:9721j
seg000:9727		    cmp	    ah,	2
seg000:972A		    jbe	    short loc_9731
seg000:972C		    mov	    byte_89AC+2, 2
seg000:9731
seg000:9731 loc_9731:				    ; CODE XREF: seg000:972Aj
seg000:9731		    jb	    short loc_9737
seg000:9733		    inc	    byte_8DD9
seg000:9737
seg000:9737 loc_9737:				    ; CODE XREF: seg000:loc_9731j
seg000:9737		    jmp	    loc_8EF6
seg000:973A ; ───────────────────────────────────────────────────────────────────────────
seg000:973A
seg000:973A loc_973A:				    ; CODE XREF: seg000:96F6j
seg000:973A		    cmp	    al,	70h ; 'p'
seg000:973C		    jz	    short loc_9743
seg000:973E		    cmp	    al,	50h ; 'P'
seg000:9740		    jz	    short loc_9743
seg000:9742		    retn
seg000:9743 ; ───────────────────────────────────────────────────────────────────────────
seg000:9743
seg000:9743 loc_9743:				    ; CODE XREF: seg000:973Cj
seg000:9743					    ; seg000:9740j
seg000:9743		    mov	    dx,	703h
seg000:9746		    call    sub_82B4
seg000:9749		    mov	    ax,	word_8DC1
seg000:974C		    mov	    bx,	word_8DC3
seg000:9750		    mov	    si,	8C85h
seg000:9753		    call    sub_82F7
seg000:9756
seg000:9756 loc_9756:				    ; CODE XREF: seg000:975Ej
seg000:9756		    call    sub_84CD
seg000:9759		    cmp	    byte_7C05, 20h ; ' '
seg000:975E		    jnz	    short loc_9756
seg000:9760		    mov	    ax,	word_8DC1
seg000:9763		    mov	    bx,	word_8DC3
seg000:9767		    mov	    si,	8C99h
seg000:976A		    call    sub_82F7
seg000:976D		    retn
seg000:976D ; ───────────────────────────────────────────────────────────────────────────
seg000:976E		    db 0F6h, 6,	0D5h, 8Dh, 0FFh, 74h, 4, 0FEh, 0Eh, 0D5h, 8Dh
seg000:976E		    db 0D0h, 6,	0D4h, 8Dh, 0FFh, 6, 0CFh, 8Dh, 75h, 6, 81h
seg000:976E		    db 2Eh, 0CFh, 8Dh, 0, 1, 80h, 3Eh, 0DDh, 8Dh, 16h, 77h
seg000:976E		    db 3Fh, 0B0h, 0Fh, 81h, 3Eh, 0CFh, 8Dh, 45h, 1, 77h, 0Ch
seg000:976E		    db 0B0h, 7,	81h, 3Eh, 0CFh,	8Dh, 96h, 0, 72h, 2, 0B0h
seg000:976E		    db 3, 84h, 6, 0CFh,	8Dh, 75h, 3, 0E8h, 46h,	0FAh, 0B8h
seg000:976E		    db 45h, 1, 80h, 3Eh, 0DEh, 8Dh, 0, 77h, 3, 0B8h, 58h, 2
seg000:976E		    db 39h, 6, 0CFh, 8Dh, 75h, 0Dh, 0A1h, 0C1h,	8Dh, 8Bh, 1Eh
seg000:976E		    db 0C3h, 8Dh, 0BEh,	0DFh, 8Ch, 0E8h, 28h, 0EBh, 0C3h
seg000:97D0
seg000:97D0 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:97D0
seg000:97D0
seg000:97D0 sub_97D0	    proc near		    ; CODE XREF: sub_97F2p
seg000:97D0					    ; sub_9840+1p
seg000:97D0		    mov	    di,	bx
seg000:97D2		    and	    di,	0FFF8h
seg000:97D6		    shr	    di,	1
seg000:97D8		    mov	    cl,	al
seg000:97DA		    and	    cl,	3
seg000:97DD		    xor	    ch,	ch
seg000:97DF		    add	    di,	cx
seg000:97E1		    and	    al,	0FCh
seg000:97E3		    mov	    ah,	50h ; 'P'
seg000:97E5		    mul	    ah
seg000:97E7		    add	    di,	ax
seg000:97E9		    mov	    es,	word_8932
seg000:97ED		    assume es:nothing
seg000:97ED		    mov	    ds,	word_8934
seg000:97F1		    assume ds:nothing
seg000:97F1		    retn
seg000:97F1 sub_97D0	    endp
seg000:97F1
seg000:97F2
seg000:97F2 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:97F2
seg000:97F2
seg000:97F2 sub_97F2	    proc near		    ; CODE XREF: sub_989F+36p
seg000:97F2		    call    sub_97D0
seg000:97F5		    mov	    cx,	bx
seg000:97F7		    and	    cx,	7
seg000:97FB		    jz	    short loc_9809
seg000:97FD		    mov	    al,	0FFh
seg000:97FF		    shr	    al,	cl
seg000:9801		    and	    al,	0CCh
seg000:9803		    mov	    [di], al
seg000:9805		    stosb
seg000:9806		    add	    di,	3
seg000:9809
seg000:9809 loc_9809:				    ; CODE XREF: sub_97F2+9j
seg000:9809		    mov	    cx,	dx
seg000:980B		    add	    bx,	7
seg000:980E		    and	    bx,	0FFF8h
seg000:9812		    sub	    cx,	bx
seg000:9814		    inc	    cx
seg000:9815		    shr	    cx,	1
seg000:9817		    shr	    cx,	1
seg000:9819		    shr	    cx,	1
seg000:981B		    mov	    al,	0CCh ; '╠'
seg000:981D
seg000:981D loc_981D:				    ; CODE XREF: sub_97F2+31j
seg000:981D		    mov	    [di], al
seg000:981F		    stosb
seg000:9820		    add	    di,	3
seg000:9823		    loop    loc_981D
seg000:9825		    mov	    cx,	dx
seg000:9827		    and	    cx,	7
seg000:982B		    jz	    short loc_9839
seg000:982D		    inc	    cx
seg000:982E		    mov	    al,	0FFh
seg000:9830		    shr	    al,	cl
seg000:9832		    not	    al
seg000:9834		    and	    al,	0CCh
seg000:9836		    mov	    [di], al
seg000:9838		    stosb
seg000:9839
seg000:9839 loc_9839:				    ; CODE XREF: sub_97F2+39j
seg000:9839		    mov	    ax,	cs
seg000:983B		    mov	    ds,	ax
seg000:983D		    assume ds:seg000
seg000:983D		    mov	    es,	ax
seg000:983F		    assume es:seg000
seg000:983F		    retn
seg000:983F sub_97F2	    endp
seg000:983F
seg000:9840
seg000:9840 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9840
seg000:9840
seg000:9840 sub_9840	    proc near		    ; CODE XREF: sub_989F+4Cp
seg000:9840		    push    ax
seg000:9841		    call    sub_97D0
seg000:9844		    mov	    ax,	33CCh
seg000:9847		    mov	    ch,	0C0h ; '└'
seg000:9849		    mov	    cl,	bl
seg000:984B		    and	    cl,	7
seg000:984E		    ror	    ch,	cl
seg000:9850		    and	    al,	ch
seg000:9852		    and	    ah,	ch
seg000:9854		    pop	    bx
seg000:9855		    sub	    dl,	bl
seg000:9857		    xor	    dh,	dh
seg000:9859		    inc	    dx
seg000:985A		    mov	    cx,	dx
seg000:985C
seg000:985C loc_985C:				    ; CODE XREF: sub_9840+2Aj
seg000:985C					    ; sub_9840+32j
seg000:985C		    or	    [di], al
seg000:985E		    or	    es:[di], al
seg000:9861		    inc	    di
seg000:9862		    xchg    al,	ah
seg000:9864		    test    di,	3
seg000:9868		    jz	    short loc_986E
seg000:986A		    loop    loc_985C
seg000:986C		    jmp	    short loc_9874
seg000:986E ; ───────────────────────────────────────────────────────────────────────────
seg000:986E
seg000:986E loc_986E:				    ; CODE XREF: sub_9840+28j
seg000:986E		    add	    di,	13Ch
seg000:9872		    loop    loc_985C
seg000:9874
seg000:9874 loc_9874:				    ; CODE XREF: sub_9840+2Cj
seg000:9874		    mov	    ax,	cs
seg000:9876		    mov	    ds,	ax
seg000:9878		    mov	    es,	ax
seg000:987A		    retn
seg000:987A sub_9840	    endp
seg000:987A
seg000:987B
seg000:987B ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:987B
seg000:987B
seg000:987B sub_987B	    proc near		    ; CODE XREF: sub_989F+7Ap
seg000:987B					    ; sub_989F+ADp
seg000:987B		    test    bx,	3
seg000:987F		    jz	    short loc_9888
seg000:9881		    add	    bx,	4
seg000:9884		    and	    bx,	0FFFCh
seg000:9888
seg000:9888 loc_9888:				    ; CODE XREF: sub_987B+4j
seg000:9888		    mov	    cx,	bx
seg000:988A		    add	    bx,	2
seg000:988D		    push    ax
seg000:988E		    and	    al,	0FEh
seg000:9890		    mov	    dx,	ax
seg000:9892		    shl	    dx,	1
seg000:9894		    mov	    al,	50h ; 'P'
seg000:9896		    mul	    cl
seg000:9898		    add	    dx,	ax
seg000:989A		    add	    dx,	18h
seg000:989D		    pop	    ax
seg000:989E		    retn
seg000:989E sub_987B	    endp
seg000:989E
seg000:989F
seg000:989F ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:989F
seg000:989F
seg000:989F sub_989F	    proc near		    ; CODE XREF: start+27p
seg000:989F		    mov	    si,	word_8DFC
seg000:98A3		    mov	    ax,	word_8E04
seg000:98A6		    add	    ax,	10h
seg000:98A9		    mov	    word_7BD1, ax
seg000:98AC		    mov	    word_7BD3, 8936h
seg000:98B2		    call    sub_82F7
seg000:98B5		    mov	    word_7BD1, 140h
seg000:98BB		    mov	    word_7BD3, 8930h
seg000:98C1		    push    si
seg000:98C2		    call    sub_8495
seg000:98C5		    mov	    si,	word_8DC5
seg000:98C9
seg000:98C9 loc_98C9:				    ; CODE XREF: sub_989F+39j
seg000:98C9		    cmp	    byte ptr [si], 0FFh
seg000:98CC		    jz	    short loc_98DA
seg000:98CE		    lodsw
seg000:98CF		    mov	    bx,	ax
seg000:98D1		    lodsw
seg000:98D2		    mov	    dx,	ax
seg000:98D4		    lodsb
seg000:98D5		    call    sub_97F2
seg000:98D8		    jmp	    short loc_98C9
seg000:98DA ; ───────────────────────────────────────────────────────────────────────────
seg000:98DA
seg000:98DA loc_98DA:				    ; CODE XREF: sub_989F+2Dj
seg000:98DA		    inc	    si
seg000:98DB
seg000:98DB loc_98DB:				    ; CODE XREF: sub_989F+4Fj
seg000:98DB		    cmp	    byte ptr [si], 0FFh
seg000:98DE		    jz	    short loc_98F0
seg000:98E0		    lodsb
seg000:98E1		    mov	    cl,	al
seg000:98E3		    lodsb
seg000:98E4		    mov	    dl,	al
seg000:98E6		    lodsw
seg000:98E7		    mov	    bx,	ax
seg000:98E9		    mov	    al,	cl
seg000:98EB		    call    sub_9840
seg000:98EE		    jmp	    short loc_98DB
seg000:98F0 ; ───────────────────────────────────────────────────────────────────────────
seg000:98F0
seg000:98F0 loc_98F0:				    ; CODE XREF: sub_989F+3Fj
seg000:98F0		    mov	    dx,	306h
seg000:98F3		    call    sub_82B4
seg000:98F6		    mov	    ax,	word_8DB9
seg000:98F9		    mov	    bl,	ah
seg000:98FB		    or	    ah,	al
seg000:98FD		    jz	    short loc_9923
seg000:98FF		    xor	    ah,	ah
seg000:9901		    xor	    bh,	bh
seg000:9903		    mov	    si,	8C7Bh
seg000:9906		    call    sub_82F7
seg000:9909		    mov	    si,	8CB5h
seg000:990C		    cmp	    byte_8974, 0FFh
seg000:9911		    jz	    short loc_9916
seg000:9913		    mov	    si,	8CC4h
seg000:9916
seg000:9916 loc_9916:				    ; CODE XREF: sub_989F+72j
seg000:9916		    call    sub_82F7
seg000:9919		    call    sub_987B
seg000:991C		    mov	    word_897D, dx
seg000:9920		    call    sub_82F7
seg000:9923
seg000:9923 loc_9923:				    ; CODE XREF: sub_989F+5Ej
seg000:9923		    mov	    dx,	406h
seg000:9926		    call    sub_82B4
seg000:9929		    mov	    ax,	word_8DBB
seg000:992C		    mov	    bl,	ah
seg000:992E		    or	    ah,	al
seg000:9930		    jz	    short loc_9956
seg000:9932		    xor	    ah,	ah
seg000:9934		    xor	    bh,	bh
seg000:9936		    mov	    si,	8C7Bh
seg000:9939		    call    sub_82F7
seg000:993C		    mov	    si,	8CB5h
seg000:993F		    cmp	    byte_89A9, 0FFh
seg000:9944		    jz	    short loc_9949
seg000:9946		    mov	    si,	8CC4h
seg000:9949
seg000:9949 loc_9949:				    ; CODE XREF: sub_989F+A5j
seg000:9949		    call    sub_82F7
seg000:994C		    call    sub_987B
seg000:994F		    mov	    word_89B2, dx
seg000:9953		    call    sub_82F7
seg000:9956
seg000:9956 loc_9956:				    ; CODE XREF: sub_989F+91j
seg000:9956		    dec	    byte_8957
seg000:995A		    dec	    word_8951
seg000:995E		    dec	    byte_898C
seg000:9962		    dec	    word_8986
seg000:9966		    inc	    byte_8976
seg000:996A		    test    byte_8DD9, 0FFh
seg000:996F		    jz	    short loc_9975
seg000:9971		    inc	    byte_89AB
seg000:9975
seg000:9975 loc_9975:				    ; CODE XREF: sub_989F+D0j
seg000:9975		    call    sub_AD0A
seg000:9978		    mov	    dx,	603h
seg000:997B		    call    sub_82B4
seg000:997E		    mov	    ax,	word_8DBD
seg000:9981		    mov	    bl,	ah
seg000:9983		    xor	    ah,	ah
seg000:9985		    xor	    bh,	bh
seg000:9987		    pop	    si
seg000:9988		    call    sub_82F7
seg000:998B		    cmp	    byte_8DDD, 16h
seg000:9990		    ja	    short loc_99C4
seg000:9992		    add	    ax,	2
seg000:9995		    push    bx
seg000:9996		    mov	    bl,	byte_8DDD
seg000:999A		    xor	    bh,	bh
seg000:999C		    mov	    dl,	[bx+6079h]
seg000:99A0		    shr	    dl,	1
seg000:99A2		    shr	    dl,	1
seg000:99A4		    inc	    dl
seg000:99A6		    or	    dl,	30h
seg000:99A9		    mov	    byte_8CAE, dl
seg000:99AD		    mov	    dl,	[bx+6079h]
seg000:99B1		    and	    dl,	3
seg000:99B4		    inc	    dl
seg000:99B6		    or	    dl,	40h
seg000:99B9		    mov	    byte_8CAF, dl
seg000:99BD		    pop	    bx
seg000:99BE		    mov	    si,	8CADh
seg000:99C1		    call    sub_82F7
seg000:99C4
seg000:99C4 loc_99C4:				    ; CODE XREF: sub_989F+F1j
seg000:99C4		    call    sub_99F6
seg000:99C7		    cmp	    byte_8DDD, 16h
seg000:99CC		    ja	    short loc_99CF
seg000:99CE		    retn
seg000:99CF ; ───────────────────────────────────────────────────────────────────────────
seg000:99CF
seg000:99CF loc_99CF:				    ; CODE XREF: sub_989F+12Dj
seg000:99CF		    mov	    ax,	66h ; 'f'
seg000:99D2		    mov	    bx,	56h ; 'V'
seg000:99D5		    mov	    cl,	byte_8DDA
seg000:99D9		    xor	    ch,	ch
seg000:99DB		    cmp	    cl,	4
seg000:99DE		    jz	    short loc_99EB
seg000:99E0		    mov	    bx,	5Ch ; '\'
seg000:99E3		    cmp	    cl,	3
seg000:99E6		    jz	    short loc_99EB
seg000:99E8		    mov	    bx,	68h ; 'h'
seg000:99EB
seg000:99EB loc_99EB:				    ; CODE XREF: sub_989F+13Fj
seg000:99EB					    ; sub_989F+147j
seg000:99EB		    mov	    si,	7C07h
seg000:99EE
seg000:99EE loc_99EE:				    ; CODE XREF: sub_989F+154j
seg000:99EE		    push    cx
seg000:99EF		    call    sub_82F7
seg000:99F2		    pop	    cx
seg000:99F3		    loop    loc_99EE
seg000:99F5		    retn
seg000:99F5 sub_989F	    endp
seg000:99F5
seg000:99F6
seg000:99F6 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:99F6
seg000:99F6
seg000:99F6 sub_99F6	    proc near		    ; CODE XREF: sub_989F:loc_99C4p
seg000:99F6					    ; sub_9A0B+83p
seg000:99F6		    mov	    ax,	word_8DBF
seg000:99F9		    mov	    bl,	ah
seg000:99FB		    xor	    ah,	ah
seg000:99FD		    xor	    bh,	bh
seg000:99FF		    mov	    si,	89B8h
seg000:9A02		    call    sub_82F7
seg000:9A05		    add	    bx,	4
seg000:9A08		    jmp	    sub_82F7
seg000:9A08 sub_99F6	    endp
seg000:9A08
seg000:9A0B
seg000:9A0B ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9A0B
seg000:9A0B
seg000:9A0B sub_9A0B	    proc near		    ; CODE XREF: seg000:8FE9p
seg000:9A0B					    ; seg000:8FEFp
seg000:9A0B
seg000:9A0B ; FUNCTION CHUNK AT	seg000:079F SIZE 00000057 BYTES
seg000:9A0B ; FUNCTION CHUNK AT	seg000:07FE SIZE 00000090 BYTES
seg000:9A0B
seg000:9A0B		    test    byte ptr [si], 0FFh
seg000:9A0E		    jns	    short loc_9A11
seg000:9A10		    retn
seg000:9A11 ; ───────────────────────────────────────────────────────────────────────────
seg000:9A11
seg000:9A11 loc_9A11:				    ; CODE XREF: sub_9A0B+3j
seg000:9A11		    mov	    ax,	[si+3]
seg000:9A14		    mov	    bx,	8A43h
seg000:9A17		    mov	    dx,	word_8DBF
seg000:9A1B		    add	    dx,	1000h
seg000:9A1F		    mov	    di,	89D3h
seg000:9A22		    mov	    cx,	5
seg000:9A25
seg000:9A25 loc_9A25:				    ; CODE XREF: sub_9A0B+27j
seg000:9A25		    cmp	    ax,	[bx]
seg000:9A27		    ja	    short loc_9A35
seg000:9A29		    add	    bx,	2
seg000:9A2C		    add	    di,	17h
seg000:9A2F		    add	    dh,	0Ch
seg000:9A32		    loop    loc_9A25
seg000:9A34		    retn
seg000:9A35 ; ───────────────────────────────────────────────────────────────────────────
seg000:9A35
seg000:9A35 loc_9A35:				    ; CODE XREF: sub_9A0B+1Cj
seg000:9A35		    mov	    word ptr byte_8DC7,	dx
seg000:9A39		    push    si
seg000:9A3A		    push    di
seg000:9A3B		    dec	    cx
seg000:9A3C		    mov	    bp,	8A4Bh
seg000:9A3F		    jz	    short loc_9A63
seg000:9A41		    mov	    di,	8A2Fh
seg000:9A44		    mov	    si,	8A18h
seg000:9A47
seg000:9A47 loc_9A47:				    ; CODE XREF: sub_9A0B+56j
seg000:9A47		    push    cx
seg000:9A48		    push    si
seg000:9A49		    push    di
seg000:9A4A		    mov	    cx,	13h
seg000:9A4D		    rep	movsb
seg000:9A4F		    pop	    di
seg000:9A50		    pop	    si
seg000:9A51		    pop	    cx
seg000:9A52		    sub	    di,	17h
seg000:9A55		    sub	    si,	17h
seg000:9A58		    mov	    dx,	[bp-2]
seg000:9A5B		    mov	    [bp+0], dx
seg000:9A5E		    sub	    bp,	2
seg000:9A61		    loop    loc_9A47
seg000:9A63
seg000:9A63 loc_9A63:				    ; CODE XREF: sub_9A0B+34j
seg000:9A63		    mov	    [bp+0], ax
seg000:9A66		    pop	    di
seg000:9A67		    pop	    si
seg000:9A68		    push    di
seg000:9A69		    mov	    cx,	13h
seg000:9A6C		    mov	    al,	20h ; ' '
seg000:9A6E		    rep	stosb
seg000:9A70		    pop	    di
seg000:9A71		    dec	    di
seg000:9A72		    mov	    cx,	5
seg000:9A75		    push    si
seg000:9A76		    lea	    si,	[si+4]
seg000:9A79
seg000:9A79 loc_9A79:				    ; CODE XREF: sub_9A0B+73j
seg000:9A79		    inc	    di
seg000:9A7A		    inc	    si
seg000:9A7B		    cmp	    byte ptr [si], 30h ; '0'
seg000:9A7E		    loope   loc_9A79
seg000:9A80		    inc	    cx
seg000:9A81		    rep	movsb
seg000:9A83		    inc	    di
seg000:9A84		    mov	    word ptr byte_8DC7+2, di
seg000:9A88		    mov	    word ptr byte_8DC7+4, 0
seg000:9A8E		    call    sub_99F6
seg000:9A91		    pop	    si
seg000:9A92		    mov	    dx,	604h
seg000:9A95		    cmp	    si,	894Eh
seg000:9A99		    mov	    si,	8CF6h
seg000:9A9C		    jz	    short loc_9AA1
seg000:9A9E		    mov	    si,	8D0Ah
seg000:9AA1
seg000:9AA1 loc_9AA1:				    ; CODE XREF: sub_9A0B+91j
seg000:9AA1					    ; sub_9A0B+133j
seg000:9AA1		    sub	    dx,	101h
seg000:9AA5		    and	    dx,	707h
seg000:9AA9		    push    dx
seg000:9AAA		    push    si
seg000:9AAB		    call    sub_82B4
seg000:9AAE		    mov	    ax,	word_8DC1
seg000:9AB1		    mov	    bx,	word_8DC3
seg000:9AB5		    call    sub_82F7
seg000:9AB8		    call    sub_84CD
seg000:9ABB		    mov	    ax,	word ptr byte_7C05
seg000:9ABE		    or	    ah,	ah
seg000:9AC0		    jz	    short loc_9AEA
seg000:9AC2		    cmp	    al,	20h ; ' '
seg000:9AC4		    jb	    short loc_9AEA
seg000:9AC6		    cmp	    al,	7Ah ; 'z'
seg000:9AC8		    ja	    short loc_9AEA
seg000:9ACA		    cmp	    al,	61h ; 'a'
seg000:9ACC		    jb	    short loc_9AD0
seg000:9ACE		    and	    al,	0DFh
seg000:9AD0
seg000:9AD0 loc_9AD0:				    ; CODE XREF: sub_9A0B+C1j
seg000:9AD0		    cmp	    al,	5Ah ; 'Z'
seg000:9AD2		    ja	    short loc_9AEA
seg000:9AD4		    mov	    bx,	word ptr byte_8DC7+4
seg000:9AD8		    mov	    di,	word ptr byte_8DC7+2
seg000:9ADC		    mov	    [bx+di], al
seg000:9ADE		    inc	    bx
seg000:9ADF		    cmp	    bx,	0Dh
seg000:9AE2		    jz	    short loc_9B1D
seg000:9AE4		    mov	    word ptr byte_8DC7+4, bx
seg000:9AE8		    jmp	    short loc_9B1D
seg000:9AEA ; ───────────────────────────────────────────────────────────────────────────
seg000:9AEA
seg000:9AEA loc_9AEA:				    ; CODE XREF: sub_9A0B+B5j
seg000:9AEA					    ; sub_9A0B+B9j ...
seg000:9AEA		    cmp	    al,	8
seg000:9AEC		    jnz	    short loc_9B09
seg000:9AEE
seg000:9AEE loc_9AEE:				    ; CODE XREF: sub_9A0B+10Bj
seg000:9AEE					    ; sub_9A0B+110j
seg000:9AEE		    dec	    word ptr byte_8DC7+4
seg000:9AF2		    jns	    short loc_9AF8
seg000:9AF4		    inc	    word ptr byte_8DC7+4
seg000:9AF8
seg000:9AF8 loc_9AF8:				    ; CODE XREF: sub_9A0B+E7j
seg000:9AF8		    mov	    bx,	word ptr byte_8DC7+4
seg000:9AFC		    mov	    di,	word ptr byte_8DC7+2
seg000:9B00		    mov	    byte ptr [bx+di], 20h ; ' '
seg000:9B03		    mov	    byte ptr [di+0Ch], 20h ; ' '
seg000:9B07		    jmp	    short loc_9B1D
seg000:9B09 ; ───────────────────────────────────────────────────────────────────────────
seg000:9B09
seg000:9B09 loc_9B09:				    ; CODE XREF: sub_9A0B+E1j
seg000:9B09		    cmp	    al,	0Dh
seg000:9B0B		    jnz	    short loc_9B13
seg000:9B0D		    add	    sp,	4
seg000:9B10		    jmp	    short loc_9B41
seg000:9B10 ; ───────────────────────────────────────────────────────────────────────────
seg000:9B12		    db 90h
seg000:9B13 ; ───────────────────────────────────────────────────────────────────────────
seg000:9B13
seg000:9B13 loc_9B13:				    ; CODE XREF: sub_9A0B+100j
seg000:9B13		    cmp	    ax,	5300h
seg000:9B16		    jz	    short loc_9AEE
seg000:9B18		    cmp	    ax,	4B00h
seg000:9B1B		    jz	    short loc_9AEE
seg000:9B1D
seg000:9B1D loc_9B1D:				    ; CODE XREF: sub_9A0B+D7j
seg000:9B1D					    ; sub_9A0B+DDj ...
seg000:9B1D		    mov	    ax,	word ptr byte_8DC7
seg000:9B20		    mov	    bl,	ah
seg000:9B22		    xor	    ah,	ah
seg000:9B24		    xor	    bh,	bh
seg000:9B26		    mov	    si,	word ptr byte_8DC7+2
seg000:9B2A		    sub	    si,	6
seg000:9B2D		    push    word ptr [si+13h]
seg000:9B30		    mov	    byte ptr [si+13h], 0
seg000:9B34		    push    si
seg000:9B35		    call    sub_82F7
seg000:9B38		    pop	    si
seg000:9B39		    pop	    word ptr [si+13h]
seg000:9B3C		    pop	    si
seg000:9B3D		    pop	    dx
seg000:9B3E		    jmp	    loc_9AA1
seg000:9B41 ; ───────────────────────────────────────────────────────────────────────────
seg000:9B41
seg000:9B41 loc_9B41:				    ; CODE XREF: sub_9A0B+105j
seg000:9B41		    xor	    ax,	ax
seg000:9B43		    mov	    cx,	1
seg000:9B46		    mov	    dx,	7
seg000:9B49		    mov	    bx,	89D0h
seg000:9B4C		    jmp	    loc_79F
seg000:9B4C sub_9A0B	    endp
seg000:9B4C
seg000:9B4F
seg000:9B4F ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9B4F
seg000:9B4F
seg000:9B4F sub_9B4F	    proc near		    ; CODE XREF: sub_A721+9Ap
seg000:9B4F		    mov	    al,	byte_8DDB
seg000:9B52		    mov	    ah,	14h
seg000:9B54		    mul	    ah
seg000:9B56		    mov	    si,	ax
seg000:9B58		    add	    si,	612Ah
seg000:9B5C		    lodsb
seg000:9B5D		    xor	    ah,	ah
seg000:9B5F		    mov	    word_8DB2, ax
seg000:9B62		    lodsb
seg000:9B63		    mov	    word_8DB0, ax
seg000:9B66		    lodsw
seg000:9B67		    mov	    word_8DAC, ax
seg000:9B6A		    lodsw
seg000:9B6B		    mov	    word_8DAE, ax
seg000:9B6E		    lodsw
seg000:9B6F		    mov	    word_8DB9, ax
seg000:9B72		    add	    al,	16h
seg000:9B74		    mov	    byte_894F, al
seg000:9B77		    mov	    byte_8950, ah
seg000:9B7B		    lodsw
seg000:9B7C		    mov	    word_8DBB, ax
seg000:9B7F		    add	    al,	16h
seg000:9B81		    mov	    byte_8984, al
seg000:9B84		    mov	    byte_8985, ah
seg000:9B88		    lodsw
seg000:9B89		    mov	    word_8DBD, ax
seg000:9B8C		    lodsw
seg000:9B8D		    mov	    word_8DBF, ax
seg000:9B90		    lodsw
seg000:9B91		    mov	    word_898E, ax
seg000:9B94		    lodsw
seg000:9B95		    mov	    bl,	ah
seg000:9B97		    xor	    bh,	bh
seg000:9B99		    xor	    ah,	ah
seg000:9B9B		    mov	    word_8DC1, ax
seg000:9B9E		    mov	    word_8DC3, bx
seg000:9BA2		    lodsw
seg000:9BA3		    mov	    word_8DC5, ax
seg000:9BA6		    mov	    ax,	word_8DB2
seg000:9BA9		    shl	    ax,	1
seg000:9BAB		    mov	    dx,	ax
seg000:9BAD		    sub	    ax,	140h
seg000:9BB0		    neg	    ax
seg000:9BB2		    mov	    word_8DB4, ax
seg000:9BB5		    xor	    ah,	ah
seg000:9BB7		    mov	    al,	byte_8E01
seg000:9BBA		    shl	    ax,	1
seg000:9BBC		    shl	    ax,	1
seg000:9BBE		    shl	    ax,	1
seg000:9BC0		    shl	    ax,	1
seg000:9BC2		    sub	    ax,	dx
seg000:9BC4		    mov	    word_8DB6, ax
seg000:9BC7		    xor	    ah,	ah
seg000:9BC9		    mov	    al,	byte_8E01
seg000:9BCC		    shl	    ax,	1
seg000:9BCE		    mov	    bx,	word_8DB2
seg000:9BD2		    shr	    bx,	1
seg000:9BD4		    shr	    bx,	1
seg000:9BD6		    sub	    ax,	bx
seg000:9BD8		    mov	    byte_8DAA, al
seg000:9BDB		    mov	    al,	byte_8E00
seg000:9BDE		    shl	    ax,	1
seg000:9BE0		    mov	    bx,	word_8DB0
seg000:9BE4		    shr	    bx,	1
seg000:9BE6		    sub	    ax,	bx
seg000:9BE8		    mov	    byte_8DAB, al
seg000:9BEB		    retn
seg000:9BEB sub_9B4F	    endp
seg000:9BEB
seg000:9BEC
seg000:9BEC ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9BEC
seg000:9BEC
seg000:9BEC sub_9BEC	    proc near		    ; CODE XREF: start+15p
seg000:9BEC		    mov	    bx,	89D0h
seg000:9BEF		    xor	    ax,	ax
seg000:9BF1		    mov	    cx,	1
seg000:9BF4		    mov	    dx,	7
seg000:9BF7		    jmp	    sub_6B6
seg000:9BF7 sub_9BEC	    endp
seg000:9BF7
seg000:9BFA
seg000:9BFA ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9BFA
seg000:9BFA
seg000:9BFA sub_9BFA	    proc near		    ; CODE XREF: start+2Dp
seg000:9BFA		    mov	    si,	894Eh
seg000:9BFD		    xor	    bx,	bx
seg000:9BFF		    test    byte_894E, 0FFh
seg000:9C04		    js	    short loc_9C09
seg000:9C06		    call    sub_9C17
seg000:9C09
seg000:9C09 loc_9C09:				    ; CODE XREF: sub_9BFA+Aj
seg000:9C09		    mov	    si,	8983h
seg000:9C0C		    test    byte_8983, 0FFh
seg000:9C11		    jns	    short loc_9C14
seg000:9C13		    retn
seg000:9C14 ; ───────────────────────────────────────────────────────────────────────────
seg000:9C14
seg000:9C14 loc_9C14:				    ; CODE XREF: sub_9BFA+17j
seg000:9C14		    mov	    bx,	6
seg000:9C14 sub_9BFA	    endp
seg000:9C14
seg000:9C17
seg000:9C17 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9C17
seg000:9C17
seg000:9C17 sub_9C17	    proc near		    ; CODE XREF: sub_9BFA+Cp
seg000:9C17		    cmp	    byte ptr [si], 2
seg000:9C1A		    jb	    short loc_9C1F
seg000:9C1C		    mov	    bx,	0Ch
seg000:9C1F
seg000:9C1F loc_9C1F:				    ; CODE XREF: sub_9C17+3j
seg000:9C1F		    cmp	    byte ptr [si], 1
seg000:9C22		    jnz	    short loc_9C26
seg000:9C24		    inc	    byte ptr [si]
seg000:9C26
seg000:9C26 loc_9C26:				    ; CODE XREF: sub_9C17+Bj
seg000:9C26		    mov	    di,	[si+11h]
seg000:9C29		    mov	    ax,	[si+0Fh]
seg000:9C2C		    mov	    [si+11h], ax
seg000:9C2F		    mov	    dx,	[si+15h]
seg000:9C32		    mov	    ax,	[si+13h]
seg000:9C35		    mov	    [si+15h], ax
seg000:9C38		    mov	    si,	dx
seg000:9C3A
seg000:9C3A loc_9C3A:				    ; CODE XREF: seg000:loc_96C9p
seg000:9C3A					    ; sub_A3B2+36p
seg000:9C3A		    mov	    dx,	word_8E04
seg000:9C3E		    mov	    cx,	2
seg000:9C41		    add	    dx,	cx
seg000:9C43		    mov	    es,	word ptr [bx-76CAh]
seg000:9C47		    assume es:nothing
seg000:9C47		    mov	    bp,	di
seg000:9C49		    lodsw
seg000:9C4A		    xor	    es:[di], ax
seg000:9C4D		    add	    di,	cx
seg000:9C4F		    lodsw
seg000:9C50		    xor	    es:[di], ax
seg000:9C53		    add	    di,	cx
seg000:9C55		    lodsw
seg000:9C56		    xor	    es:[di], ax
seg000:9C59		    add	    di,	cx
seg000:9C5B		    lodsw
seg000:9C5C		    xor	    es:[di], ax
seg000:9C5F		    add	    di,	cx
seg000:9C61		    lodsw
seg000:9C62		    xor	    es:[di], ax
seg000:9C65		    add	    di,	cx
seg000:9C67		    lodsw
seg000:9C68		    xor	    es:[di], ax
seg000:9C6B		    add	    di,	cx
seg000:9C6D		    lodsw
seg000:9C6E		    xor	    es:[di], ax
seg000:9C71		    add	    di,	cx
seg000:9C73		    lodsw
seg000:9C74		    xor	    es:[di], ax
seg000:9C77		    add	    di,	dx
seg000:9C79		    lodsw
seg000:9C7A		    xor	    es:[di], ax
seg000:9C7D		    add	    di,	cx
seg000:9C7F		    lodsw
seg000:9C80		    xor	    es:[di], ax
seg000:9C83		    add	    di,	cx
seg000:9C85		    lodsw
seg000:9C86		    xor	    es:[di], ax
seg000:9C89		    add	    di,	cx
seg000:9C8B		    lodsw
seg000:9C8C		    xor	    es:[di], ax
seg000:9C8F		    add	    di,	cx
seg000:9C91		    lodsw
seg000:9C92		    xor	    es:[di], ax
seg000:9C95		    add	    di,	cx
seg000:9C97		    lodsw
seg000:9C98		    xor	    es:[di], ax
seg000:9C9B		    add	    di,	cx
seg000:9C9D		    lodsw
seg000:9C9E		    xor	    es:[di], ax
seg000:9CA1		    add	    di,	cx
seg000:9CA3		    lodsw
seg000:9CA4		    xor	    es:[di], ax
seg000:9CA7		    add	    di,	dx
seg000:9CA9		    lodsw
seg000:9CAA		    xor	    es:[di], ax
seg000:9CAD		    add	    di,	cx
seg000:9CAF		    lodsw
seg000:9CB0		    xor	    es:[di], ax
seg000:9CB3		    add	    di,	cx
seg000:9CB5		    lodsw
seg000:9CB6		    xor	    es:[di], ax
seg000:9CB9		    add	    di,	cx
seg000:9CBB		    lodsw
seg000:9CBC		    xor	    es:[di], ax
seg000:9CBF		    add	    di,	cx
seg000:9CC1		    lodsw
seg000:9CC2		    xor	    es:[di], ax
seg000:9CC5		    add	    di,	cx
seg000:9CC7		    lodsw
seg000:9CC8		    xor	    es:[di], ax
seg000:9CCB		    add	    di,	cx
seg000:9CCD		    lodsw
seg000:9CCE		    xor	    es:[di], ax
seg000:9CD1		    add	    di,	cx
seg000:9CD3		    lodsw
seg000:9CD4		    xor	    es:[di], ax
seg000:9CD7		    add	    di,	dx
seg000:9CD9		    lodsw
seg000:9CDA		    xor	    es:[di], ax
seg000:9CDD		    add	    di,	cx
seg000:9CDF		    lodsw
seg000:9CE0		    xor	    es:[di], ax
seg000:9CE3		    add	    di,	cx
seg000:9CE5		    lodsw
seg000:9CE6		    xor	    es:[di], ax
seg000:9CE9		    add	    di,	cx
seg000:9CEB		    lodsw
seg000:9CEC		    xor	    es:[di], ax
seg000:9CEF		    add	    di,	cx
seg000:9CF1		    lodsw
seg000:9CF2		    xor	    es:[di], ax
seg000:9CF5		    add	    di,	cx
seg000:9CF7		    lodsw
seg000:9CF8		    xor	    es:[di], ax
seg000:9CFB		    add	    di,	cx
seg000:9CFD		    lodsw
seg000:9CFE		    xor	    es:[di], ax
seg000:9D01		    add	    di,	cx
seg000:9D03		    lodsw
seg000:9D04		    xor	    es:[di], ax
seg000:9D07		    mov	    di,	bp
seg000:9D09		    mov	    es,	word ptr [bx-76C8h]
seg000:9D0D		    lodsw
seg000:9D0E		    xor	    es:[di], ax
seg000:9D11		    add	    di,	cx
seg000:9D13		    lodsw
seg000:9D14		    xor	    es:[di], ax
seg000:9D17		    add	    di,	cx
seg000:9D19		    lodsw
seg000:9D1A		    xor	    es:[di], ax
seg000:9D1D		    add	    di,	cx
seg000:9D1F		    lodsw
seg000:9D20		    xor	    es:[di], ax
seg000:9D23		    add	    di,	cx
seg000:9D25		    lodsw
seg000:9D26		    xor	    es:[di], ax
seg000:9D29		    add	    di,	cx
seg000:9D2B		    lodsw
seg000:9D2C		    xor	    es:[di], ax
seg000:9D2F		    add	    di,	cx
seg000:9D31		    lodsw
seg000:9D32		    xor	    es:[di], ax
seg000:9D35		    add	    di,	cx
seg000:9D37		    lodsw
seg000:9D38		    xor	    es:[di], ax
seg000:9D3B		    add	    di,	dx
seg000:9D3D		    lodsw
seg000:9D3E		    xor	    es:[di], ax
seg000:9D41		    add	    di,	cx
seg000:9D43		    lodsw
seg000:9D44		    xor	    es:[di], ax
seg000:9D47		    add	    di,	cx
seg000:9D49		    lodsw
seg000:9D4A		    xor	    es:[di], ax
seg000:9D4D		    add	    di,	cx
seg000:9D4F		    lodsw
seg000:9D50		    xor	    es:[di], ax
seg000:9D53		    add	    di,	cx
seg000:9D55		    lodsw
seg000:9D56		    xor	    es:[di], ax
seg000:9D59		    add	    di,	cx
seg000:9D5B		    lodsw
seg000:9D5C		    xor	    es:[di], ax
seg000:9D5F		    add	    di,	cx
seg000:9D61		    lodsw
seg000:9D62		    xor	    es:[di], ax
seg000:9D65		    add	    di,	cx
seg000:9D67		    lodsw
seg000:9D68		    xor	    es:[di], ax
seg000:9D6B		    add	    di,	dx
seg000:9D6D		    lodsw
seg000:9D6E		    xor	    es:[di], ax
seg000:9D71		    add	    di,	cx
seg000:9D73		    lodsw
seg000:9D74		    xor	    es:[di], ax
seg000:9D77		    add	    di,	cx
seg000:9D79		    lodsw
seg000:9D7A		    xor	    es:[di], ax
seg000:9D7D		    add	    di,	cx
seg000:9D7F		    lodsw
seg000:9D80		    xor	    es:[di], ax
seg000:9D83		    add	    di,	cx
seg000:9D85		    lodsw
seg000:9D86		    xor	    es:[di], ax
seg000:9D89		    add	    di,	cx
seg000:9D8B		    lodsw
seg000:9D8C		    xor	    es:[di], ax
seg000:9D8F		    add	    di,	cx
seg000:9D91		    lodsw
seg000:9D92		    xor	    es:[di], ax
seg000:9D95		    add	    di,	cx
seg000:9D97		    lodsw
seg000:9D98		    xor	    es:[di], ax
seg000:9D9B		    add	    di,	dx
seg000:9D9D		    lodsw
seg000:9D9E		    xor	    es:[di], ax
seg000:9DA1		    add	    di,	cx
seg000:9DA3		    lodsw
seg000:9DA4		    xor	    es:[di], ax
seg000:9DA7		    add	    di,	cx
seg000:9DA9		    lodsw
seg000:9DAA		    xor	    es:[di], ax
seg000:9DAD		    add	    di,	cx
seg000:9DAF		    lodsw
seg000:9DB0		    xor	    es:[di], ax
seg000:9DB3		    add	    di,	cx
seg000:9DB5		    lodsw
seg000:9DB6		    xor	    es:[di], ax
seg000:9DB9		    add	    di,	cx
seg000:9DBB		    lodsw
seg000:9DBC		    xor	    es:[di], ax
seg000:9DBF		    add	    di,	cx
seg000:9DC1		    lodsw
seg000:9DC2		    xor	    es:[di], ax
seg000:9DC5		    add	    di,	cx
seg000:9DC7		    lodsw
seg000:9DC8		    xor	    es:[di], ax
seg000:9DCB		    mov	    di,	bp
seg000:9DCD		    mov	    es,	word ptr [bx-76C6h]
seg000:9DD1		    lodsw
seg000:9DD2		    xor	    es:[di], ax
seg000:9DD5		    add	    di,	cx
seg000:9DD7		    lodsw
seg000:9DD8		    xor	    es:[di], ax
seg000:9DDB		    add	    di,	cx
seg000:9DDD		    lodsw
seg000:9DDE		    xor	    es:[di], ax
seg000:9DE1		    add	    di,	cx
seg000:9DE3		    lodsw
seg000:9DE4		    xor	    es:[di], ax
seg000:9DE7		    add	    di,	cx
seg000:9DE9		    lodsw
seg000:9DEA		    xor	    es:[di], ax
seg000:9DED		    add	    di,	cx
seg000:9DEF		    lodsw
seg000:9DF0		    xor	    es:[di], ax
seg000:9DF3		    add	    di,	cx
seg000:9DF5		    lodsw
seg000:9DF6		    xor	    es:[di], ax
seg000:9DF9		    add	    di,	cx
seg000:9DFB		    lodsw
seg000:9DFC		    xor	    es:[di], ax
seg000:9DFF		    add	    di,	dx
seg000:9E01		    lodsw
seg000:9E02		    xor	    es:[di], ax
seg000:9E05		    add	    di,	cx
seg000:9E07		    lodsw
seg000:9E08		    xor	    es:[di], ax
seg000:9E0B		    add	    di,	cx
seg000:9E0D		    lodsw
seg000:9E0E		    xor	    es:[di], ax
seg000:9E11		    add	    di,	cx
seg000:9E13		    lodsw
seg000:9E14		    xor	    es:[di], ax
seg000:9E17		    add	    di,	cx
seg000:9E19		    lodsw
seg000:9E1A		    xor	    es:[di], ax
seg000:9E1D		    add	    di,	cx
seg000:9E1F		    lodsw
seg000:9E20		    xor	    es:[di], ax
seg000:9E23		    add	    di,	cx
seg000:9E25		    lodsw
seg000:9E26		    xor	    es:[di], ax
seg000:9E29		    add	    di,	cx
seg000:9E2B		    lodsw
seg000:9E2C		    xor	    es:[di], ax
seg000:9E2F		    add	    di,	dx
seg000:9E31		    lodsw
seg000:9E32		    xor	    es:[di], ax
seg000:9E35		    add	    di,	cx
seg000:9E37		    lodsw
seg000:9E38		    xor	    es:[di], ax
seg000:9E3B		    add	    di,	cx
seg000:9E3D		    lodsw
seg000:9E3E		    xor	    es:[di], ax
seg000:9E41		    add	    di,	cx
seg000:9E43		    lodsw
seg000:9E44		    xor	    es:[di], ax
seg000:9E47		    add	    di,	cx
seg000:9E49		    lodsw
seg000:9E4A		    xor	    es:[di], ax
seg000:9E4D		    add	    di,	cx
seg000:9E4F		    lodsw
seg000:9E50		    xor	    es:[di], ax
seg000:9E53		    add	    di,	cx
seg000:9E55		    lodsw
seg000:9E56		    xor	    es:[di], ax
seg000:9E59		    add	    di,	cx
seg000:9E5B		    lodsw
seg000:9E5C		    xor	    es:[di], ax
seg000:9E5F		    add	    di,	dx
seg000:9E61		    lodsw
seg000:9E62		    xor	    es:[di], ax
seg000:9E65		    add	    di,	cx
seg000:9E67		    lodsw
seg000:9E68		    xor	    es:[di], ax
seg000:9E6B		    add	    di,	cx
seg000:9E6D		    lodsw
seg000:9E6E		    xor	    es:[di], ax
seg000:9E71		    add	    di,	cx
seg000:9E73		    lodsw
seg000:9E74		    xor	    es:[di], ax
seg000:9E77		    add	    di,	cx
seg000:9E79		    lodsw
seg000:9E7A		    xor	    es:[di], ax
seg000:9E7D		    add	    di,	cx
seg000:9E7F		    lodsw
seg000:9E80		    xor	    es:[di], ax
seg000:9E83		    add	    di,	cx
seg000:9E85		    lodsw
seg000:9E86		    xor	    es:[di], ax
seg000:9E89		    add	    di,	cx
seg000:9E8B		    lodsw
seg000:9E8C		    xor	    es:[di], ax
seg000:9E8F		    mov	    di,	bp
seg000:9E91		    mov	    ax,	cs
seg000:9E93		    mov	    es,	ax
seg000:9E95		    assume es:seg000
seg000:9E95		    retn
seg000:9E95 sub_9C17	    endp
seg000:9E95
seg000:9E96 ; ───────────────────────────────────────────────────────────────────────────
seg000:9E96		    mov	    si,	894Eh
seg000:9E99		    test    byte_894E, 0FFh
seg000:9E9E		    js	    short loc_9EA3
seg000:9EA0		    call    sub_9EAE
seg000:9EA3
seg000:9EA3 loc_9EA3:				    ; CODE XREF: seg000:9E9Ej
seg000:9EA3		    mov	    si,	8983h
seg000:9EA6		    test    byte_8983, 0FFh
seg000:9EAB		    jns	    short sub_9EAE
seg000:9EAD		    retn
seg000:9EAE
seg000:9EAE ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9EAE
seg000:9EAE
seg000:9EAE sub_9EAE	    proc near		    ; CODE XREF: seg000:9EA0p
seg000:9EAE					    ; seg000:9EABj
seg000:9EAE		    mov	    bl,	[si+2Bh]
seg000:9EB1		    xor	    bh,	bh
seg000:9EB3		    push    si
seg000:9EB4		    call    sub_84C7
seg000:9EB7		    pop	    si
seg000:9EB8		    test    byte ptr [si+32h], 0FFh
seg000:9EBC		    jz	    short loc_9ED1
seg000:9EBE		    dec	    byte ptr [si+32h]
seg000:9EC1		    mov	    byte_7BD5+29h, 50h ; 'P'
seg000:9EC6		    mov	    byte_7BD5+2Ah, 50h ; 'P'
seg000:9ECB		    mov	    word ptr byte_7BD5+2Bh, 0
seg000:9ED1
seg000:9ED1 loc_9ED1:				    ; CODE XREF: sub_9EAE+Ej
seg000:9ED1		    mov	    al,	[si+23h]
seg000:9ED4		    mov	    [si+24h], al
seg000:9ED7		    cbw
seg000:9ED8		    mov	    bx,	ax
seg000:9EDA		    mov	    ax,	[si+1Dh]
seg000:9EDD		    mov	    [si+1Fh], ax
seg000:9EE0		    or	    al,	ah
seg000:9EE2		    and	    al,	1
seg000:9EE4		    mov	    [si+25h], al
seg000:9EE7		    xor	    dx,	dx
seg000:9EE9		    mov	    ah,	2
seg000:9EEB		    xor	    al,	al
seg000:9EED		    cmp	    byte_7BD5+2Ah, 3Ch ; '<'
seg000:9EF2		    ja	    short loc_9EF7
seg000:9EF4		    mov	    ah,	1
seg000:9EF6		    dec	    dx
seg000:9EF7
seg000:9EF7 loc_9EF7:				    ; CODE XREF: sub_9EAE+44j
seg000:9EF7		    cmp	    byte_7BD5+2Ah, 64h ; 'd'
seg000:9EFC		    jb	    short loc_9F03
seg000:9EFE		    mov	    al,	4
seg000:9F00		    mov	    ah,	0FFh
seg000:9F02		    dec	    dx
seg000:9F03
seg000:9F03 loc_9F03:				    ; CODE XREF: sub_9EAE+4Ej
seg000:9F03		    cmp	    byte_7BD5+29h, 64h ; 'd'
seg000:9F08		    jb	    short loc_9F0D
seg000:9F0A		    add	    al,	ah
seg000:9F0C		    dec	    dx
seg000:9F0D
seg000:9F0D loc_9F0D:				    ; CODE XREF: sub_9EAE+5Aj
seg000:9F0D		    cmp	    byte_7BD5+29h, 3Ch ; '<'
seg000:9F12		    ja	    short loc_9F19
seg000:9F14		    sub	    al,	ah
seg000:9F16		    and	    al,	7
seg000:9F18		    dec	    dx
seg000:9F19
seg000:9F19 loc_9F19:				    ; CODE XREF: sub_9EAE+64j
seg000:9F19		    or	    dx,	dx
seg000:9F1B		    jns	    short loc_9F32
seg000:9F1D		    shl	    bx,	1
seg000:9F1F		    shl	    bx,	1
seg000:9F21		    shl	    bx,	1
seg000:9F23		    add	    bx,	8D2Ch
seg000:9F27		    xlat
seg000:9F28		    mov	    [si+23h], al
seg000:9F2B		    mov	    byte ptr [si+2Ah], 2
seg000:9F2F		    inc	    byte ptr [si+25h]
seg000:9F32
seg000:9F32 loc_9F32:				    ; CODE XREF: sub_9EAE+6Dj
seg000:9F32		    test    byte_7BD5+2Bh, 0FFh
seg000:9F37		    jz	    short locret_9F3C
seg000:9F39		    inc	    byte ptr [si+2Ch]
seg000:9F3C
seg000:9F3C locret_9F3C:			    ; CODE XREF: sub_9EAE+89j
seg000:9F3C		    retn
seg000:9F3C sub_9EAE	    endp
seg000:9F3C
seg000:9F3D ; ───────────────────────────────────────────────────────────────────────────
seg000:9F3D		    mov	    di,	894Eh
seg000:9F40		    mov	    si,	8A4Dh
seg000:9F43		    test    byte_894E, 0FFh
seg000:9F48		    js	    short loc_9F4D
seg000:9F4A		    call    sub_9F5B
seg000:9F4D
seg000:9F4D loc_9F4D:				    ; CODE XREF: seg000:9F48j
seg000:9F4D		    mov	    di,	8983h
seg000:9F50		    mov	    si,	8B19h
seg000:9F53		    test    byte_8983, 0FFh
seg000:9F58		    jns	    short sub_9F5B
seg000:9F5A		    retn
seg000:9F5B
seg000:9F5B ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9F5B
seg000:9F5B
seg000:9F5B sub_9F5B	    proc near		    ; CODE XREF: seg000:9F4Ap
seg000:9F5B					    ; seg000:9F58j
seg000:9F5B		    test    byte ptr [di+2Ch], 0FFh
seg000:9F5F		    jz	    short locret_9FBB
seg000:9F61		    test    word ptr [di+21h], 0FFFFh
seg000:9F66		    jnz	    short locret_9FBB
seg000:9F68		    cmp	    byte ptr [si], 0FFh
seg000:9F6B		    jz	    short loc_9F75
seg000:9F6D		    add	    si,	11h
seg000:9F70		    cmp	    byte ptr [si], 0FFh
seg000:9F73		    jnz	    short locret_9FBB
seg000:9F75
seg000:9F75 loc_9F75:				    ; CODE XREF: sub_9F5B+10j
seg000:9F75		    call    sub_916B
seg000:9F78		    mov	    al,	[di+23h]
seg000:9F7B		    mov	    [si+9], al
seg000:9F7E		    mov	    byte ptr [si+6], 3
seg000:9F82		    mov	    ax,	[di+19h]
seg000:9F85		    mov	    [si], ax
seg000:9F87		    mov	    ax,	[di+1Dh]
seg000:9F8A		    mov	    [si+4], ax
seg000:9F8D		    mov	    byte ptr [si+0Ah], 0FFh
seg000:9F91		    mov	    al,	0Ah
seg000:9F93		    cmp	    byte ptr [di], 1
seg000:9F96		    jnz	    short loc_9F9A
seg000:9F98		    mov	    al,	3
seg000:9F9A
seg000:9F9A loc_9F9A:				    ; CODE XREF: sub_9F5B+3Bj
seg000:9F9A		    mov	    [si+0Eh], al
seg000:9F9D		    mov	    byte ptr [di+2Ch], 0
seg000:9FA1		    mov	    ax,	2
seg000:9FA4		    call    sub_A2
seg000:9FA4 sub_9F5B	    endp
seg000:9FA4
seg000:9FA7 ; START OF FUNCTION	CHUNK FOR sub_9255
seg000:9FA7
seg000:9FA7 loc_9FA7:				    ; CODE XREF: sub_9255+23j
seg000:9FA7		    mov	    al,	[si+1]
seg000:9FAA		    mul	    byte_8E01
seg000:9FAE		    mov	    bl,	[si]
seg000:9FB0		    xor	    bh,	bh
seg000:9FB2		    add	    bx,	ax
seg000:9FB4		    add	    bx,	5CC0h
seg000:9FB8		    mov	    [si+0Bh], bx
seg000:9FBB
seg000:9FBB locret_9FBB:			    ; CODE XREF: sub_9F5B+4j
seg000:9FBB					    ; sub_9F5B+Bj ...
seg000:9FBB		    retn
seg000:9FBB ; END OF FUNCTION CHUNK FOR	sub_9255
seg000:9FBC ; ───────────────────────────────────────────────────────────────────────────
seg000:9FBC		    mov	    si,	8A4Dh
seg000:9FBF		    mov	    bp,	894Eh
seg000:9FC2		    mov	    word ptr byte_8DD5+2, 2
seg000:9FC8		    call    sub_9FD7
seg000:9FCB		    mov	    si,	8B19h
seg000:9FCE		    mov	    bp,	8983h
seg000:9FD1		    mov	    word ptr byte_8DD5+2, 2
seg000:9FD7
seg000:9FD7 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:9FD7
seg000:9FD7
seg000:9FD7 sub_9FD7	    proc near		    ; CODE XREF: seg000:9FC8p
seg000:9FD7					    ; sub_9FD7+6Fj
seg000:9FD7		    cmp	    byte ptr [si], 0FFh
seg000:9FDA		    jz	    short loc_A03F
seg000:9FDC		    mov	    di,	8A6Fh
seg000:9FDF		    mov	    cx,	0Ah
seg000:9FE2
seg000:9FE2 loc_9FE2:				    ; CODE XREF: sub_9FD7+66j
seg000:9FE2		    cmp	    byte ptr [di], 0FFh
seg000:9FE5		    jz	    short loc_A03A
seg000:9FE7		    cmp	    byte ptr [di+8], 3
seg000:9FEB		    jb	    short loc_A03A
seg000:9FED		    mov	    al,	[si+4]
seg000:9FF0		    sub	    al,	[di+4]
seg000:9FF3		    jns	    short loc_9FF7
seg000:9FF5		    neg	    al
seg000:9FF7
seg000:9FF7 loc_9FF7:				    ; CODE XREF: sub_9FD7+1Cj
seg000:9FF7		    cmp	    al,	1
seg000:9FF9		    ja	    short loc_A03A
seg000:9FFB		    mov	    al,	[si+5]
seg000:9FFE		    sub	    al,	[di+5]
seg000:A001		    jns	    short loc_A005
seg000:A003		    neg	    al
seg000:A005
seg000:A005 loc_A005:				    ; CODE XREF: sub_9FD7+2Aj
seg000:A005		    cmp	    al,	1
seg000:A007		    ja	    short loc_A03A
seg000:A009		    mov	    byte ptr [si], 0FFh
seg000:A00C		    mov	    byte ptr [si+0F8h],	0FFh
seg000:A011		    mov	    byte ptr [di+8], 1
seg000:A015		    mov	    byte ptr [di+9], 4
seg000:A019		    mov	    byte ptr [di+0Eh], 5
seg000:A01D		    mov	    byte ptr [di+6], 3
seg000:A021		    mov	    byte ptr [di+0Ah], 0FFh
seg000:A025		    mov	    word ptr [di+0Fh], 0
seg000:A02A		    mov	    byte ptr [di+0F8h],	0FFh
seg000:A02F		    add	    byte ptr [bp+28h], 3
seg000:A033		    xor	    ax,	ax
seg000:A035		    call    sub_A2
seg000:A038		    jmp	    short loc_A03F
seg000:A03A ; ───────────────────────────────────────────────────────────────────────────
seg000:A03A
seg000:A03A loc_A03A:				    ; CODE XREF: sub_9FD7+Ej
seg000:A03A					    ; sub_9FD7+14j ...
seg000:A03A		    add	    di,	11h
seg000:A03D		    loop    loc_9FE2
seg000:A03F
seg000:A03F loc_A03F:				    ; CODE XREF: sub_9FD7+3j
seg000:A03F					    ; sub_9FD7+61j
seg000:A03F		    add	    si,	11h
seg000:A042		    dec	    word ptr byte_8DD5+2
seg000:A046		    jnz	    short sub_9FD7
seg000:A048		    retn
seg000:A048 sub_9FD7	    endp
seg000:A048
seg000:A049 ; ───────────────────────────────────────────────────────────────────────────
seg000:A049		    mov	    bp,	8983h
seg000:A04C		    mov	    di,	894Eh
seg000:A04F		    mov	    si,	8A6Fh
seg000:A052		    test    byte_894E, 0FFh
seg000:A057		    js	    short loc_A05C
seg000:A059		    call    sub_A06D
seg000:A05C
seg000:A05C loc_A05C:				    ; CODE XREF: seg000:A057j
seg000:A05C		    test    byte_8983, 0FFh
seg000:A061		    jns	    short loc_A064
seg000:A063		    retn
seg000:A064 ; ───────────────────────────────────────────────────────────────────────────
seg000:A064
seg000:A064 loc_A064:				    ; CODE XREF: seg000:A061j
seg000:A064		    mov	    di,	8983h
seg000:A067		    mov	    si,	8A4Dh
seg000:A06A		    mov	    bp,	894Eh
seg000:A06D
seg000:A06D ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A06D
seg000:A06D
seg000:A06D sub_A06D	    proc near		    ; CODE XREF: seg000:A059p
seg000:A06D		    mov	    cx,	0Ch
seg000:A070
seg000:A070 loc_A070:				    ; CODE XREF: sub_A06D+2Dj
seg000:A070		    cmp	    byte ptr [si], 0FFh
seg000:A073		    jz	    short loc_A097
seg000:A075		    cmp	    byte ptr [si+8], 1
seg000:A079		    jz	    short loc_A097
seg000:A07B		    mov	    al,	[di+1Dh]
seg000:A07E		    sub	    al,	[si+4]
seg000:A081		    jns	    short loc_A085
seg000:A083		    neg	    al
seg000:A085
seg000:A085 loc_A085:				    ; CODE XREF: sub_A06D+14j
seg000:A085		    cmp	    al,	1
seg000:A087		    ja	    short loc_A097
seg000:A089		    mov	    al,	[di+1Eh]
seg000:A08C		    sub	    al,	[si+5]
seg000:A08F		    jns	    short loc_A093
seg000:A091		    neg	    al
seg000:A093
seg000:A093 loc_A093:				    ; CODE XREF: sub_A06D+22j
seg000:A093		    cmp	    al,	2
seg000:A095		    jb	    short loc_A09D
seg000:A097
seg000:A097 loc_A097:				    ; CODE XREF: sub_A06D+6j
seg000:A097					    ; sub_A06D+Cj ...
seg000:A097		    add	    si,	11h
seg000:A09A		    loop    loc_A070
seg000:A09C		    retn
seg000:A09D ; ───────────────────────────────────────────────────────────────────────────
seg000:A09D
seg000:A09D loc_A09D:				    ; CODE XREF: sub_A06D+28j
seg000:A09D		    mov	    ax,	1
seg000:A0A0		    call    sub_A2
seg000:A0A3		    mov	    byte ptr [di+2Dh], 1
seg000:A0A7		    call    sub_916B
seg000:A0AA		    test    byte ptr [di], 0FFh
seg000:A0AD		    jz	    short loc_A0B4
seg000:A0AF		    mov	    byte ptr [di+32h], 14h
seg000:A0B3		    retn
seg000:A0B4 ; ───────────────────────────────────────────────────────────────────────────
seg000:A0B4
seg000:A0B4 loc_A0B4:				    ; CODE XREF: sub_A06D+40j
seg000:A0B4		    dec	    byte ptr [di+26h]
seg000:A0B7		    js	    short loc_A0BA
seg000:A0B9		    retn
seg000:A0BA ; ───────────────────────────────────────────────────────────────────────────
seg000:A0BA
seg000:A0BA loc_A0BA:				    ; CODE XREF: sub_A06D+4Aj
seg000:A0BA		    mov	    byte ptr [di], 1
seg000:A0BD		    mov	    al,	[di+1]
seg000:A0C0		    sub	    al,	16h
seg000:A0C2		    mov	    bl,	[di+2]
seg000:A0C5		    add	    bl,	0Ch
seg000:A0C8		    xor	    ah,	ah
seg000:A0CA		    xor	    bh,	bh
seg000:A0CC		    push    di
seg000:A0CD		    push    bp
seg000:A0CE		    mov	    si,	8CB2h
seg000:A0D1		    call    sub_82F7
seg000:A0D4		    pop	    bp
seg000:A0D5		    pop	    di
seg000:A0D6		    test    byte ptr [di+2Eh], 0FFh
seg000:A0DA		    jnz	    short loc_A0DD
seg000:A0DC		    retn
seg000:A0DD ; ───────────────────────────────────────────────────────────────────────────
seg000:A0DD
seg000:A0DD loc_A0DD:				    ; CODE XREF: sub_A06D+6Dj
seg000:A0DD		    dec	    byte ptr [di+2Eh]
seg000:A0E0		    inc	    byte ptr [bp+2Eh]
seg000:A0E3		    retn
seg000:A0E3 sub_A06D	    endp
seg000:A0E3
seg000:A0E4 ; ───────────────────────────────────────────────────────────────────────────
seg000:A0E4		    mov	    dx,	307h
seg000:A0E7		    mov	    si,	894Eh
seg000:A0EA		    test    byte_894E, 0FFh
seg000:A0EF		    jnz	    short loc_A0F4
seg000:A0F1		    call    sub_A102
seg000:A0F4
seg000:A0F4 loc_A0F4:				    ; CODE XREF: seg000:A0EFj
seg000:A0F4		    mov	    si,	8983h
seg000:A0F7		    test    byte_8983, 0FFh
seg000:A0FC		    jz	    short loc_A0FF
seg000:A0FE		    retn
seg000:A0FF ; ───────────────────────────────────────────────────────────────────────────
seg000:A0FF
seg000:A0FF loc_A0FF:				    ; CODE XREF: seg000:A0FCj
seg000:A0FF		    mov	    dx,	506h
seg000:A102
seg000:A102 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A102
seg000:A102
seg000:A102 sub_A102	    proc near		    ; CODE XREF: seg000:A0F1p
seg000:A102		    mov	    al,	[si+26h]
seg000:A105		    cmp	    al,	[si+27h]
seg000:A108		    jnz	    short loc_A10B
seg000:A10A		    retn
seg000:A10B ; ───────────────────────────────────────────────────────────────────────────
seg000:A10B
seg000:A10B loc_A10B:				    ; CODE XREF: sub_A102+6j
seg000:A10B		    mov	    al,	[si+27h]
seg000:A10E		    mov	    byte_8DC7+6, 3Eh ; '>'
seg000:A113		    ja	    short loc_A120
seg000:A115		    dec	    al
seg000:A117		    mov	    byte_8DC7+6, 20h ; ' '
seg000:A11C		    sub	    byte ptr [si+27h], 2
seg000:A120
seg000:A120 loc_A120:				    ; CODE XREF: sub_A102+11j
seg000:A120		    inc	    byte ptr [si+27h]
seg000:A123		    push    ax
seg000:A124		    push    si
seg000:A125		    call    sub_82B4
seg000:A128		    pop	    si
seg000:A129		    pop	    ax
seg000:A12A		    mov	    ah,	al
seg000:A12C		    shl	    al,	1
seg000:A12E		    add	    al,	ah
seg000:A130		    add	    al,	[si+1]
seg000:A133		    sub	    al,	16h
seg000:A135		    mov	    bl,	[si+2]
seg000:A138		    add	    bl,	0Ch
seg000:A13B		    xor	    ah,	ah
seg000:A13D		    xor	    bh,	bh
seg000:A13F		    mov	    si,	8DCDh
seg000:A142		    call    sub_82F7
seg000:A145		    retn
seg000:A145 sub_A102	    endp
seg000:A145
seg000:A146 ; ───────────────────────────────────────────────────────────────────────────
seg000:A146		    mov	    si,	894Eh
seg000:A149		    test    byte_894E, 0FFh
seg000:A14E		    js	    short loc_A153
seg000:A150		    call    sub_A177
seg000:A153
seg000:A153 loc_A153:				    ; CODE XREF: seg000:A14Ej
seg000:A153		    call    sub_A474
seg000:A156		    mov	    si,	8983h
seg000:A159		    test    byte_8983, 0FFh
seg000:A15E		    js	    short loc_A163
seg000:A160		    call    sub_A177
seg000:A163
seg000:A163 loc_A163:				    ; CODE XREF: seg000:A15Ej
seg000:A163		    jmp	    sub_A474
seg000:A166 ; ───────────────────────────────────────────────────────────────────────────
seg000:A166 ; START OF FUNCTION	CHUNK FOR sub_A279
seg000:A166
seg000:A166 loc_A166:				    ; CODE XREF: sub_A279+31j
seg000:A166					    ; sub_A279+3Bj ...
seg000:A166		    pop	    ax
seg000:A167
seg000:A167 loc_A167:				    ; CODE XREF: seg000:A195j
seg000:A167					    ; seg000:A1CFj ...
seg000:A167		    mov	    al,	[si+24h]
seg000:A16A		    cmp	    al,	[si+23h]
seg000:A16D		    jnz	    short loc_A174
seg000:A16F		    mov	    byte ptr [si+25h], 0
seg000:A173		    retn
seg000:A174 ; ───────────────────────────────────────────────────────────────────────────
seg000:A174
seg000:A174 loc_A174:				    ; CODE XREF: sub_A279-10Cj
seg000:A174		    mov	    [si+23h], al
seg000:A174 ; END OF FUNCTION CHUNK FOR	sub_A279
seg000:A177
seg000:A177 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A177
seg000:A177
seg000:A177 sub_A177	    proc near		    ; CODE XREF: seg000:A150p
seg000:A177					    ; seg000:A160p
seg000:A177		    test    byte ptr [si+25h], 0FFh
seg000:A17B		    jnz	    short loc_A17E
seg000:A17D		    retn
seg000:A17E ; ───────────────────────────────────────────────────────────────────────────
seg000:A17E
seg000:A17E loc_A17E:				    ; CODE XREF: sub_A177+4j
seg000:A17E		    mov	    ax,	[si+19h]
seg000:A181		    mov	    [si+1Bh], ax
seg000:A184		    mov	    bl,	[si+23h]
seg000:A187		    xor	    bh,	bh
seg000:A189		    shl	    bx,	1
seg000:A18B		    jmp	    word ptr [bx-713Fh]
seg000:A18B sub_A177	    endp
seg000:A18B
seg000:A18F ; ───────────────────────────────────────────────────────────────────────────
seg000:A18F		    test    byte ptr [si+21h], 0FFh
seg000:A193		    jz	    short loc_A197
seg000:A195		    jmp	    short loc_A167
seg000:A197 ; ───────────────────────────────────────────────────────────────────────────
seg000:A197
seg000:A197 loc_A197:				    ; CODE XREF: seg000:A193j
seg000:A197		    test    byte ptr [si+22h], 0FFh
seg000:A19B		    jnz	    short loc_A1BC
seg000:A19D		    dec	    byte ptr [si+1Ch]
seg000:A1A0		    jns	    short loc_A1B9
seg000:A1A2		    mov	    al,	byte_8E00
seg000:A1A5		    dec	    al
seg000:A1A7		    mov	    [si+1Ah], al
seg000:A1AA		    mov	    [si+1Ch], al
seg000:A1AD		    inc	    byte ptr [si+22h]
seg000:A1B0		    shl	    al,	1
seg000:A1B2		    inc	    al
seg000:A1B4		    mov	    [si+1Eh], al
seg000:A1B7		    jmp	    short loc_A1BC
seg000:A1B9 ; ───────────────────────────────────────────────────────────────────────────
seg000:A1B9
seg000:A1B9 loc_A1B9:				    ; CODE XREF: seg000:A1A0j
seg000:A1B9		    call    sub_A279
seg000:A1BC
seg000:A1BC loc_A1BC:				    ; CODE XREF: seg000:A19Bj
seg000:A1BC					    ; seg000:A1B7j
seg000:A1BC		    xor	    byte ptr [si+22h], 1
seg000:A1C0		    jz	    short loc_A1C5
seg000:A1C2		    dec	    byte ptr [si+1Ah]
seg000:A1C5
seg000:A1C5 loc_A1C5:				    ; CODE XREF: seg000:A1C0j
seg000:A1C5		    dec	    byte ptr [si+1Eh]
seg000:A1C8		    retn
seg000:A1C9 ; ───────────────────────────────────────────────────────────────────────────
seg000:A1C9		    test    byte ptr [si+22h], 0FFh
seg000:A1CD		    jz	    short loc_A1D1
seg000:A1CF		    jmp	    short loc_A167
seg000:A1D1 ; ───────────────────────────────────────────────────────────────────────────
seg000:A1D1
seg000:A1D1 loc_A1D1:				    ; CODE XREF: seg000:A1CDj
seg000:A1D1		    test    byte ptr [si+21h], 0FFh
seg000:A1D5		    jnz	    short loc_A1F6
seg000:A1D7		    dec	    byte ptr [si+1Bh]
seg000:A1DA		    jns	    short loc_A1F3
seg000:A1DC		    mov	    al,	byte_8E01
seg000:A1DF		    dec	    al
seg000:A1E1		    mov	    [si+19h], al
seg000:A1E4		    mov	    [si+1Bh], al
seg000:A1E7		    inc	    byte ptr [si+21h]
seg000:A1EA		    shl	    al,	1
seg000:A1EC		    inc	    al
seg000:A1EE		    mov	    [si+1Dh], al
seg000:A1F1		    jmp	    short loc_A1F6
seg000:A1F3 ; ───────────────────────────────────────────────────────────────────────────
seg000:A1F3
seg000:A1F3 loc_A1F3:				    ; CODE XREF: seg000:A1DAj
seg000:A1F3		    call    sub_A279
seg000:A1F6
seg000:A1F6 loc_A1F6:				    ; CODE XREF: seg000:A1D5j
seg000:A1F6					    ; seg000:A1F1j
seg000:A1F6		    xor	    byte ptr [si+21h], 1
seg000:A1FA		    jz	    short loc_A1FF
seg000:A1FC		    dec	    byte ptr [si+19h]
seg000:A1FF
seg000:A1FF loc_A1FF:				    ; CODE XREF: seg000:A1FAj
seg000:A1FF		    dec	    byte ptr [si+1Dh]
seg000:A202		    retn
seg000:A203 ; ───────────────────────────────────────────────────────────────────────────
seg000:A203		    test    byte ptr [si+21h], 0FFh
seg000:A207		    jz	    short loc_A20C
seg000:A209		    jmp	    loc_A167
seg000:A20C ; ───────────────────────────────────────────────────────────────────────────
seg000:A20C
seg000:A20C loc_A20C:				    ; CODE XREF: seg000:A207j
seg000:A20C		    test    byte ptr [si+22h], 0FFh
seg000:A210		    jnz	    short loc_A231
seg000:A212		    inc	    byte ptr [si+1Ch]
seg000:A215		    mov	    al,	byte_8E00
seg000:A218		    cmp	    [si+1Ch], al
seg000:A21B		    jnz	    short loc_A22E
seg000:A21D		    mov	    byte ptr [si+1Ah], 0FFh
seg000:A221		    mov	    byte ptr [si+1Ch], 0FFh
seg000:A225		    inc	    byte ptr [si+22h]
seg000:A228		    mov	    byte ptr [si+1Eh], 0FFh
seg000:A22C		    jmp	    short loc_A231
seg000:A22E ; ───────────────────────────────────────────────────────────────────────────
seg000:A22E
seg000:A22E loc_A22E:				    ; CODE XREF: seg000:A21Bj
seg000:A22E		    call    sub_A279
seg000:A231
seg000:A231 loc_A231:				    ; CODE XREF: seg000:A210j
seg000:A231					    ; seg000:A22Cj
seg000:A231		    xor	    byte ptr [si+22h], 1
seg000:A235		    jnz	    short loc_A23A
seg000:A237		    inc	    byte ptr [si+1Ah]
seg000:A23A
seg000:A23A loc_A23A:				    ; CODE XREF: seg000:A235j
seg000:A23A		    inc	    byte ptr [si+1Eh]
seg000:A23D		    retn
seg000:A23E ; ───────────────────────────────────────────────────────────────────────────
seg000:A23E		    test    byte ptr [si+22h], 0FFh
seg000:A242		    jz	    short loc_A247
seg000:A244		    jmp	    loc_A167
seg000:A247 ; ───────────────────────────────────────────────────────────────────────────
seg000:A247
seg000:A247 loc_A247:				    ; CODE XREF: seg000:A242j
seg000:A247		    test    byte ptr [si+21h], 0FFh
seg000:A24B		    jnz	    short loc_A26C
seg000:A24D		    inc	    byte ptr [si+1Bh]
seg000:A250		    mov	    al,	byte_8E01
seg000:A253		    cmp	    [si+1Bh], al
seg000:A256		    jnz	    short loc_A269
seg000:A258		    mov	    byte ptr [si+19h], 0FFh
seg000:A25C		    mov	    byte ptr [si+1Bh], 0FFh
seg000:A260		    inc	    byte ptr [si+21h]
seg000:A263		    mov	    byte ptr [si+1Dh], 0FFh
seg000:A267		    jmp	    short loc_A26C
seg000:A269 ; ───────────────────────────────────────────────────────────────────────────
seg000:A269
seg000:A269 loc_A269:				    ; CODE XREF: seg000:A256j
seg000:A269		    call    sub_A279
seg000:A26C
seg000:A26C loc_A26C:				    ; CODE XREF: seg000:A24Bj
seg000:A26C					    ; seg000:A267j
seg000:A26C		    xor	    byte ptr [si+21h], 1
seg000:A270		    jnz	    short loc_A275
seg000:A272		    inc	    byte ptr [si+19h]
seg000:A275
seg000:A275 loc_A275:				    ; CODE XREF: seg000:A270j
seg000:A275		    inc	    byte ptr [si+1Dh]
seg000:A278		    retn
seg000:A279
seg000:A279 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A279
seg000:A279
seg000:A279 sub_A279	    proc near		    ; CODE XREF: seg000:loc_A1B9p
seg000:A279					    ; seg000:loc_A1F3p	...
seg000:A279
seg000:A279 ; FUNCTION CHUNK AT	seg000:A166 SIZE 00000011 BYTES
seg000:A279 ; FUNCTION CHUNK AT	seg000:A3ED SIZE 00000087 BYTES
seg000:A279
seg000:A279		    xor	    bh,	bh
seg000:A27B		    mov	    bl,	[si+1Bh]
seg000:A27E		    mov	    al,	byte_8E01
seg000:A281		    mul	    byte ptr [si+1Ch]
seg000:A284		    add	    bx,	ax
seg000:A286		    add	    bx,	5CC0h
seg000:A28A		    mov	    al,	[bx]
seg000:A28C		    cmp	    al,	40h ; '@'
seg000:A28E		    jnz	    short loc_A291
seg000:A290		    retn
seg000:A291 ; ───────────────────────────────────────────────────────────────────────────
seg000:A291
seg000:A291 loc_A291:				    ; CODE XREF: sub_A279+15j
seg000:A291		    cmp	    al,	78h ; 'x'
seg000:A293		    jnz	    short loc_A296
seg000:A295		    retn
seg000:A296 ; ───────────────────────────────────────────────────────────────────────────
seg000:A296
seg000:A296 loc_A296:				    ; CODE XREF: sub_A279+1Aj
seg000:A296		    cmp	    al,	50h ; 'P'
seg000:A298		    jnb	    short loc_A29D
seg000:A29A		    jmp	    short loc_A2B8
seg000:A29A ; ───────────────────────────────────────────────────────────────────────────
seg000:A29C		    db 90h
seg000:A29D ; ───────────────────────────────────────────────────────────────────────────
seg000:A29D
seg000:A29D loc_A29D:				    ; CODE XREF: sub_A279+1Fj
seg000:A29D		    cmp	    al,	72h ; 'r'
seg000:A29F		    jz	    short loc_A2B8
seg000:A2A1		    jbe	    short loc_A2A6
seg000:A2A3		    jmp	    loc_A3ED
seg000:A2A6 ; ───────────────────────────────────────────────────────────────────────────
seg000:A2A6
seg000:A2A6 loc_A2A6:				    ; CODE XREF: sub_A279+28j
seg000:A2A6		    cmp	    al,	54h ; 'T'
seg000:A2A8		    jb	    short loc_A2AD
seg000:A2AA		    jmp	    loc_A166
seg000:A2AD ; ───────────────────────────────────────────────────────────────────────────
seg000:A2AD
seg000:A2AD loc_A2AD:				    ; CODE XREF: sub_A279+2Fj
seg000:A2AD		    sub	    al,	50h ; 'P'
seg000:A2AF		    cmp	    al,	[si+23h]
seg000:A2B2		    jnz	    short locret_A2B7
seg000:A2B4		    jmp	    loc_A166
seg000:A2B7 ; ───────────────────────────────────────────────────────────────────────────
seg000:A2B7
seg000:A2B7 locret_A2B7:			    ; CODE XREF: sub_A279+39j
seg000:A2B7		    retn
seg000:A2B8 ; ───────────────────────────────────────────────────────────────────────────
seg000:A2B8
seg000:A2B8 loc_A2B8:				    ; CODE XREF: sub_A279+21j
seg000:A2B8					    ; sub_A279+26j
seg000:A2B8		    mov	    byte_8E08, al
seg000:A2BB		    cmp	    al,	41h ; 'A'
seg000:A2BD		    jz	    short loc_A305
seg000:A2BF		    cmp	    al,	42h ; 'B'
seg000:A2C1		    jz	    short loc_A2D8
seg000:A2C3		    cmp	    al,	72h ; 'r'
seg000:A2C5		    jnz	    short loc_A2CA
seg000:A2C7		    jmp	    loc_A3A1
seg000:A2CA ; ───────────────────────────────────────────────────────────────────────────
seg000:A2CA
seg000:A2CA loc_A2CA:				    ; CODE XREF: sub_A279+4Cj
seg000:A2CA		    cmp	    al,	47h ; 'G'
seg000:A2CC		    jb	    short loc_A32A
seg000:A2CE		    cmp	    al,	50h ; 'P'
seg000:A2D0		    jnb	    short loc_A2D5
seg000:A2D2		    jmp	    loc_A35C
seg000:A2D5 ; ───────────────────────────────────────────────────────────────────────────
seg000:A2D5
seg000:A2D5 loc_A2D5:				    ; CODE XREF: sub_A279+57j
seg000:A2D5		    jmp	    loc_A166
seg000:A2D8 ; ───────────────────────────────────────────────────────────────────────────
seg000:A2D8
seg000:A2D8 loc_A2D8:				    ; CODE XREF: sub_A279+48j
seg000:A2D8		    test    byte ptr [si], 0FFh
seg000:A2DB		    jz	    short loc_A2E0
seg000:A2DD		    jmp	    loc_A166
seg000:A2E0 ; ───────────────────────────────────────────────────────────────────────────
seg000:A2E0
seg000:A2E0 loc_A2E0:				    ; CODE XREF: sub_A279+62j
seg000:A2E0		    test    byte ptr [si+2Eh], 0FFh
seg000:A2E4		    jz	    short loc_A2E9
seg000:A2E6		    jmp	    loc_A166
seg000:A2E9 ; ───────────────────────────────────────────────────────────────────────────
seg000:A2E9
seg000:A2E9 loc_A2E9:				    ; CODE XREF: sub_A279+6Bj
seg000:A2E9		    inc	    byte ptr [si+2Eh]
seg000:A2EC		    dec	    word_8DF4
seg000:A2F0		    mov	    byte ptr [bx], 40h ; '@'
seg000:A2F3		    mov	    ax,	0Fh
seg000:A2F6		    add	    [si+28h], al
seg000:A2F9		    call    loc_9190
seg000:A2FC		    mov	    ax,	3
seg000:A2FF		    call    sub_A2
seg000:A302		    jmp	    sub_A3B2
seg000:A305 ; ───────────────────────────────────────────────────────────────────────────
seg000:A305
seg000:A305 loc_A305:				    ; CODE XREF: sub_A279+44j
seg000:A305		    test    byte ptr [si+2Eh], 0FFh
seg000:A309		    jnz	    short loc_A30E
seg000:A30B		    jmp	    loc_A166
seg000:A30E ; ───────────────────────────────────────────────────────────────────────────
seg000:A30E
seg000:A30E loc_A30E:				    ; CODE XREF: sub_A279+90j
seg000:A30E		    mov	    byte ptr [bx], 40h ; '@'
seg000:A311		    mov	    ax,	19h
seg000:A314		    add	    [si+28h], al
seg000:A317		    call    loc_9190
seg000:A31A		    dec	    word_8DF6
seg000:A31E		    dec	    byte ptr [si+2Eh]
seg000:A321		    mov	    ax,	4
seg000:A324		    call    sub_A2
seg000:A327		    jmp	    sub_A3B2
seg000:A32A ; ───────────────────────────────────────────────────────────────────────────
seg000:A32A
seg000:A32A loc_A32A:				    ; CODE XREF: sub_A279+53j
seg000:A32A		    mov	    byte ptr [bx], 40h ; '@'
seg000:A32D		    add	    byte_8DDC, 0Ah
seg000:A332		    mov	    al,	byte_8DDC
seg000:A335		    add	    [si+28h], al
seg000:A338		    mov	    bl,	al
seg000:A33A		    add	    bl,	14h
seg000:A33D		    shr	    bl,	1
seg000:A33F		    shr	    bl,	1
seg000:A341		    mov	    byte_8DD5, bl
seg000:A345		    xor	    ah,	ah
seg000:A347		    test    byte ptr [si], 0FFh
seg000:A34A		    jnz	    short loc_A34F
seg000:A34C		    call    loc_9190
seg000:A34F
seg000:A34F loc_A34F:				    ; CODE XREF: sub_A279+D1j
seg000:A34F		    inc	    byte_8DE1
seg000:A353		    mov	    ax,	5
seg000:A356		    call    sub_A2
seg000:A359		    jmp	    short sub_A3B2
seg000:A359 ; ───────────────────────────────────────────────────────────────────────────
seg000:A35B		    align 2
seg000:A35C
seg000:A35C loc_A35C:				    ; CODE XREF: sub_A279+59j
seg000:A35C		    mov	    byte ptr [bx], 40h ; '@'
seg000:A35F		    mov	    al,	63h ; 'c'
seg000:A361		    add	    [si+28h], al
seg000:A364		    xor	    ah,	ah
seg000:A366		    test    byte ptr [si], 0FFh
seg000:A369		    jnz	    short loc_A36E
seg000:A36B		    call    loc_9190
seg000:A36E
seg000:A36E loc_A36E:				    ; CODE XREF: sub_A279+F0j
seg000:A36E		    inc	    byte_8DE1
seg000:A372		    mov	    ax,	7
seg000:A375		    call    sub_A2
seg000:A378		    push    di
seg000:A379		    push    bx
seg000:A37A		    mov	    al,	byte_8DDD
seg000:A37D		    mov	    di,	8E08h
seg000:A380
seg000:A380 loc_A380:				    ; CODE XREF: sub_A279+10Cj
seg000:A380		    add	    di,	4
seg000:A383		    cmp	    [di], al
seg000:A385		    jnz	    short loc_A380
seg000:A387		    mov	    word ptr [di], 1
seg000:A38B		    mov	    bx,	word_8E30
seg000:A38F		    inc	    word_8E30
seg000:A393		    shl	    bx,	1
seg000:A395		    mov	    ax,	[bx+6044h]
seg000:A399		    mov	    [di+2], ax
seg000:A39C		    pop	    bx
seg000:A39D		    pop	    di
seg000:A39E		    jmp	    short sub_A3B2
seg000:A39E ; ───────────────────────────────────────────────────────────────────────────
seg000:A3A0		    db 90h
seg000:A3A1 ; ───────────────────────────────────────────────────────────────────────────
seg000:A3A1
seg000:A3A1 loc_A3A1:				    ; CODE XREF: sub_A279+4Ej
seg000:A3A1		    mov	    byte ptr [bx], 54h ; 'T'
seg000:A3A4		    mov	    byte_8E08, 54h ; 'T'
seg000:A3A9		    inc	    byte ptr [si+28h]
seg000:A3AC		    call    sub_A3B2
seg000:A3AF		    jmp	    loc_A166
seg000:A3AF sub_A279	    endp
seg000:A3AF
seg000:A3B2
seg000:A3B2 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A3B2
seg000:A3B2
seg000:A3B2 sub_A3B2	    proc near		    ; CODE XREF: sub_A279+89j
seg000:A3B2					    ; sub_A279+AEj ...
seg000:A3B2		    mov	    dl,	[si+1Bh]
seg000:A3B5		    xor	    dh,	dh
seg000:A3B7		    shl	    dx,	1
seg000:A3B9		    shl	    dx,	1
seg000:A3BB		    shl	    dx,	1
seg000:A3BD		    shl	    dx,	1
seg000:A3BF		    mov	    al,	[si+1Ch]
seg000:A3C2		    mul	    byte_8E01
seg000:A3C6		    shl	    ax,	1
seg000:A3C8		    shl	    ax,	1
seg000:A3CA		    shl	    ax,	1
seg000:A3CC		    shl	    ax,	1
seg000:A3CE		    shl	    ax,	1
seg000:A3D0		    shl	    ax,	1
seg000:A3D2		    mov	    di,	ax
seg000:A3D4		    add	    di,	dx
seg000:A3D6		    mov	    al,	byte_8E08
seg000:A3D9		    sub	    al,	40h ; '@'
seg000:A3DB		    mov	    ah,	0C0h ; '└'
seg000:A3DD		    mul	    ah
seg000:A3DF		    push    si
seg000:A3E0		    mov	    si,	ax
seg000:A3E2		    add	    si,	970h
seg000:A3E6		    xor	    bx,	bx
seg000:A3E8		    call    loc_9C3A
seg000:A3EB		    pop	    si
seg000:A3EC		    retn
seg000:A3EC sub_A3B2	    endp
seg000:A3EC
seg000:A3ED ; ───────────────────────────────────────────────────────────────────────────
seg000:A3ED ; START OF FUNCTION	CHUNK FOR sub_A279
seg000:A3ED
seg000:A3ED loc_A3ED:				    ; CODE XREF: sub_A279+2Aj
seg000:A3ED		    cmp	    byte_8DDD, 1
seg000:A3F2		    jnz	    short loc_A426
seg000:A3F4		    mov	    bx,	1
seg000:A3F7		    mov	    ax,	[si+19h]
seg000:A3FA		    mov	    bp,	6092h
seg000:A3FD		    mov	    di,	6079h
seg000:A400
seg000:A400 loc_A400:				    ; CODE XREF: sub_A279+196j
seg000:A400					    ; sub_A279+19Bj
seg000:A400		    add	    bp,	2
seg000:A403		    inc	    bx
seg000:A404		    cmp	    bx,	16h
seg000:A407		    jbe	    short loc_A40C
seg000:A409		    jmp	    loc_A166
seg000:A40C ; ───────────────────────────────────────────────────────────────────────────
seg000:A40C
seg000:A40C loc_A40C:				    ; CODE XREF: sub_A279+18Ej
seg000:A40C		    test    byte ptr [bx+di], 0FFh
seg000:A40F		    js	    short loc_A400
seg000:A411		    cmp	    ax,	[bp+0]
seg000:A414		    jnz	    short loc_A400
seg000:A416		    mov	    byte_8DDD, bl
seg000:A41A		    inc	    byte ptr a12345678901234 ; "1234567890123456789012345"
seg000:A41E		    and	    byte ptr a12345678901234, 0Fh ; "1234567890123456789012345"
seg000:A423		    jmp	    loc_8EF9
seg000:A426 ; ───────────────────────────────────────────────────────────────────────────
seg000:A426
seg000:A426 loc_A426:				    ; CODE XREF: sub_A279+179j
seg000:A426		    mov	    bl,	byte_8DDD
seg000:A42A		    xor	    bh,	bh
seg000:A42C		    cmp	    bl,	19h
seg000:A42F		    jnz	    short loc_A434
seg000:A431		    jmp	    loc_8EF3
seg000:A434 ; ───────────────────────────────────────────────────────────────────────────
seg000:A434
seg000:A434 loc_A434:				    ; CODE XREF: sub_A279+1B6j
seg000:A434		    cmp	    bl,	16h
seg000:A437		    ja	    short loc_A457
seg000:A439		    add	    bx,	6079h
seg000:A43D		    mov	    al,	[bx]
seg000:A43F		    inc	    al
seg000:A441		    and	    al,	0Fh
seg000:A443		    jnz	    short loc_A447
seg000:A445		    dec	    al
seg000:A447
seg000:A447 loc_A447:				    ; CODE XREF: sub_A279+1CAj
seg000:A447		    mov	    [bx], al
seg000:A449		    js	    short loc_A44F
seg000:A44B		    and	    al,	3
seg000:A44D		    jnz	    short $+2
seg000:A44F
seg000:A44F loc_A44F:				    ; CODE XREF: sub_A279+1D0j
seg000:A44F		    mov	    byte_8DDD, 1
seg000:A454		    jmp	    loc_8EF9
seg000:A457 ; ───────────────────────────────────────────────────────────────────────────
seg000:A457
seg000:A457 loc_A457:				    ; CODE XREF: sub_A279+1BEj
seg000:A457		    inc	    bl
seg000:A459		    mov	    byte_8DDD, bl
seg000:A45D		    mov	    word_8DA8, 81D2h
seg000:A463		    cmp	    bl,	18h
seg000:A466		    jz	    short loc_A46E
seg000:A468		    mov	    word_8DA8, 8252h
seg000:A46E
seg000:A46E loc_A46E:				    ; CODE XREF: sub_A279+1EDj
seg000:A46E		    call    loc_9000
seg000:A471		    jmp	    loc_8EF6
seg000:A471 ; END OF FUNCTION CHUNK FOR	sub_A279
seg000:A474
seg000:A474 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A474
seg000:A474
seg000:A474 sub_A474	    proc near		    ; CODE XREF: seg000:loc_A153p
seg000:A474					    ; seg000:loc_A163j
seg000:A474		    mov	    al,	[si+1Dh]
seg000:A477		    sub	    al,	[si+17h]
seg000:A47A		    cmp	    al,	byte ptr word_8DAC
seg000:A47E		    jle	    short loc_A49A
seg000:A480		    cmp	    al,	byte ptr word_8DAC+1
seg000:A484		    jge	    short loc_A4A8
seg000:A486
seg000:A486 loc_A486:				    ; CODE XREF: sub_A474+2Cj
seg000:A486					    ; sub_A474+30j ...
seg000:A486		    mov	    al,	[si+1Eh]
seg000:A489		    sub	    al,	[si+18h]
seg000:A48C		    cmp	    al,	byte ptr word_8DAE
seg000:A490		    jle	    short loc_A4CC
seg000:A492		    cmp	    al,	byte ptr word_8DAE+1
seg000:A496		    jge	    short loc_A4D8
seg000:A498		    jmp	    short sub_A4F8
seg000:A49A ; ───────────────────────────────────────────────────────────────────────────
seg000:A49A
seg000:A49A loc_A49A:				    ; CODE XREF: sub_A474+Aj
seg000:A49A		    mov	    al,	[si+1Fh]
seg000:A49D		    sub	    al,	[si+1Dh]
seg000:A4A0		    jz	    short loc_A486
seg000:A4A2		    cmp	    al,	0FFh
seg000:A4A4		    jz	    short loc_A486
seg000:A4A6		    jmp	    short loc_A4B4
seg000:A4A8 ; ───────────────────────────────────────────────────────────────────────────
seg000:A4A8
seg000:A4A8 loc_A4A8:				    ; CODE XREF: sub_A474+10j
seg000:A4A8		    mov	    al,	[si+1Fh]
seg000:A4AB		    sub	    al,	[si+1Dh]
seg000:A4AE		    jz	    short loc_A486
seg000:A4B0		    cmp	    al,	1
seg000:A4B2		    jz	    short loc_A486
seg000:A4B4
seg000:A4B4 loc_A4B4:				    ; CODE XREF: sub_A474+32j
seg000:A4B4		    sub	    [si+17h], al
seg000:A4B7		    jns	    short loc_A4BF
seg000:A4B9		    mov	    byte ptr [si+17h], 0
seg000:A4BD		    jmp	    short sub_A4F8
seg000:A4BF ; ───────────────────────────────────────────────────────────────────────────
seg000:A4BF
seg000:A4BF loc_A4BF:				    ; CODE XREF: sub_A474+43j
seg000:A4BF		    mov	    al,	byte_8DAA
seg000:A4C2		    cmp	    al,	[si+17h]
seg000:A4C5		    jnb	    short sub_A4F8
seg000:A4C7		    mov	    [si+17h], al
seg000:A4CA		    jmp	    short sub_A4F8
seg000:A4CC ; ───────────────────────────────────────────────────────────────────────────
seg000:A4CC
seg000:A4CC loc_A4CC:				    ; CODE XREF: sub_A474+1Cj
seg000:A4CC		    mov	    al,	[si+20h]
seg000:A4CF		    sub	    al,	[si+1Eh]
seg000:A4D2		    cmp	    al,	0FFh
seg000:A4D4		    jz	    short sub_A4F8
seg000:A4D6		    jmp	    short loc_A4E2
seg000:A4D8 ; ───────────────────────────────────────────────────────────────────────────
seg000:A4D8
seg000:A4D8 loc_A4D8:				    ; CODE XREF: sub_A474+22j
seg000:A4D8		    mov	    al,	[si+20h]
seg000:A4DB		    sub	    al,	[si+1Eh]
seg000:A4DE		    cmp	    al,	1
seg000:A4E0		    jz	    short sub_A4F8
seg000:A4E2
seg000:A4E2 loc_A4E2:				    ; CODE XREF: sub_A474+62j
seg000:A4E2		    sub	    [si+18h], al
seg000:A4E5		    jns	    short loc_A4ED
seg000:A4E7		    mov	    byte ptr [si+18h], 0
seg000:A4EB		    jmp	    short sub_A4F8
seg000:A4ED ; ───────────────────────────────────────────────────────────────────────────
seg000:A4ED
seg000:A4ED loc_A4ED:				    ; CODE XREF: sub_A474+71j
seg000:A4ED		    mov	    al,	byte_8DAB
seg000:A4F0		    cmp	    al,	[si+18h]
seg000:A4F3		    jnb	    short sub_A4F8
seg000:A4F5		    mov	    [si+18h], al
seg000:A4F5 sub_A474	    endp
seg000:A4F5
seg000:A4F8
seg000:A4F8 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A4F8
seg000:A4F8
seg000:A4F8 sub_A4F8	    proc near		    ; CODE XREF: sub_A474+24j
seg000:A4F8					    ; sub_A474+49j ...
seg000:A4F8		    xor	    dh,	dh
seg000:A4FA		    mov	    dl,	[si+17h]
seg000:A4FD		    shl	    dx,	1
seg000:A4FF		    shl	    dx,	1
seg000:A501		    shl	    dx,	1
seg000:A503		    mov	    al,	[si+18h]
seg000:A506		    mul	    byte_8E01
seg000:A50A		    shl	    ax,	1
seg000:A50C		    shl	    ax,	1
seg000:A50E		    shl	    ax,	1
seg000:A510		    shl	    ax,	1
seg000:A512		    shl	    ax,	1
seg000:A514		    add	    ax,	dx
seg000:A516		    mov	    [si+0Dh], ax
seg000:A519		    xor	    dh,	dh
seg000:A51B		    mov	    dl,	[si+1Dh]
seg000:A51E		    shl	    dx,	1
seg000:A520		    shl	    dx,	1
seg000:A522		    shl	    dx,	1
seg000:A524		    mov	    al,	[si+1Eh]
seg000:A527		    mul	    byte_8E01
seg000:A52B		    shl	    ax,	1
seg000:A52D		    shl	    ax,	1
seg000:A52F		    shl	    ax,	1
seg000:A531		    shl	    ax,	1
seg000:A533		    shl	    ax,	1
seg000:A535		    add	    ax,	dx
seg000:A537		    mov	    [si+0Fh], ax
seg000:A53A		    test    byte ptr [si+25h], 0FFh
seg000:A53E		    jnz	    short loc_A56B
seg000:A540		    dec	    byte ptr [si+2Ah]
seg000:A543		    js	    short loc_A546
seg000:A545		    retn
seg000:A546 ; ───────────────────────────────────────────────────────────────────────────
seg000:A546
seg000:A546 loc_A546:				    ; CODE XREF: sub_A4F8+4Bj
seg000:A546		    mov	    byte ptr [si+2Ah], 0
seg000:A54A		    inc	    byte ptr [si+29h]
seg000:A54D		    mov	    al,	[si+29h]
seg000:A550		    mov	    ah,	al
seg000:A552		    shr	    al,	1
seg000:A554		    shr	    al,	1
seg000:A556		    and	    al,	1Fh
seg000:A558		    mov	    bx,	8D5Ch
seg000:A55B		    xlat
seg000:A55C		    mov	    bx,	8D7Ch
seg000:A55F		    shl	    al,	1
seg000:A561		    shl	    al,	1
seg000:A563		    and	    ah,	3
seg000:A566		    add	    al,	ah
seg000:A568		    xlat
seg000:A569		    jmp	    short loc_A57E
seg000:A56B ; ───────────────────────────────────────────────────────────────────────────
seg000:A56B
seg000:A56B loc_A56B:				    ; CODE XREF: sub_A4F8+46j
seg000:A56B		    mov	    al,	byte ptr word_8DCF
seg000:A56E		    and	    al,	3
seg000:A570		    xor	    bh,	bh
seg000:A572		    mov	    bl,	[si+23h]
seg000:A575		    shl	    bl,	1
seg000:A577		    shl	    bl,	1
seg000:A579		    add	    bx,	8D4Ch
seg000:A57D		    xlat
seg000:A57E
seg000:A57E loc_A57E:				    ; CODE XREF: sub_A4F8+71j
seg000:A57E		    xor	    ah,	ah
seg000:A580		    shl	    ax,	1
seg000:A582		    shl	    ax,	1
seg000:A584		    shl	    ax,	1
seg000:A586		    shl	    ax,	1
seg000:A588		    shl	    ax,	1
seg000:A58A		    shl	    ax,	1
seg000:A58C		    mov	    dx,	ax
seg000:A58E		    shl	    ax,	1
seg000:A590		    add	    ax,	dx
seg000:A592		    add	    ax,	2E30h
seg000:A595		    mov	    [si+13h], ax
seg000:A598		    retn
seg000:A598 sub_A4F8	    endp
seg000:A598
seg000:A599
seg000:A599 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A599
seg000:A599
seg000:A599 sub_A599	    proc near		    ; CODE XREF: start:loc_8EF6p
seg000:A599		    call    sub_A643
seg000:A59C		    call    sub_865C
seg000:A59F		    mov	    word_7BD3, 8930h
seg000:A5A5		    mov	    byte_8DDA, 1
seg000:A5AA		    test    byte_7C03, 0FFh
seg000:A5AF		    jnz	    short loc_A5C1
seg000:A5B1		    mov	    byte_8DDA, 3
seg000:A5B6		    test    byte_7C04, 0FFh
seg000:A5BB		    jnz	    short loc_A5C1
seg000:A5BD		    inc	    byte_8DDA
seg000:A5C1
seg000:A5C1 loc_A5C1:				    ; CODE XREF: sub_A599+16j
seg000:A5C1					    ; sub_A599+22j
seg000:A5C1		    call    sub_A5E2
seg000:A5C4		    xor	    ax,	ax
seg000:A5C6		    mov	    word_8E30, ax
seg000:A5C9		    mov	    di,	607Ah
seg000:A5CC		    mov	    cx,	19h
seg000:A5CF		    rep	stosb
seg000:A5D1		    mov	    di,	8E0Ch
seg000:A5D4		    mov	    si,	6056h
seg000:A5D7		    mov	    cx,	12h
seg000:A5DA		    rep	movsw
seg000:A5DC		    mov	    byte_8DD4, 1
seg000:A5E1		    retn
seg000:A5E1 sub_A599	    endp
seg000:A5E1
seg000:A5E2
seg000:A5E2 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A5E2
seg000:A5E2
seg000:A5E2 sub_A5E2	    proc near		    ; CODE XREF: sub_A599:loc_A5C1p
seg000:A5E2		    mov	    byte_894E, 0
seg000:A5E7		    mov	    al,	0FFh
seg000:A5E9		    test    byte_8DD9, 0FFh
seg000:A5EE		    jz	    short loc_A5F1
seg000:A5F0		    inc	    ax
seg000:A5F1
seg000:A5F1 loc_A5F1:				    ; CODE XREF: sub_A5E2+Cj
seg000:A5F1		    mov	    byte_8983, al
seg000:A5F4		    mov	    bx,	894Eh
seg000:A5F7		    call    sub_A5FD
seg000:A5FA		    mov	    bx,	8983h
seg000:A5FA sub_A5E2	    endp
seg000:A5FA
seg000:A5FD
seg000:A5FD ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A5FD
seg000:A5FD
seg000:A5FD sub_A5FD	    proc near		    ; CODE XREF: sub_A5E2+15p
seg000:A5FD		    mov	    cx,	5
seg000:A600		    mov	    al,	30h ; '0'
seg000:A602		    lea	    di,	[bx+5]
seg000:A605		    rep	stosb
seg000:A607		    xor	    ax,	ax
seg000:A609		    mov	    [bx+3], ax
seg000:A60C		    mov	    byte ptr [bx+26h], 0Ah
seg000:A610		    mov	    [bx+28h], al
seg000:A613		    mov	    [bx+2Dh], al
seg000:A616		    mov	    [bx+2Ch], al
seg000:A619		    mov	    [bx+31h], al
seg000:A61C		    retn
seg000:A61C sub_A5FD	    endp
seg000:A61C
seg000:A61D
seg000:A61D ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A61D
seg000:A61D
seg000:A61D sub_A61D	    proc near		    ; CODE XREF: start+24p
seg000:A61D
seg000:A61D ; FUNCTION CHUNK AT	seg000:927B SIZE 0000000C BYTES
seg000:A61D
seg000:A61D		    call    sub_97
seg000:A620		    xor	    ax,	ax
seg000:A622		    mov	    word_8DCF, ax
seg000:A625		    mov	    byte_8DD3, al
seg000:A628		    mov	    di,	8C2Bh
seg000:A62B		    mov	    cx,	28h ; '('
seg000:A62E		    rep	stosw
seg000:A630		    mov	    si,	8A4Dh
seg000:A633		    mov	    cx,	0Eh
seg000:A636
seg000:A636 loc_A636:				    ; CODE XREF: sub_A61D+21j
seg000:A636		    push    cx
seg000:A637		    call    sub_916B
seg000:A63A		    pop	    cx
seg000:A63B		    add	    si,	11h
seg000:A63E		    loop    loc_A636
seg000:A640		    jmp	    loc_927B
seg000:A640 sub_A61D	    endp
seg000:A640
seg000:A643
seg000:A643 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A643
seg000:A643
seg000:A643 sub_A643	    proc near		    ; CODE XREF: sub_A599p
seg000:A643		    mov	    ax,	0ADA9h
seg000:A646		    mov	    dx,	cs
seg000:A648		    shr	    ax,	1
seg000:A64A		    shr	    ax,	1
seg000:A64C		    shr	    ax,	1
seg000:A64E		    shr	    ax,	1
seg000:A650		    inc	    ax
seg000:A651		    add	    dx,	ax
seg000:A653		    mov	    word_8936, dx
seg000:A657		    mov	    word_8948, dx
seg000:A65B		    add	    dx,	5A0h
seg000:A65F		    mov	    word_8938, dx
seg000:A663		    mov	    word_893E, dx
seg000:A667		    mov	    word_894C, dx
seg000:A66B		    add	    dx,	5A0h
seg000:A66F		    mov	    word_893A, dx
seg000:A673		    mov	    word_8940, dx
seg000:A677		    mov	    word_8942, dx
seg000:A67B		    mov	    word_8944, dx
seg000:A67F		    mov	    word_8946, dx
seg000:A683		    retn
seg000:A683 sub_A643	    endp
seg000:A683
seg000:A684 ; ───────────────────────────────────────────────────────────────────────────
seg000:A684		    mov	    si,	894Eh
seg000:A687		    test    byte_894E, 0FFh
seg000:A68C		    js	    short loc_A691
seg000:A68E		    call    sub_A69C
seg000:A691
seg000:A691 loc_A691:				    ; CODE XREF: seg000:A68Cj
seg000:A691		    mov	    si,	8983h
seg000:A694		    test    byte_8983, 0FFh
seg000:A699		    jns	    short sub_A69C
seg000:A69B		    retn
seg000:A69C
seg000:A69C ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A69C
seg000:A69C
seg000:A69C sub_A69C	    proc near		    ; CODE XREF: seg000:A68Ep
seg000:A69C					    ; seg000:A699j
seg000:A69C		    test    byte ptr [si+2Dh], 0FFh
seg000:A6A0		    jz	    short loc_A6B0
seg000:A6A2		    mov	    ax,	word_8936
seg000:A6A5		    xchg    ax,	word_8938
seg000:A6A9		    xchg    ax,	word_893A
seg000:A6AD		    mov	    word_8936, ax
seg000:A6B0
seg000:A6B0 loc_A6B0:				    ; CODE XREF: sub_A69C+4j
seg000:A6B0		    mov	    bp,	word_8DB2
seg000:A6B4		    mov	    dx,	word_8DB0
seg000:A6B8		    mov	    di,	[si+0Bh]
seg000:A6BB		    push    si
seg000:A6BC		    mov	    si,	[si+0Dh]
seg000:A6BF
seg000:A6BF loc_A6BF:				    ; CODE XREF: sub_A69C+66j
seg000:A6BF		    mov	    ax,	si
seg000:A6C1		    mov	    bx,	di
seg000:A6C3		    mov	    cx,	bp
seg000:A6C5		    mov	    ds,	cs:word_8936
seg000:A6CA		    assume ds:nothing
seg000:A6CA		    mov	    es,	word ptr cs:byte_8719+217h
seg000:A6CF		    assume es:nothing
seg000:A6CF		    rep	movsw
seg000:A6D1		    mov	    si,	ax
seg000:A6D3		    mov	    di,	bx
seg000:A6D5		    mov	    cx,	bp
seg000:A6D7		    mov	    ds,	cs:word_8938
seg000:A6DC		    mov	    es,	cs:word_8932
seg000:A6E1		    assume es:nothing
seg000:A6E1		    rep	movsw
seg000:A6E3		    mov	    si,	ax
seg000:A6E5		    mov	    di,	bx
seg000:A6E7		    mov	    cx,	bp
seg000:A6E9		    mov	    ds,	cs:word_893A
seg000:A6EE		    mov	    es,	cs:word_8934
seg000:A6F3		    assume es:nothing
seg000:A6F3		    rep	movsw
seg000:A6F5		    mov	    ax,	cs
seg000:A6F7		    mov	    ds,	ax
seg000:A6F9		    assume ds:seg000
seg000:A6F9		    add	    di,	word_8DB4
seg000:A6FD		    add	    si,	word_8DB6
seg000:A701		    dec	    dx
seg000:A702		    jnz	    short loc_A6BF
seg000:A704		    mov	    ax,	cs
seg000:A706		    mov	    es,	ax
seg000:A708		    assume es:seg000
seg000:A708		    pop	    si
seg000:A709		    test    byte ptr [si+2Dh], 0FFh
seg000:A70D		    jz	    short locret_A720
seg000:A70F		    mov	    ax,	word_893A
seg000:A712		    xchg    ax,	word_8938
seg000:A716		    xchg    ax,	word_8936
seg000:A71A		    mov	    word_893A, ax
seg000:A71D		    dec	    byte ptr [si+2Dh]
seg000:A720
seg000:A720 locret_A720:			    ; CODE XREF: sub_A69C+71j
seg000:A720		    retn
seg000:A720 sub_A69C	    endp
seg000:A720
seg000:A721
seg000:A721 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A721
seg000:A721
seg000:A721 sub_A721	    proc near		    ; CODE XREF: start:loc_8EF9p
seg000:A721		    xor	    ax,	ax
seg000:A723		    mov	    word_8DFA, ax
seg000:A726		    mov	    byte_8DDC, al
seg000:A729		    mov	    byte_8DDF, al
seg000:A72C		    mov	    byte_8DE0, al
seg000:A72F		    mov	    byte_8DE1, 1
seg000:A734		    mov	    al,	byte_8DDD
seg000:A737		    mov	    bx,	6079h
seg000:A73A		    xlat
seg000:A73B		    mov	    byte_8DDE, al
seg000:A73E		    mov	    bl,	al
seg000:A740		    cmp	    byte_8DDD, 1
seg000:A745		    jnz	    short loc_A753
seg000:A747		    xor	    al,	al
seg000:A749		    mov	    byte_8DDE, al
seg000:A74C		    shl	    bl,	1
seg000:A74E		    shl	    bl,	1
seg000:A750		    and	    bl,	0Ch
seg000:A753
seg000:A753 loc_A753:				    ; CODE XREF: sub_A721+24j
seg000:A753		    shr	    al,	1
seg000:A755		    rcl	    byte_8DDF, 1
seg000:A759		    shr	    al,	1
seg000:A75B		    rcl	    byte_8DE0, 1
seg000:A75F		    xor	    ah,	ah
seg000:A761		    mov	    al,	bl
seg000:A763		    shr	    al,	1
seg000:A765		    shr	    al,	1
seg000:A767		    mov	    si,	ax
seg000:A769		    shl	    si,	1
seg000:A76B		    mov	    si,	[si+7963h]
seg000:A76F		    mov	    al,	byte_8DDD
seg000:A772		    dec	    ax
seg000:A773		    shl	    ax,	1
seg000:A775		    mov	    bx,	ax
seg000:A777		    shl	    ax,	1
seg000:A779		    add	    si,	ax
seg000:A77B		    add	    si,	bx
seg000:A77D		    lodsw
seg000:A77E		    mov	    word_8DE2, ax
seg000:A781		    lodsw
seg000:A782		    mov	    word_8DE4, ax
seg000:A785		    lodsw
seg000:A786		    mov	    word_8DE6, ax
seg000:A789		    mov	    bl,	byte_8DDD
seg000:A78D		    xor	    bh,	bh
seg000:A78F		    shl	    bx,	1
seg000:A791		    mov	    ax,	[bx+792Fh]
seg000:A795		    mov	    word_8DE8, ax
seg000:A798		    mov	    ax,	[bx+682Ch]
seg000:A79C		    mov	    word_8DEA, ax
seg000:A79F		    mov	    ax,	[bx+6456h]
seg000:A7A3		    mov	    word_8DEC, ax
seg000:A7A6		    mov	    ax,	[bx+661Eh]
seg000:A7AA		    mov	    word_8DEE, ax
seg000:A7AD		    mov	    ax,	[bx+6726h]
seg000:A7B1		    mov	    word_8DF0, ax
seg000:A7B4		    mov	    si,	[bx+584Eh]
seg000:A7B8		    call    sub_A964
seg000:A7BB		    call    sub_9B4F
seg000:A7BE		    call    sub_AAF0
seg000:A7C1		    mov	    word_8DFC, si
seg000:A7C5		    call    sub_ABB2
seg000:A7C8		    mov	    bp,	8D1Eh
seg000:A7CB		    call    sub_85F0
seg000:A7CE		    mov	    si,	word_8DEA
seg000:A7D2		    mov	    ax,	word_8DE4
seg000:A7D5		    mov	    di,	610Ah
seg000:A7D8		    call    sub_A93F
seg000:A7DB		    mov	    word_8DF2, cx
seg000:A7DF		    mov	    si,	610Ah
seg000:A7E2		    mov	    byte_8E08, 43h ; 'C'
seg000:A7E7		    inc	    byte_8E0B
seg000:A7EB		    call    sub_A90C
seg000:A7EE		    dec	    byte_8E0B
seg000:A7F2		    mov	    si,	word_8DEC
seg000:A7F6		    mov	    ax,	word_8DE6
seg000:A7F9		    mov	    di,	610Ah
seg000:A7FC		    call    sub_A93F
seg000:A7FF		    mov	    word_8DF8, cx
seg000:A803		    mov	    si,	610Ah
seg000:A806		    mov	    di,	60E9h
seg000:A809		    rep	movsw
seg000:A80B		    mov	    si,	word_8DEE
seg000:A80F		    mov	    ax,	word_8DE2
seg000:A812		    mov	    di,	610Ah
seg000:A815		    call    sub_A93F
seg000:A818		    mov	    word_8DF6, cx
seg000:A81C		    mov	    word_8DF4, cx
seg000:A820		    mov	    si,	610Ah
seg000:A823		    mov	    byte_8E08, 42h ; 'B'
seg000:A828		    call    sub_A90C
seg000:A82B		    mov	    si,	word_8DF0
seg000:A82F		    mov	    ax,	0
seg000:A832		    mov	    cx,	word_8DF6
seg000:A836
seg000:A836 loc_A836:				    ; CODE XREF: sub_A721+118j
seg000:A836		    stc
seg000:A837		    rcl	    ax,	1
seg000:A839		    loop    loc_A836
seg000:A83B		    mov	    di,	610Ah
seg000:A83E		    call    sub_A93F
seg000:A841		    mov	    si,	610Ah
seg000:A844		    mov	    byte_8E08, 41h ; 'A'
seg000:A849		    call    sub_A90C
seg000:A84C		    mov	    di,	6094h
seg000:A84F		    mov	    si,	60BEh
seg000:A852		    mov	    bx,	607Bh
seg000:A855		    mov	    cx,	15h
seg000:A858
seg000:A858 loc_A858:				    ; CODE XREF: sub_A721:loc_A875j
seg000:A858		    mov	    al,	[bx]
seg000:A85A		    inc	    bx
seg000:A85B		    or	    al,	al
seg000:A85D		    js	    short loc_A86B
seg000:A85F		    lodsb
seg000:A860		    call    sub_AAD0
seg000:A863		    stosb
seg000:A864		    lodsb
seg000:A865		    call    sub_AAE0
seg000:A868		    stosb
seg000:A869		    jmp	    short loc_A875
seg000:A86B ; ───────────────────────────────────────────────────────────────────────────
seg000:A86B
seg000:A86B loc_A86B:				    ; CODE XREF: sub_A721+13Cj
seg000:A86B		    mov	    word ptr [di], 0FFFFh
seg000:A86F		    add	    di,	2
seg000:A872		    add	    si,	2
seg000:A875
seg000:A875 loc_A875:				    ; CODE XREF: sub_A721+148j
seg000:A875		    loop    loc_A858
seg000:A877		    mov	    bx,	0AD99h
seg000:A87A		    call    sub_AB83
seg000:A87D		    xor	    di,	di
seg000:A87F		    mov	    si,	894Eh
seg000:A882		    test    byte_894E, 0FFh
seg000:A887		    js	    short loc_A88C
seg000:A889		    call    sub_A89A
seg000:A88C
seg000:A88C loc_A88C:				    ; CODE XREF: sub_A721+166j
seg000:A88C		    mov	    si,	8983h
seg000:A88F		    test    byte_8983, 0FFh
seg000:A894		    jns	    short loc_A897
seg000:A896		    retn
seg000:A897 ; ───────────────────────────────────────────────────────────────────────────
seg000:A897
seg000:A897 loc_A897:				    ; CODE XREF: sub_A721+173j
seg000:A897		    mov	    di,	2
seg000:A897 sub_A721	    endp
seg000:A897
seg000:A89A
seg000:A89A ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A89A
seg000:A89A
seg000:A89A sub_A89A	    proc near		    ; CODE XREF: sub_A721+168p
seg000:A89A		    mov	    bl,	byte_8DDD
seg000:A89E		    xor	    bh,	bh
seg000:A8A0		    shl	    bx,	1
seg000:A8A2		    shl	    bx,	1
seg000:A8A4		    mov	    ax,	[bx+di+6992h]
seg000:A8A8		    call    sub_AAD0
seg000:A8AB		    mov	    [si+19h], al
seg000:A8AE		    shl	    al,	1
seg000:A8B0		    mov	    [si+1Dh], al
seg000:A8B3		    mov	    [si+1Fh], al
seg000:A8B6		    sub	    al,	8
seg000:A8B8		    jns	    short loc_A8BC
seg000:A8BA		    xor	    al,	al
seg000:A8BC
seg000:A8BC loc_A8BC:				    ; CODE XREF: sub_A89A+1Ej
seg000:A8BC		    cmp	    al,	byte_8DAA
seg000:A8C0		    jbe	    short loc_A8C5
seg000:A8C2		    mov	    al,	byte_8DAA
seg000:A8C5
seg000:A8C5 loc_A8C5:				    ; CODE XREF: sub_A89A+26j
seg000:A8C5		    mov	    [si+17h], al
seg000:A8C8		    mov	    al,	ah
seg000:A8CA		    call    sub_AAE0
seg000:A8CD		    mov	    [si+1Ah], al
seg000:A8D0		    shl	    al,	1
seg000:A8D2		    mov	    [si+1Eh], al
seg000:A8D5		    mov	    [si+20h], al
seg000:A8D8		    sub	    al,	4
seg000:A8DA		    jns	    short loc_A8DE
seg000:A8DC		    xor	    al,	al
seg000:A8DE
seg000:A8DE loc_A8DE:				    ; CODE XREF: sub_A89A+40j
seg000:A8DE		    cmp	    al,	byte_8DAB
seg000:A8E2		    jbe	    short loc_A8E7
seg000:A8E4		    mov	    al,	byte_8DAB
seg000:A8E7
seg000:A8E7 loc_A8E7:				    ; CODE XREF: sub_A89A+48j
seg000:A8E7		    mov	    [si+18h], al
seg000:A8EA		    xor	    ax,	ax
seg000:A8EC		    mov	    [si+21h], ax
seg000:A8EF		    mov	    [si+23h], ax
seg000:A8F2		    mov	    byte ptr [si+2Eh], 0
seg000:A8F6		    mov	    [si+29h], al
seg000:A8F9		    mov	    [si+27h], al
seg000:A8FC		    call    sub_A4F8
seg000:A8FF		    mov	    ax,	[si+0Fh]
seg000:A902		    mov	    [si+11h], ax
seg000:A905		    mov	    ax,	[si+13h]
seg000:A908		    mov	    [si+15h], ax
seg000:A90B		    retn
seg000:A90B sub_A89A	    endp
seg000:A90B
seg000:A90C
seg000:A90C ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A90C
seg000:A90C
seg000:A90C sub_A90C	    proc near		    ; CODE XREF: sub_A721+CAp
seg000:A90C					    ; sub_A721+107p ...
seg000:A90C		    mov	    di,	5CC0h
seg000:A90F		    lodsb
seg000:A910		    xor	    ah,	ah
seg000:A912		    add	    di,	ax
seg000:A914		    lodsb
seg000:A915		    mul	    byte_8E01
seg000:A919		    add	    di,	ax
seg000:A91B		    mov	    ah,	byte_8E08
seg000:A91F		    test    byte_8E0B, 0FFh
seg000:A924		    jz	    short loc_A93A
seg000:A926		    push    si
seg000:A927		    push    di
seg000:A928		    push    cx
seg000:A929		    call    sub_8458
seg000:A92C		    shr	    dx,	1
seg000:A92E		    and	    dx,	3
seg000:A932		    add	    dl,	43h ; 'C'
seg000:A935		    pop	    cx
seg000:A936		    pop	    di
seg000:A937		    pop	    si
seg000:A938		    mov	    ah,	dl
seg000:A93A
seg000:A93A loc_A93A:				    ; CODE XREF: sub_A90C+18j
seg000:A93A		    mov	    [di], ah
seg000:A93C		    loop    sub_A90C
seg000:A93E		    retn
seg000:A93E sub_A90C	    endp
seg000:A93E
seg000:A93F
seg000:A93F ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A93F
seg000:A93F
seg000:A93F sub_A93F	    proc near		    ; CODE XREF: sub_A721+B7p
seg000:A93F					    ; sub_A721+DBp ...
seg000:A93F		    xor	    cx,	cx
seg000:A941		    push    di
seg000:A942
seg000:A942 loc_A942:				    ; CODE XREF: sub_A93F+1Ej
seg000:A942		    shr	    ax,	1
seg000:A944		    jnb	    short loc_A95A
seg000:A946		    push    ax
seg000:A947		    mov	    al,	[si]
seg000:A949		    call    sub_AAD0
seg000:A94C		    stosb
seg000:A94D		    mov	    al,	[si+1]
seg000:A950		    call    sub_AAE0
seg000:A953		    stosb
seg000:A954		    pop	    ax
seg000:A955		    inc	    cx
seg000:A956		    or	    ax,	ax
seg000:A958		    jz	    short loc_A95F
seg000:A95A
seg000:A95A loc_A95A:				    ; CODE XREF: sub_A93F+5j
seg000:A95A		    add	    si,	2
seg000:A95D		    jmp	    short loc_A942
seg000:A95F ; ───────────────────────────────────────────────────────────────────────────
seg000:A95F
seg000:A95F loc_A95F:				    ; CODE XREF: sub_A93F+19j
seg000:A95F		    pop	    si
seg000:A960		    mov	    [si-1], cl
seg000:A963		    retn
seg000:A963 sub_A93F	    endp
seg000:A963
seg000:A964
seg000:A964 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A964
seg000:A964
seg000:A964 sub_A964	    proc near		    ; CODE XREF: sub_A721+97p
seg000:A964		    mov	    dx,	si
seg000:A966		    mov	    al,	byte_8DDD
seg000:A969		    mov	    ah,	5
seg000:A96B		    mul	    ah
seg000:A96D		    mov	    si,	ax
seg000:A96F		    add	    si,	63D6h
seg000:A973		    xor	    ah,	ah
seg000:A975		    lodsb
seg000:A976		    mov	    byte_8E01, al
seg000:A979		    dec	    ax
seg000:A97A		    shl	    ax,	1
seg000:A97C		    shl	    ax,	1
seg000:A97E		    shl	    ax,	1
seg000:A980		    shl	    ax,	1
seg000:A982		    mov	    word_8E04, ax
seg000:A985		    xor	    ax,	ax
seg000:A987		    lodsb
seg000:A988		    mov	    byte_8E00, al
seg000:A98B		    lodsb
seg000:A98C		    mov	    byte_8DDB, al
seg000:A98F		    lodsb
seg000:A990		    test    byte_8DD9, 0FFh
seg000:A995		    jnz	    short loc_A99A
seg000:A997		    mov	    byte_8DDB, al
seg000:A99A
seg000:A99A loc_A99A:				    ; CODE XREF: sub_A964+31j
seg000:A99A		    lodsb
seg000:A99B		    mov	    byte_8DFE, al
seg000:A99E		    mov	    bl,	3
seg000:A9A0		    mov	    ah,	3
seg000:A9A2		    cmp	    al,	55h ; 'U'
seg000:A9A4		    jz	    short loc_A9BE
seg000:A9A6		    add	    bl,	2
seg000:A9A9		    cmp	    al,	58h ; 'X'
seg000:A9AB		    jz	    short loc_A9BE
seg000:A9AD		    add	    bl,	2
seg000:A9B0		    mov	    ah,	1
seg000:A9B2		    cmp	    al,	5Bh ; '['
seg000:A9B4		    jz	    short loc_A9BE
seg000:A9B6		    mov	    ah,	4
seg000:A9B8		    cmp	    al,	6Dh ; 'm'
seg000:A9BA		    jz	    short loc_A9BE
seg000:A9BC		    xor	    ah,	ah
seg000:A9BE
seg000:A9BE loc_A9BE:				    ; CODE XREF: sub_A964+40j
seg000:A9BE					    ; sub_A964+47j ...
seg000:A9BE		    mov	    byte_8E09, ah
seg000:A9C2		    mov	    byte_8DFF, bl
seg000:A9C6		    mov	    si,	dx
seg000:A9C8		    mov	    al,	byte_8E00
seg000:A9CB		    mul	    byte_8E01
seg000:A9CF		    mov	    word_8E02, ax
seg000:A9D2		    xor	    cx,	cx
seg000:A9D4		    xor	    ah,	ah
seg000:A9D6
seg000:A9D6 loc_A9D6:				    ; CODE XREF: sub_A964+8Cj
seg000:A9D6		    xor	    al,	al
seg000:A9D8
seg000:A9D8 loc_A9D8:				    ; CODE XREF: sub_A964+84j
seg000:A9D8		    push    ax
seg000:A9D9		    call    sub_A9F3
seg000:A9DC		    push    dx
seg000:A9DD		    call    sub_A9FF
seg000:A9E0		    pop	    dx
seg000:A9E1		    pop	    ax
seg000:A9E2		    inc	    cx
seg000:A9E3		    inc	    ax
seg000:A9E4		    cmp	    al,	byte_8E01
seg000:A9E8		    jb	    short loc_A9D8
seg000:A9EA		    inc	    ah
seg000:A9EC		    cmp	    ah,	byte_8E00
seg000:A9F0		    jb	    short loc_A9D6
seg000:A9F2		    retn
seg000:A9F2 sub_A964	    endp
seg000:A9F2
seg000:A9F3
seg000:A9F3 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A9F3
seg000:A9F3
seg000:A9F3 sub_A9F3	    proc near		    ; CODE XREF: sub_A964+75p
seg000:A9F3		    test    cx,	7
seg000:A9F7		    jnz	    short loc_A9FC
seg000:A9F9		    mov	    dl,	[si]
seg000:A9FB		    inc	    si
seg000:A9FC
seg000:A9FC loc_A9FC:				    ; CODE XREF: sub_A9F3+4j
seg000:A9FC		    shl	    dl,	1
seg000:A9FE		    retn
seg000:A9FE sub_A9F3	    endp
seg000:A9FE
seg000:A9FF
seg000:A9FF ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:A9FF
seg000:A9FF
seg000:A9FF sub_A9FF	    proc near		    ; CODE XREF: sub_A964+79p
seg000:A9FF		    pushf
seg000:AA00		    call    sub_AAD0
seg000:AA03		    mov	    bl,	al
seg000:AA05		    mov	    al,	ah
seg000:AA07		    call    sub_AAE0
seg000:AA0A		    mul	    byte_8E01
seg000:AA0E		    xor	    bh,	bh
seg000:AA10		    add	    bx,	ax
seg000:AA12		    mov	    ah,	40h ; '@'
seg000:AA14		    popf
seg000:AA15		    jnb	    short loc_AA41
seg000:AA17		    push    cx
seg000:AA18		    push    bx
seg000:AA19		    call    sub_8458
seg000:AA1C		    cmp	    byte_8E09, 0
seg000:AA21		    jnz	    short loc_AA2E
seg000:AA23		    mov	    ah,	72h ; 'r'
seg000:AA25		    and	    dh,	6
seg000:AA28		    jnz	    short loc_AA3F
seg000:AA2A		    mov	    ah,	54h ; 'T'
seg000:AA2C		    jmp	    short loc_AA3F
seg000:AA2E ; ───────────────────────────────────────────────────────────────────────────
seg000:AA2E
seg000:AA2E loc_AA2E:				    ; CODE XREF: sub_A9FF+22j
seg000:AA2E		    shr	    dx,	1
seg000:AA30		    shr	    dx,	1
seg000:AA32		    mov	    ax,	dx
seg000:AA34		    and	    ax,	1Fh
seg000:AA37		    div	    byte_8E09
seg000:AA3B		    add	    ah,	byte_8DFE
seg000:AA3F
seg000:AA3F loc_AA3F:				    ; CODE XREF: sub_A9FF+29j
seg000:AA3F					    ; sub_A9FF+2Dj
seg000:AA3F		    pop	    bx
seg000:AA40		    pop	    cx
seg000:AA41
seg000:AA41 loc_AA41:				    ; CODE XREF: sub_A9FF+16j
seg000:AA41		    mov	    [bx+5CC0h],	ah
seg000:AA45		    retn
seg000:AA45 sub_A9FF	    endp
seg000:AA45
seg000:AA46
seg000:AA46 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:AA46
seg000:AA46
seg000:AA46 sub_AA46	    proc near		    ; CODE XREF: sub_AAF0+32p
seg000:AA46		    test    byte_8DE0, 0FFh
seg000:AA4B		    jz	    short locret_AA68
seg000:AA4D		    call    sub_AAD0
seg000:AA50		    mov	    ah,	byte_8E08
seg000:AA54		    cmp	    ah,	71h ; 'q'
seg000:AA57		    jz	    short loc_AA69
seg000:AA59		    cmp	    ah,	5Eh ; '^'
seg000:AA5C		    jz	    short loc_AA6B
seg000:AA5E		    cmp	    ah,	68h ; 'h'
seg000:AA61		    jz	    short loc_AA6B
seg000:AA63		    cmp	    ah,	62h ; 'b'
seg000:AA66		    jz	    short loc_AA6D
seg000:AA68
seg000:AA68 locret_AA68:			    ; CODE XREF: sub_AA46+5j
seg000:AA68		    retn
seg000:AA69 ; ───────────────────────────────────────────────────────────────────────────
seg000:AA69
seg000:AA69 loc_AA69:				    ; CODE XREF: sub_AA46+11j
seg000:AA69		    dec	    al
seg000:AA6B
seg000:AA6B loc_AA6B:				    ; CODE XREF: sub_AA46+16j
seg000:AA6B					    ; sub_AA46+1Bj
seg000:AA6B		    dec	    al
seg000:AA6D
seg000:AA6D loc_AA6D:				    ; CODE XREF: sub_AA46+20j
seg000:AA6D		    dec	    al
seg000:AA6F		    retn
seg000:AA6F sub_AA46	    endp
seg000:AA6F
seg000:AA70
seg000:AA70 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:AA70
seg000:AA70
seg000:AA70 sub_AA70	    proc near		    ; CODE XREF: sub_AAF0+3Ap
seg000:AA70		    test    byte_8DDF, 0FFh
seg000:AA75		    jz	    short locret_AA97
seg000:AA77		    call    sub_AAE0
seg000:AA7A		    mov	    ah,	byte_8E08
seg000:AA7E		    cmp	    ah,	5Eh ; '^'
seg000:AA81		    jz	    short loc_AA98
seg000:AA83		    cmp	    ah,	68h ; 'h'
seg000:AA86		    jz	    short loc_AA98
seg000:AA88		    cmp	    ah,	71h ; 'q'
seg000:AA8B		    jz	    short loc_AA98
seg000:AA8D		    cmp	    ah,	62h ; 'b'
seg000:AA90		    jz	    short loc_AA9A
seg000:AA92		    cmp	    ah,	66h ; 'f'
seg000:AA95		    jz	    short loc_AA9A
seg000:AA97
seg000:AA97 locret_AA97:			    ; CODE XREF: sub_AA70+5j
seg000:AA97		    retn
seg000:AA98 ; ───────────────────────────────────────────────────────────────────────────
seg000:AA98
seg000:AA98 loc_AA98:				    ; CODE XREF: sub_AA70+11j
seg000:AA98					    ; sub_AA70+16j ...
seg000:AA98		    dec	    al
seg000:AA9A
seg000:AA9A loc_AA9A:				    ; CODE XREF: sub_AA70+20j
seg000:AA9A					    ; sub_AA70+25j
seg000:AA9A		    dec	    al
seg000:AA9C		    retn
seg000:AA9C sub_AA70	    endp
seg000:AA9C
seg000:AA9D
seg000:AA9D ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:AA9D
seg000:AA9D
seg000:AA9D sub_AA9D	    proc near		    ; CODE XREF: sub_AAF0+Ep
seg000:AA9D		    test    byte_8DE0, 0FFh
seg000:AAA2		    jz	    short loc_AAB6
seg000:AAA4		    cmp	    al,	51h ; 'Q'
seg000:AAA6		    jnz	    short loc_AAAD
seg000:AAA8		    mov	    byte_8E08, 53h ; 'S'
seg000:AAAD
seg000:AAAD loc_AAAD:				    ; CODE XREF: sub_AA9D+9j
seg000:AAAD		    cmp	    al,	53h ; 'S'
seg000:AAAF		    jnz	    short loc_AAB6
seg000:AAB1		    mov	    byte_8E08, 51h ; 'Q'
seg000:AAB6
seg000:AAB6 loc_AAB6:				    ; CODE XREF: sub_AA9D+5j
seg000:AAB6					    ; sub_AA9D+12j
seg000:AAB6		    test    byte_8DDF, 0FFh
seg000:AABB		    jz	    short locret_AACF
seg000:AABD		    cmp	    al,	52h ; 'R'
seg000:AABF		    jnz	    short loc_AAC6
seg000:AAC1		    mov	    byte_8E08, 50h ; 'P'
seg000:AAC6
seg000:AAC6 loc_AAC6:				    ; CODE XREF: sub_AA9D+22j
seg000:AAC6		    cmp	    al,	50h ; 'P'
seg000:AAC8		    jnz	    short locret_AACF
seg000:AACA		    mov	    byte_8E08, 52h ; 'R'
seg000:AACF
seg000:AACF locret_AACF:			    ; CODE XREF: sub_AA9D+1Ej
seg000:AACF					    ; sub_AA9D+2Bj
seg000:AACF		    retn
seg000:AACF sub_AA9D	    endp
seg000:AACF
seg000:AAD0
seg000:AAD0 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:AAD0
seg000:AAD0
seg000:AAD0 sub_AAD0	    proc near		    ; CODE XREF: sub_A721+13Fp
seg000:AAD0					    ; sub_A89A+Ep ...
seg000:AAD0		    test    byte_8DE0, 0FFh
seg000:AAD5		    jz	    short locret_AADF
seg000:AAD7		    sub	    al,	byte_8E01
seg000:AADB		    inc	    al
seg000:AADD		    neg	    al
seg000:AADF
seg000:AADF locret_AADF:			    ; CODE XREF: sub_AAD0+5j
seg000:AADF		    retn
seg000:AADF sub_AAD0	    endp
seg000:AADF
seg000:AAE0
seg000:AAE0 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:AAE0
seg000:AAE0
seg000:AAE0 sub_AAE0	    proc near		    ; CODE XREF: sub_A721+144p
seg000:AAE0					    ; sub_A89A+30p ...
seg000:AAE0		    test    byte_8DDF, 0FFh
seg000:AAE5		    jz	    short locret_AAEF
seg000:AAE7		    sub	    al,	byte_8E00
seg000:AAEB		    inc	    al
seg000:AAED		    neg	    al
seg000:AAEF
seg000:AAEF locret_AAEF:			    ; CODE XREF: sub_AAE0+5j
seg000:AAEF					    ; sub_AAF0+7j
seg000:AAEF		    retn
seg000:AAEF sub_AAE0	    endp
seg000:AAEF
seg000:AAF0
seg000:AAF0 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:AAF0
seg000:AAF0
seg000:AAF0 sub_AAF0	    proc near		    ; CODE XREF: sub_A721+9Dp
seg000:AAF0		    mov	    si,	word_8DE8
seg000:AAF4
seg000:AAF4 loc_AAF4:				    ; CODE XREF: sub_AAF0+13j
seg000:AAF4					    ; sub_AAF0+1Aj ...
seg000:AAF4		    lodsb
seg000:AAF5		    cmp	    al,	40h ; '@'
seg000:AAF7		    jz	    short locret_AAEF
seg000:AAF9		    jb	    short loc_AB1F
seg000:AAFB		    mov	    byte_8E08, al
seg000:AAFE		    call    sub_AA9D
seg000:AB01		    cmp	    al,	73h ; 's'
seg000:AB03		    jnz	    short loc_AAF4
seg000:AB05		    cmp	    byte_8DDD, 1
seg000:AB0A		    jz	    short loc_AAF4
seg000:AB0C		    mov	    al,	[si]
seg000:AB0E		    call    sub_AAD0
seg000:AB11		    mov	    byte_8E06, al
seg000:AB14		    mov	    al,	[si+1]
seg000:AB17		    call    sub_AAE0
seg000:AB1A		    mov	    byte_8E07, al
seg000:AB1D		    jmp	    short loc_AAF4
seg000:AB1F ; ───────────────────────────────────────────────────────────────────────────
seg000:AB1F
seg000:AB1F loc_AB1F:				    ; CODE XREF: sub_AAF0+9j
seg000:AB1F		    mov	    di,	5CC0h
seg000:AB22		    call    sub_AA46
seg000:AB25		    xor	    ah,	ah
seg000:AB27		    add	    di,	ax
seg000:AB29		    lodsb
seg000:AB2A		    call    sub_AA70
seg000:AB2D		    mul	    byte_8E01
seg000:AB31		    add	    di,	ax
seg000:AB33		    mov	    al,	byte_8E08
seg000:AB36		    cmp	    al,	77h ; 'w'
seg000:AB38		    jnz	    short loc_AB44
seg000:AB3A		    call    sub_8458
seg000:AB3D		    and	    dh,	60h
seg000:AB40		    mov	    al,	40h ; '@'
seg000:AB42		    jnz	    short loc_AAF4
seg000:AB44
seg000:AB44 loc_AB44:				    ; CODE XREF: sub_AAF0+48j
seg000:AB44		    mov	    [di], al
seg000:AB46		    mov	    bx,	8E32h
seg000:AB49
seg000:AB49 loc_AB49:				    ; CODE XREF: sub_AAF0+68j
seg000:AB49		    mov	    al,	[bx]
seg000:AB4B		    or	    al,	al
seg000:AB4D		    jz	    short loc_AAF4
seg000:AB4F		    cmp	    al,	byte_8E08
seg000:AB53		    jz	    short loc_AB5A
seg000:AB55		    add	    bx,	3
seg000:AB58		    jmp	    short loc_AB49
seg000:AB5A ; ───────────────────────────────────────────────────────────────────────────
seg000:AB5A
seg000:AB5A loc_AB5A:				    ; CODE XREF: sub_AAF0+63j
seg000:AB5A		    mov	    bx,	[bx+1]
seg000:AB5D
seg000:AB5D loc_AB5D:				    ; CODE XREF: sub_AAF0+88j
seg000:AB5D		    mov	    dl,	[bx]
seg000:AB5F		    or	    dl,	dl
seg000:AB61		    jz	    short loc_AAF4
seg000:AB63		    xor	    ah,	ah
seg000:AB65		    mov	    al,	[bx+1]
seg000:AB68		    mov	    bp,	ax
seg000:AB6A		    mov	    al,	[bx+2]
seg000:AB6D		    mul	    byte_8E01
seg000:AB71		    add	    bp,	ax
seg000:AB73		    mov	    [bp+di], dl
seg000:AB75		    add	    bx,	3
seg000:AB78		    jmp	    short loc_AB5D
seg000:AB78 sub_AAF0	    endp
seg000:AB78
seg000:AB7A ; ───────────────────────────────────────────────────────────────────────────
seg000:AB7A ; START OF FUNCTION	CHUNK FOR sub_AB83
seg000:AB7A
seg000:AB7A loc_AB7A:				    ; CODE XREF: sub_AB83+8j
seg000:AB7A					    ; sub_AB83+24j
seg000:AB7A		    pop	    cx
seg000:AB7B		    cmp	    cx,	0AB83h
seg000:AB7F		    jz	    short loc_AB9C
seg000:AB81		    jmp	    cx
seg000:AB81 ; END OF FUNCTION CHUNK FOR	sub_AB83
seg000:AB83
seg000:AB83 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:AB83
seg000:AB83
seg000:AB83 sub_AB83	    proc near		    ; CODE XREF: sub_8458+9p
seg000:AB83					    ; sub_9438+3Fp ...
seg000:AB83
seg000:AB83 ; FUNCTION CHUNK AT	seg000:AB7A SIZE 00000009 BYTES
seg000:AB83
seg000:AB83		    mov	    cx,	[bx+0Ch]
seg000:AB86
seg000:AB86 loc_AB86:				    ; CODE XREF: sub_AB83+6j
seg000:AB86		    dec	    byte ptr [bx+0Eh]
seg000:AB89		    loopne  loc_AB86
seg000:AB8B		    jcxz    short loc_AB7A
seg000:AB8D		    push    cx
seg000:AB8E		    mov	    dx,	[bx+6]
seg000:AB91		    mov	    cx,	[bx+0Ah]
seg000:AB94		    sub	    cx,	[bx+8]
seg000:AB97		    shr	    cx,	1
seg000:AB99
seg000:AB99 loc_AB99:				    ; CODE XREF: sub_AB83+2Cj
seg000:AB99		    mov	    si,	[bx+8]
seg000:AB9C
seg000:AB9C loc_AB9C:				    ; CODE XREF: sub_AB83-4j
seg000:AB9C					    ; sub_AB83+1Ej
seg000:AB9C		    ror	    dx,	1
seg000:AB9E
seg000:AB9E loc_AB9E:				    ; DATA XREF: sub_AB83+26w
seg000:AB9E		    lodsw
seg000:AB9F		    add	    dx,	ax
seg000:ABA1		    loop    loc_AB9C
seg000:ABA3		    pop	    ax
seg000:ABA4		    sub	    dx,	[bx+4]
seg000:ABA7		    jz	    short loc_AB7A
seg000:ABA9		    mov	    word ptr loc_AB9E, 0ABh ; '½'
seg000:ABAF		    jmp	    short loc_AB99
seg000:ABAF sub_AB83	    endp
seg000:ABAF
seg000:ABB1 ; ───────────────────────────────────────────────────────────────────────────
seg000:ABB1		    retn
seg000:ABB2
seg000:ABB2 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:ABB2
seg000:ABB2
seg000:ABB2 sub_ABB2	    proc near		    ; CODE XREF: sub_A721+A4p
seg000:ABB2		    mov	    si,	8E0Ch
seg000:ABB5		    mov	    dl,	byte_8DDD
seg000:ABB9		    mov	    dh,	byte_8DDE
seg000:ABBD		    mov	    cx,	9
seg000:ABC0		    mov	    bx,	word_8E30
seg000:ABC4		    add	    bl,	47h ; 'G'
seg000:ABC7		    cmp	    dl,	1
seg000:ABCA		    jnz	    short loc_ABCD
seg000:ABCC		    dec	    bx
seg000:ABCD
seg000:ABCD loc_ABCD:				    ; CODE XREF: sub_ABB2+18j
seg000:ABCD					    ; sub_ABB2+25j
seg000:ABCD		    cmp	    dx,	[si]
seg000:ABCF		    jnz	    short loc_ABD4
seg000:ABD1		    call    sub_ABDA
seg000:ABD4
seg000:ABD4 loc_ABD4:				    ; CODE XREF: sub_ABB2+1Dj
seg000:ABD4		    add	    si,	4
seg000:ABD7		    loop    loc_ABCD
seg000:ABD9		    retn
seg000:ABD9 sub_ABB2	    endp
seg000:ABD9
seg000:ABDA
seg000:ABDA ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:ABDA
seg000:ABDA
seg000:ABDA sub_ABDA	    proc near		    ; CODE XREF: sub_ABB2+1Fp
seg000:ABDA		    mov	    di,	5CC0h
seg000:ABDD		    mov	    al,	[si+2]
seg000:ABE0		    call    sub_AAD0
seg000:ABE3		    xor	    ah,	ah
seg000:ABE5		    add	    di,	ax
seg000:ABE7		    mov	    al,	[si+3]
seg000:ABEA		    call    sub_AAE0
seg000:ABED		    mul	    byte_8E01
seg000:ABF1		    add	    di,	ax
seg000:ABF3		    mov	    [di], bl
seg000:ABF5		    dec	    bx
seg000:ABF6		    retn
seg000:ABF6 sub_ABDA	    endp
seg000:ABF6
seg000:ABF7
seg000:ABF7 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:ABF7
seg000:ABF7
seg000:ABF7 sub_ABF7	    proc far		    ; CODE XREF: start+Dp
seg000:ABF7		    cli
seg000:ABF8		    xor	    ax,	ax
seg000:ABFA		    mov	    es,	ax
seg000:ABFC		    mov	    cx,	100h
seg000:ABFF		    xor	    di,	di
seg000:AC01		    cld
seg000:AC02
seg000:AC02 loc_AC02:				    ; CODE XREF: sub_ABF7+12j
seg000:AC02		    xor	    ax,	ax
seg000:AC04		    stosw
seg000:AC05		    mov	    ax,	40h ; '@'
seg000:AC08		    stosw
seg000:AC09		    loop    loc_AC02
seg000:AC0B		    mov	    ax,	8683h
seg000:AC0E		    mov	    di,	3ECh
seg000:AC11		    stosw
seg000:AC12		    mov	    ax,	40h ; '@'
seg000:AC15		    stosw
seg000:AC16		    pop	    bp
seg000:AC17		    xor	    di,	di
seg000:AC19		    xor	    si,	si
seg000:AC1B		    mov	    es,	ax
seg000:AC1D		    assume es:nothing
seg000:AC1D		    mov	    cx,	0ADA9h
seg000:AC20		    rep	movsb
seg000:AC22		    mov	    ds,	ax
seg000:AC24		    assume ds:nothing
seg000:AC24		    mov	    ss,	ax
seg000:AC26		    assume ss:nothing
seg000:AC26		    push    ax
seg000:AC27		    push    bp
seg000:AC28		    sti
seg000:AC29		    retf
seg000:AC29 sub_ABF7	    endp ; sp =	-2
seg000:AC29
seg000:AC2A
seg000:AC2A ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:AC2A
seg000:AC2A
seg000:AC2A sub_AC2A	    proc near		    ; CODE XREF: start+21p
seg000:AC2A		    mov	    si,	5CC0h
seg000:AC2D		    xor	    di,	di
seg000:AC2F		    mov	    dx,	ds:8E04h
seg000:AC33		    mov	    bx,	8936h
seg000:AC36		    xor	    ah,	ah
seg000:AC38
seg000:AC38 loc_AC38:				    ; CODE XREF: sub_AC2A+5Dj
seg000:AC38		    xor	    al,	al
seg000:AC3A
seg000:AC3A loc_AC3A:				    ; CODE XREF: sub_AC2A+4Cj
seg000:AC3A		    push    ax
seg000:AC3B		    lodsb
seg000:AC3C		    cmp	    al,	72h ; 'r'
seg000:AC3E		    jb	    short loc_AC62
seg000:AC40		    jnz	    short loc_AC44
seg000:AC42		    mov	    al,	40h ; '@'
seg000:AC44
seg000:AC44 loc_AC44:				    ; CODE XREF: sub_AC2A+16j
seg000:AC44		    cmp	    al,	78h ; 'x'
seg000:AC46		    jnz	    short loc_AC4A
seg000:AC48		    mov	    al,	40h ; '@'
seg000:AC4A
seg000:AC4A loc_AC4A:				    ; CODE XREF: sub_AC2A+1Cj
seg000:AC4A		    cmp	    al,	73h ; 's'
seg000:AC4C		    jnz	    short loc_AC50
seg000:AC4E		    mov	    al,	40h ; '@'
seg000:AC50
seg000:AC50 loc_AC50:				    ; CODE XREF: sub_AC2A+22j
seg000:AC50		    cmp	    al,	74h ; 't'
seg000:AC52		    jnz	    short loc_AC56
seg000:AC54		    mov	    al,	55h ; 'U'
seg000:AC56
seg000:AC56 loc_AC56:				    ; CODE XREF: sub_AC2A+28j
seg000:AC56		    cmp	    al,	75h ; 'u'
seg000:AC58		    jnz	    short loc_AC5C
seg000:AC5A		    mov	    al,	58h ; 'X'
seg000:AC5C
seg000:AC5C loc_AC5C:				    ; CODE XREF: sub_AC2A+2Ej
seg000:AC5C		    cmp	    al,	76h ; 'v'
seg000:AC5E		    jnz	    short loc_AC62
seg000:AC60		    mov	    al,	5Bh ; '['
seg000:AC62
seg000:AC62 loc_AC62:				    ; CODE XREF: sub_AC2A+14j
seg000:AC62					    ; sub_AC2A+34j
seg000:AC62		    cmp	    al,	71h ; 'q'
seg000:AC64		    jnz	    short loc_AC68
seg000:AC66		    mov	    al,	68h ; 'h'
seg000:AC68
seg000:AC68 loc_AC68:				    ; CODE XREF: sub_AC2A+3Aj
seg000:AC68		    push    si
seg000:AC69		    call    sub_AC8E
seg000:AC6C		    pop	    si
seg000:AC6D		    pop	    ax
seg000:AC6E		    add	    di,	10h
seg000:AC71		    inc	    ax
seg000:AC72		    cmp	    al,	ds:8E01h
seg000:AC76		    jb	    short loc_AC3A
seg000:AC78		    add	    di,	30h ; '0'
seg000:AC7B		    add	    di,	dx
seg000:AC7D		    add	    di,	dx
seg000:AC7F		    add	    di,	dx
seg000:AC81		    inc	    ah
seg000:AC83		    cmp	    ah,	ds:8E00h
seg000:AC87		    jb	    short loc_AC38
seg000:AC89		    mov	    ax,	cs
seg000:AC8B		    mov	    es,	ax
seg000:AC8D		    assume es:seg000
seg000:AC8D		    retn
seg000:AC8D sub_AC2A	    endp
seg000:AC8D
seg000:AC8E
seg000:AC8E ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:AC8E
seg000:AC8E
seg000:AC8E sub_AC8E	    proc near		    ; CODE XREF: sub_AC2A+3Fp
seg000:AC8E		    mov	    si,	970h
seg000:AC91		    sub	    al,	40h ; '@'
seg000:AC93		    xor	    ah,	ah
seg000:AC95		    shl	    ax,	1
seg000:AC97		    shl	    ax,	1
seg000:AC99		    shl	    ax,	1
seg000:AC9B		    shl	    ax,	1
seg000:AC9D		    shl	    ax,	1
seg000:AC9F		    shl	    ax,	1
seg000:ACA1		    add	    si,	ax
seg000:ACA3		    shl	    ax,	1
seg000:ACA5		    add	    si,	ax
seg000:ACA7
seg000:ACA7 loc_ACA7:				    ; CODE XREF: seg000:8F7Cj
seg000:ACA7					    ; seg000:8F8Dj ...
seg000:ACA7		    mov	    es,	word ptr [bx]
seg000:ACA9		    assume es:nothing
seg000:ACA9		    mov	    bp,	di
seg000:ACAB		    mov	    cx,	8
seg000:ACAE		    rep	movsw
seg000:ACB0		    add	    di,	dx
seg000:ACB2		    mov	    cx,	8
seg000:ACB5		    rep	movsw
seg000:ACB7		    add	    di,	dx
seg000:ACB9		    mov	    cx,	8
seg000:ACBC		    rep	movsw
seg000:ACBE		    add	    di,	dx
seg000:ACC0		    mov	    cx,	8
seg000:ACC3		    rep	movsw
seg000:ACC5		    mov	    di,	bp
seg000:ACC7		    mov	    es,	word ptr [bx+2]
seg000:ACCA		    mov	    cx,	8
seg000:ACCD		    rep	movsw
seg000:ACCF		    add	    di,	dx
seg000:ACD1		    mov	    cx,	8
seg000:ACD4		    rep	movsw
seg000:ACD6		    add	    di,	dx
seg000:ACD8		    mov	    cx,	8
seg000:ACDB		    rep	movsw
seg000:ACDD		    add	    di,	dx
seg000:ACDF		    mov	    cx,	8
seg000:ACE2		    rep	movsw
seg000:ACE4		    mov	    di,	bp
seg000:ACE6		    mov	    es,	word ptr [bx+4]
seg000:ACE9		    mov	    cx,	8
seg000:ACEC		    rep	movsw
seg000:ACEE		    add	    di,	dx
seg000:ACF0		    mov	    cx,	8
seg000:ACF3		    rep	movsw
seg000:ACF5		    add	    di,	dx
seg000:ACF7		    mov	    cx,	8
seg000:ACFA		    rep	movsw
seg000:ACFC		    add	    di,	dx
seg000:ACFE		    mov	    cx,	8
seg000:AD01		    rep	movsw
seg000:AD03		    mov	    di,	bp
seg000:AD05		    mov	    cx,	cs
seg000:AD07		    mov	    es,	cx
seg000:AD09		    assume es:seg000
seg000:AD09		    retn
seg000:AD09 sub_AC8E	    endp
seg000:AD09
seg000:AD0A
seg000:AD0A ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:AD0A
seg000:AD0A
seg000:AD0A sub_AD0A	    proc near		    ; CODE XREF: sub_989F:loc_9975p
seg000:AD0A		    mov	    si,	894Eh
seg000:AD0D		    mov	    dx,	307h
seg000:AD10		    test    byte ptr ds:894Eh, 0FFh
seg000:AD15		    js	    short loc_AD1A
seg000:AD17		    call    sub_AD28
seg000:AD1A
seg000:AD1A loc_AD1A:				    ; CODE XREF: sub_AD0A+Bj
seg000:AD1A		    mov	    dx,	506h
seg000:AD1D		    mov	    si,	8983h
seg000:AD20		    test    byte ptr ds:8983h, 0FFh
seg000:AD25		    jns	    short sub_AD28
seg000:AD27		    retn
seg000:AD27 sub_AD0A	    endp
seg000:AD27
seg000:AD28
seg000:AD28 ; ███████████████ S	U B R O	U T I N	E ███████████████████████████████████████
seg000:AD28
seg000:AD28
seg000:AD28 sub_AD28	    proc near		    ; CODE XREF: sub_AD0A+Dp
seg000:AD28					    ; sub_AD0A+1Bj
seg000:AD28		    test    byte ptr [si+28h], 0FFh
seg000:AD2C		    jnz	    short loc_AD2F
seg000:AD2E		    retn
seg000:AD2F ; ───────────────────────────────────────────────────────────────────────────
seg000:AD2F
seg000:AD2F loc_AD2F:				    ; CODE XREF: sub_AD28+4j
seg000:AD2F		    dec	    byte ptr [si+28h]
seg000:AD32		    cmp	    word ptr ds:8DCFh, 0
seg000:AD37		    jz	    short loc_AD3E
seg000:AD39		    test    byte ptr [si], 0FFh
seg000:AD3C		    jnz	    short loc_AD7B
seg000:AD3E
seg000:AD3E loc_AD3E:				    ; CODE XREF: sub_AD28+Fj
seg000:AD3E		    inc	    word ptr [si+3]
seg000:AD41		    cmp	    word ptr [si+3], 0FFFFh
seg000:AD45		    jnz	    short loc_AD4A
seg000:AD47		    dec	    word ptr [si+3]
seg000:AD4A
seg000:AD4A loc_AD4A:				    ; CODE XREF: sub_AD28+1Dj
seg000:AD4A		    lea	    bx,	[si+0Ah]
seg000:AD4D		    mov	    cx,	5
seg000:AD50
seg000:AD50 loc_AD50:				    ; CODE XREF: sub_AD28:loc_AD69j
seg000:AD50		    dec	    bx
seg000:AD51		    inc	    byte ptr [bx]
seg000:AD53		    cmp	    byte ptr [bx], 3Ah ; ':'
seg000:AD56		    jnz	    short loc_AD7B
seg000:AD58		    mov	    byte ptr [bx], 30h ; '0'
seg000:AD5B		    cmp	    cx,	4
seg000:AD5E		    jnz	    short loc_AD69
seg000:AD60		    cmp	    byte ptr [si+26h], 0Fh
seg000:AD64		    jnb	    short loc_AD69
seg000:AD66		    inc	    byte ptr [si+26h]
seg000:AD69
seg000:AD69 loc_AD69:				    ; CODE XREF: sub_AD28+36j
seg000:AD69					    ; sub_AD28+3Cj
seg000:AD69		    loop    loc_AD50
seg000:AD6B		    mov	    al,	[si+1]
seg000:AD6E		    mov	    bl,	[si+2]
seg000:AD71		    xor	    ah,	ah
seg000:AD73		    xor	    bh,	bh
seg000:AD75		    mov	    si,	8CA5h
seg000:AD78		    jmp	    sub_82F7
seg000:AD7B ; ───────────────────────────────────────────────────────────────────────────
seg000:AD7B
seg000:AD7B loc_AD7B:				    ; CODE XREF: sub_AD28+14j
seg000:AD7B					    ; sub_AD28+2Ej
seg000:AD7B		    push    si
seg000:AD7C		    call    sub_82B4
seg000:AD7F		    pop	    si
seg000:AD80		    mov	    al,	[si+1]
seg000:AD83		    mov	    bl,	[si+2]
seg000:AD86		    xor	    ah,	ah
seg000:AD88		    xor	    bh,	bh
seg000:AD8A		    lea	    si,	[si+4]
seg000:AD8D		    mov	    cx,	5
seg000:AD90
seg000:AD90 loc_AD90:				    ; CODE XREF: sub_AD28+6Cj
seg000:AD90		    inc	    si
seg000:AD91		    cmp	    byte ptr [si], 30h ; '0'
seg000:AD94		    loope   loc_AD90
seg000:AD96		    jmp	    sub_82F7
seg000:AD96 sub_AD28	    endp
seg000:AD96
seg000:AD96 ; ───────────────────────────────────────────────────────────────────────────
seg000:AD99		    db 4Ch, 41h, 53h, 54h, 0B5h, 58h, 0A5h, 0F9h, 0D2h,	81h
seg000:AD99		    db 19h, 87h, 0AFh, 0, 0C3h,	0
seg000:AD99 seg000	    ends
seg000:AD99
seg000:AD99
seg000:AD99		    end	start
