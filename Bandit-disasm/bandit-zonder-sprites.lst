     1                                  ; Time Bandid for Sanyo MBC-555
     2                                  ; disassembled from LST file created with '?'. probably not IDA-pro.
     3                                  
     4                                  ; MZ header
     5                                  ; ....
     6                                  
     7                                  ; 0x8932
     8                                  
     9                                  
    10                                  org 0
    11                                  cpu 8086
    12                                  
    13                                  ; ─────────────────────────────────────────────────────────────────────
    14                                  
    15 00000000 BF5100                  _0x0297:  mov di,0x51
    16 00000003 B94600                  _0x029a:  mov cx,0x46
    17 00000006 30C0                    _0x029d:  xor al,al
    18 00000008 F3AA                    _0x029f:  rep stosb
    19                                  
    20 0000000A C3                      _0x02a1:  ret
    21                                  
    22                                  ; ─────────────────────────────────────────────────────────────────────
    23                                  
    24 0000000B 57                      _0x02a2:  push di
    25 0000000C 56                      _0x02a3:  push si
    26 0000000D 51                      _0x02a4:  push cx
    27 0000000E B90700                  _0x02a5:  mov cx,0x7
    28 00000011 BF5100                  _0x02a8:  mov di,0x51
    29 00000014 837D0400                _0x02ab:  cmp word [di+0x4],byte +0x0
    30 00000018 7407                    _0x02af:  jz _0x02b8
    31 0000001A 83C70A                  _0x02b1:  add di,byte +0xa
    32 0000001D E2F5                    _0x02b4:  loop _0x02ab
    33 0000001F EB14                    _0x02b6:  jmp short _0x02cc
    34                                  
    35                                  ; ─────────────────────────────────────────────────────────────────────
    36                                  
    37 00000021 89C1                    _0x02b8:  mov cx,ax
    38 00000023 D1E0                    _0x02ba:  shl ax,1
    39 00000025 D1E0                    _0x02bc:  shl ax,1
    40 00000027 01C8                    _0x02be:  add ax,cx
    41 00000029 D1E0                    _0x02c0:  shl ax,1
    42 0000002B BE0100                  _0x02c2:  mov si,0x1
    43 0000002E 01C6                    _0x02c5:  add si,ax
    44 00000030 B90500                  _0x02c7:  mov cx,0x5
    45 00000033 F3A5                    _0x02ca:  rep movsw
    46                                  
    47 00000035 59                      _0x02cc:  pop cx
    48 00000036 5E                      _0x02cd:  pop si
    49 00000037 5F                      _0x02ce:  pop di
    50 00000038 C3                      _0x02cf:  ret
    51                                  
    52                                  ; ─────────────────────────────────────────────────────────────────────
    53                                  
    54 00000039 803EB88D01              _0x02d0:  cmp byte [0x8db8],0x1
    55 0000003E 7401                    _0x02d5:  jz _0x02d8
    56 00000040 C3                      _0x02d7:  ret
    57                                  
    58                                  ; ─────────────────────────────────────────────────────────────────────
    59                                  
    60 00000041 BE5100                  _0x02d8:  mov si,0x51
    61 00000044 B90700                  _0x02db:  mov cx,0x7
    62 00000047 837C0400                _0x02de:  cmp word [si+0x4],byte +0x0
    63 0000004B 7419                    _0x02e2:  jz _0x02fd
    64 0000004D FF4C04                  _0x02e4:  dec word [si+0x4]
    65 00000050 8B5406                  _0x02e7:  mov dx,[si+0x6]
    66 00000053 8B5C08                  _0x02ea:  mov bx,[si+0x8]
    67 00000056 51                      _0x02ed:  push cx
    68 00000057 E81200                  _0x02ee:  call _0x0303
    69 0000005A 59                      _0x02f1:  pop cx
    70 0000005B 8B04                    _0x02f2:  mov ax,[si]
    71 0000005D 014406                  _0x02f4:  add [si+0x6],ax
    72 00000060 8B4402                  _0x02f7:  mov ax,[si+0x2]
    73 00000063 014408                  _0x02fa:  add [si+0x8],ax
    74 00000066 83C60A                  _0x02fd:  add si,byte +0xa
    75 00000069 E2DC                    _0x0300:  loop _0x02de
    76 0000006B C3                      _0x0302:  ret
    77                                  
    78                                  ; ─────────────────────────────────────────────────────────────────────
    79                                  
    80 0000006C FA                      _0x0303:  cli
    81 0000006D B03D                    _0x0304:  mov al,0x3d
    82 0000006F E63A                    _0x0306:  out 0x3a,al        ; keyboard / beep
    83 00000071 89D9                    _0x0308:  mov cx,bx
    84                                  _0x030a:  loop _0x30a
    84          ******************       error: symbol `_0x30a' not defined
    85 00000073 B035                    _0x030c:  mov al,0x35
    86 00000075 E63A                    _0x030e:  out 0x3a,al        ; keyboard / beep
    87 00000077 89D9                    _0x0310:  mov cx,bx
    88                                  _0x0312:  loop _0x312
    88          ******************       error: symbol `_0x312' not defined
    89 00000079 4A                      _0x0314:  dec dx
    90                                  _0x0315:  jnz _0x303
    90          ******************       error: symbol `_0x303' not defined
    91 0000007A FB                      _0x0317:  sti
    92 0000007B C3                      _0x0318:  ret
    93                                  
    94                                  ; ─────────────────────────────────────────────────────────────────────
    95                                  
    96                                  ; DATA
    97 0000007C 00<rep 5B8h>            _0x0319: times 0x5B8 db 0
    98                                  ; ........................
    99                                  ; ........................
   100                                  ; ........................
   101                                  ; ........................
   102                                  ; ........................
   103                                  ; ........................
   104                                  ; ........................
   105                                  ; ........................
   106                                  
   107                                  ; ─────────────────────────────────────────────────────────────────────
   108                                  
   109 00000634 BF0200                  _0x08d1:  mov di,0x2
   110 00000637 9C                      _0x08d4:  pushf
   111 00000638 52                      _0x08d5:  push dx
   112 00000639 57                      _0x08d6:  push di
   113 0000063A 06                      _0x08d7:  push es
   114 0000063B FA                      _0x08d8:  cli
   115 0000063C FC                      _0x08d9:  cld
   116 0000063D 88F0                    _0x08da:  mov al,dh
   117 0000063F E60C                    _0x08dc:  out 0xc,al      ; disk sector
   118 00000641 BA0800                  _0x08de:  mov dx,0x8
   119 00000644 BE0D07                  _0x08e1:  mov si,0x70d
   120 00000647 89DD                    _0x08e4:  mov bp,bx
   121 00000649 89DF                    _0x08e6:  mov di,bx
   122 0000064B 8CD8                    _0x08e8:  mov ax,ds
   123 0000064D 8EC0                    _0x08ea:  mov es,ax
   124 0000064F B702                    _0x08ec:  mov bh,0x2
   125 00000651 B396                    _0x08ee:  mov bl,0x96
   126 00000653 B400                    _0x08f0:  mov ah,0x0
   127 00000655 B080                    _0x08f2:  mov al,0x80
   128 00000657 E608                    _0x08f4:  out 0x8,al     ; floppy command
   129 00000659 D40A                    _0x08f6:  aam
   130 0000065B D40A                    _0x08f8:  aam
   131 0000065D D40A                    _0x08fa:  aam
   132 0000065F D40A                    _0x08fc:  aam
   133 00000661 EC                      _0x08fe:  in al,dx       ; floppy status
   134 00000662 D0F8                    _0x08ff:  sar al,1
   135                                  _0x0901:  jnc _0x91f
   135          ******************       error: symbol `_0x91f' not defined
   136                                  _0x0903:  jnz _0x8fe
   136          ******************       error: symbol `_0x8fe' not defined
   137 00000664 EC                      _0x0905:  in al,dx       ; floppy status
   138 00000665 20D8                    _0x0906:  and al,bl
   139                                  _0x0908:  jz _0x905
   139          ******************       error: symbol `_0x905' not defined
   140 00000667 E40E                    _0x090a:  in al,0xe
   141 00000669 AA                      _0x090c:  stosb
   142 0000066A EC                      _0x090d:  in al,dx       ; floppy status
   143 0000066B 48                      _0x090e:  dec ax
   144                                  _0x090f:  jz _0x90d
   144          ******************       error: symbol `_0x90d' not defined
   145 0000066C 38F8                    _0x0911:  cmp al,bh
   146                                  _0x0913:  jnz _0x91f
   146          ******************       error: symbol `_0x91f' not defined
   147 0000066E E40E                    _0x0915:  in al,0xe      ; floppy data
   148 00000670 AA                      _0x0917:  stosb
   149 00000671 EC                      _0x0918:  in al,dx       ; floppy status
   150 00000672 38F8                    _0x0919:  cmp al,bh
   151                                  _0x091b:  jz _0x915
   151          ******************       error: symbol `_0x915' not defined
   152 00000674 FFE6                    _0x091d:  jmp si
   153                                  
   154                                  ; ─────────────────────────────────────────────────────────────────────
   155                                  
   156 00000676 89FB                    _0x091f:  mov bx,di
   157 00000678 07                      _0x0921:  pop es
   158 00000679 5F                      _0x0922:  pop di
   159 0000067A 5A                      _0x0923:  pop dx
   160 0000067B 9D                      _0x0924:  popf
   161 0000067C E408                    _0x0925:  in al,0x8      ; floppy status
   162 0000067E 24FF                    _0x0927:  and al,0xff
   163                                  _0x0929:  jnz _0x947
   163          ******************       error: symbol `_0x947' not defined
   164                                  _0x092b:  loop _0x93a
   164          ******************       error: symbol `_0x93a' not defined
   165 00000680 07                      _0x092d:  pop es
   166 00000681 5F                      _0x092e:  pop di
   167 00000682 5E                      _0x092f:  pop si
   168 00000683 5D                      _0x0930:  pop bp
   169 00000684 5A                      _0x0931:  pop dx
   170 00000685 59                      _0x0932:  pop cx
   171 00000686 5B                      _0x0933:  pop bx
   172 00000687 58                      _0x0934:  pop ax
   173                                  _0x0935:  call _0xb57
   173          ******************       error: symbol `_0xb57' not defined
   174 00000688 F8                      _0x0938:  clc
   175 00000689 C3                      _0x0939:  ret
   176 0000068A FEC6                    _0x093a:  inc dh
   177 0000068C 80FE09                  _0x093c:  cmp dh,0x9
   178                                  _0x093f:  jc _0x8d1
   178          ******************       error: symbol `_0x8d1' not defined
   179 0000068F FEC2                    _0x0941:  inc dl
   180 00000691 B601                    _0x0943:  mov dh,0x1
   181                                  _0x0945:  jmp short _0x8c9
   181          ******************       error: symbol `_0x8c9' not defined
   182                                  
   183                                  ; ─────────────────────────────────────────────────────────────────────
   184                                  
   185 00000693 89EB                    _0x0947:  mov bx,bp
   186 00000695 4F                      _0x0949:  dec di
   187                                  _0x094a:  jz _0x964
   187          ******************       error: symbol `_0x964' not defined
   188 00000696 A83C                    _0x094c:  test al,0x3c
   189                                  _0x094e:  jz _0x95c
   189          ******************       error: symbol `_0x95c' not defined
   190 00000698 F7C70100                _0x0950:  test di,0x1
   191                                  _0x0954:  jnz _0x95c
   191          ******************       error: symbol `_0x95c' not defined
   192                                  _0x0956:  call _0xb3f
   192          ******************       error: symbol `_0xb3f' not defined
   193                                  _0x0959:  jmp _0x8c9
   193          ******************       error: symbol `_0x8c9' not defined
   194                                  
   195                                  ; ─────────────────────────────────────────────────────────────────────
   196                                  
   197                                  _0x095c:  jmp _0x8d4
   197          ******************       error: symbol `_0x8d4' not defined
   198                                  
   199                                  ; ─────────────────────────────────────────────────────────────────────
   200                                  
   201 0000069C A880                    _0x095f:  test al,0x80
   202                                  _0x0961:  jz _0x964
   202          ******************       error: symbol `_0x964' not defined
   203 0000069E F8                      _0x0963:  clc
   204 0000069F 07                      _0x0964:  pop es
   205 000006A0 5F                      _0x0965:  pop di
   206 000006A1 5E                      _0x0966:  pop si
   207 000006A2 5D                      _0x0967:  pop bp
   208 000006A3 5A                      _0x0968:  pop dx
   209 000006A4 59                      _0x0969:  pop cx
   210 000006A5 5B                      _0x096a:  pop bx
   211 000006A6 9F                      _0x096b:  lahf
   212 000006A7 83C402                  _0x096c:  add sp,byte +0x2
   213 000006AA 9E                      _0x096f:  sahf
   214                                  _0x0970:  call _0xb57
   214          ******************       error: symbol `_0xb57' not defined
   215                                  _0x0973:  jc _0x98f
   215          ******************       error: symbol `_0x98f' not defined
   216 000006AB A880                    _0x0975:  test al,0x80
   217                                  _0x0977:  jnz _0x987
   217          ******************       error: symbol `_0x987' not defined
   218 000006AD A810                    _0x0979:  test al,0x10
   219                                  _0x097b:  jnz _0x993
   219          ******************       error: symbol `_0x993' not defined
   220 000006AF A80C                    _0x097d:  test al,0xc
   221                                  _0x097f:  jnz _0x98b
   221          ******************       error: symbol `_0x98b' not defined
   222                                  _0x0981:  jmp short _0x99b
   222          ******************       error: symbol `_0x99b' not defined
   223                                  
   224                                  ; ─────────────────────────────────────────────────────────────────────
   225                                  
   226 000006B1 B000                    _0x0983:  mov al,0x0
   227                                  _0x0985:  jmp short _0x99d
   227          ******************       error: symbol `_0x99d' not defined
   228                                  
   229                                  ; ─────────────────────────────────────────────────────────────────────
   230                                  
   231 000006B3 B002                    _0x0987:  mov al,0x2
   232                                  _0x0989:  jmp short _0x99d
   232          ******************       error: symbol `_0x99d' not defined
   233                                  
   234                                  ; ─────────────────────────────────────────────────────────────────────
   235                                  
   236 000006B5 B004                    _0x098b:  mov al,0x4
   237                                  _0x098d:  jmp short _0x99d
   237          ******************       error: symbol `_0x99d' not defined
   238                                  
   239                                  ; ─────────────────────────────────────────────────────────────────────
   240                                  
   241 000006B7 B006                    _0x098f:  mov al,0x6
   242                                  _0x0991:  jmp short _0x99d
   242          ******************       error: symbol `_0x99d' not defined
   243                                  
   244                                  ; ─────────────────────────────────────────────────────────────────────
   245                                  
   246 000006B9 B008                    _0x0993:  mov al,0x8
   247                                  _0x0995:  jmp short _0x99d
   247          ******************       error: symbol `_0x99d' not defined
   248                                  
   249                                  ; ─────────────────────────────────────────────────────────────────────
   250                                  
   251 000006BB B00A                    _0x0997:  mov al,0xa
   252                                  _0x0999:  jmp short _0x99d
   252          ******************       error: symbol `_0x99d' not defined
   253                                  
   254                                  ; ─────────────────────────────────────────────────────────────────────
   255                                  
   256 000006BD B00C                    _0x099b:  mov al,0xc
   257 000006BF F9                      _0x099d:  stc
   258 000006C0 C3                      _0x099e:  ret
   259 000006C1 50                      _0x099f:  push ax
   260 000006C2 53                      _0x09a0:  push bx
   261 000006C3 51                      _0x09a1:  push cx
   262 000006C4 52                      _0x09a2:  push dx
   263 000006C5 55                      _0x09a3:  push bp
   264 000006C6 57                      _0x09a4:  push di
   265 000006C7 06                      _0x09a5:  push es
   266                                  _0x09a6:  call _0xb5e
   266          ******************       error: symbol `_0xb5e' not defined
   267                                  _0x09a9:  call _0xa8e
   267          ******************       error: symbol `_0xa8e' not defined
   268                                  _0x09ac:  call _0xae0
   268          ******************       error: symbol `_0xae0' not defined
   269                                  _0x09af:  jnc _0x9b4
   269          ******************       error: symbol `_0x9b4' not defined
   270                                  _0x09b1:  jmp _0xa50
   270          ******************       error: symbol `_0xa50' not defined
   271                                  
   272                                  ; ─────────────────────────────────────────────────────────────────────
   273                                  
   274 000006C8 BF0A00                  _0x09b4:  mov di,0xa
   275 000006CB 51                      _0x09b7:  push cx
   276 000006CC 52                      _0x09b8:  push dx
   277 000006CD 56                      _0x09b9:  push si
   278 000006CE 57                      _0x09ba:  push di
   279 000006CF FA                      _0x09bb:  cli
   280 000006D0 FC                      _0x09bc:  cld
   281 000006D1 88F0                    _0x09bd:  mov al,dh
   282 000006D3 E60C                    _0x09bf:  out 0xc,al         ; disk sector
   283 000006D5 BA0800                  _0x09c1:  mov dx,0x8
   284 000006D8 BFF607                  _0x09c4:  mov di,0x7f6
   285 000006DB 89DD                    _0x09c7:  mov bp,bx
   286 000006DD 89DE                    _0x09c9:  mov si,bx
   287 000006DF 8CD8                    _0x09cb:  mov ax,ds
   288 000006E1 8EC0                    _0x09cd:  mov es,ax
   289 000006E3 B0A0                    _0x09cf:  mov al,0xa0
   290 000006E5 E608                    _0x09d1:  out 0x8,al         ; floppy
   291 000006E7 D40A                    _0x09d3:  aam
   292 000006E9 D40A                    _0x09d5:  aam
   293 000006EB D40A                    _0x09d7:  aam
   294 000006ED D40A                    _0x09d9:  aam
   295 000006EF B40C                    _0x09db:  mov ah,0xc
   296 000006F1 B500                    _0x09dd:  mov ch,0x0
   297 000006F3 B702                    _0x09df:  mov bh,0x2
   298 000006F5 B3F6                    _0x09e1:  mov bl,0xf6
   299 000006F7 AC                      _0x09e3:  lodsb
   300 000006F8 91                      _0x09e4:  xchg ax,cx
   301 000006F9 EC                      _0x09e5:  in al,dx           ; floppy status
   302 000006FA D0F8                    _0x09e6:  sar al,1
   303                                  _0x09e8:  jnc _0xa0a
   303          ******************       error: symbol `_0xa0a' not defined
   304                                  _0x09ea:  jnz _0x9e5
   304          ******************       error: symbol `_0x9e5' not defined
   305 000006FC EC                      _0x09ec:  in al,dx           ; floppy status
   306 000006FD 20D8                    _0x09ed:  and al,bl
   307                                  _0x09ef:  jz _0x9ec
   307          ******************       error: symbol `_0x9ec' not defined
   308 000006FF 91                      _0x09f1:  xchg ax,cx
   309 00000700 E60E                    _0x09f2:  out 0xe,al         ; floppy
   310                                  _0x09f4:  jmp short _0xa01
   310          ******************       error: symbol `_0xa01' not defined
   311                                  
   312                                  ; ─────────────────────────────────────────────────────────────────────
   313                                  
   314 00000702 EC                      _0x09f6:  in al,dx           ; floppy status
   315 00000703 48                      _0x09f7:  dec ax
   316                                  _0x09f8:  jz _0x9f6
   316          ******************       error: symbol `_0x9f6' not defined
   317 00000704 38F8                    _0x09fa:  cmp al,bh
   318                                  _0x09fc:  jnz _0xa0a
   318          ******************       error: symbol `_0xa0a' not defined
   319 00000706 91                      _0x09fe:  xchg ax,cx
   320 00000707 E60E                    _0x09ff:  out 0xe,al         ; floppy
   321 00000709 AC                      _0x0a01:  lodsb
   322 0000070A 91                      _0x0a02:  xchg ax,cx
   323 0000070B EC                      _0x0a03:  in al,dx           ; floppy status
   324 0000070C 20F8                    _0x0a04:  and al,bh
   325                                  _0x0a06:  jnz _0x9fe
   325          ******************       error: symbol `_0x9fe' not defined
   326 0000070E FFE7                    _0x0a08:  jmp di
   327                                  
   328                                  ; ─────────────────────────────────────────────────────────────────────
   329                                  
   330 00000710 89EB                    _0x0a0a:  mov bx,bp
   331 00000712 81C30002                _0x0a0c:  add bx,0x200
   332 00000716 5F                      _0x0a10:  pop di
   333 00000717 5E                      _0x0a11:  pop si
   334 00000718 5A                      _0x0a12:  pop dx
   335 00000719 59                      _0x0a13:  pop cx
   336 0000071A E408                    _0x0a14:  in al,0x8           ; floppy status
   337 0000071C 24FF                    _0x0a16:  and al,0xff
   338                                  _0x0a18:  jnz _0xa38
   338          ******************       error: symbol `_0xa38' not defined
   339                                  _0x0a1a:  loop _0xa28
   339          ******************       error: symbol `_0xa28' not defined
   340 0000071E 07                      _0x0a1c:  pop es
   341 0000071F 5F                      _0x0a1d:  pop di
   342 00000720 5D                      _0x0a1e:  pop bp
   343 00000721 5A                      _0x0a1f:  pop dx
   344 00000722 59                      _0x0a20:  pop cx
   345 00000723 5B                      _0x0a21:  pop bx
   346 00000724 58                      _0x0a22:  pop ax
   347                                  _0x0a23:  call _0xb57
   347          ******************       error: symbol `_0xb57' not defined
   348 00000725 F8                      _0x0a26:  clc
   349 00000726 C3                      _0x0a27:  ret
   350 00000727 FEC6                    _0x0a28:  inc dh
   351 00000729 80FE09                  _0x0a2a:  cmp dh,0x9
   352                                  _0x0a2d:  jnc _0xa31
   352          ******************       error: symbol `_0xa31' not defined
   353                                  _0x0a2f:  jmp short _0x9b4
   353          ******************       error: symbol `_0x9b4' not defined
   354                                  
   355                                  ; ─────────────────────────────────────────────────────────────────────
   356                                  
   357 0000072C FEC2                    _0x0a31:  inc dl
   358 0000072E B601                    _0x0a33:  mov dh,0x1
   359                                  _0x0a35:  jmp _0x9ac
   359          ******************       error: symbol `_0x9ac' not defined
   360                                  
   361                                  ; ─────────────────────────────────────────────────────────────────────
   362                                  
   363 00000730 89EB                    _0x0a38:  mov bx,bp
   364 00000732 4F                      _0x0a3a:  dec di
   365                                  _0x0a3b:  jz _0xa55
   365          ******************       error: symbol `_0xa55' not defined
   366 00000733 A83C                    _0x0a3d:  test al,0x3c
   367                                  _0x0a3f:  jz _0xa4d
   367          ******************       error: symbol `_0xa4d' not defined
   368 00000735 F7C70100                _0x0a41:  test di,0x1
   369                                  _0x0a45:  jnz _0xa4d
   369          ******************       error: symbol `_0xa4d' not defined
   370                                  _0x0a47:  call _0xb3f
   370          ******************       error: symbol `_0xb3f' not defined
   371                                  _0x0a4a:  jmp _0x9ac
   371          ******************       error: symbol `_0x9ac' not defined
   372                                  
   373                                  ; ─────────────────────────────────────────────────────────────────────
   374                                  
   375                                  _0x0a4d:  jmp _0x9b7
   375          ******************       error: symbol `_0x9b7' not defined
   376                                  
   377                                  ; ─────────────────────────────────────────────────────────────────────
   378                                  
   379 00000739 A880                    _0x0a50:  test al,0x80
   380                                  _0x0a52:  jz _0xa55
   380          ******************       error: symbol `_0xa55' not defined
   381 0000073B F8                      _0x0a54:  clc
   382 0000073C 07                      _0x0a55:  pop es
   383 0000073D 5F                      _0x0a56:  pop di
   384 0000073E 5D                      _0x0a57:  pop bp
   385 0000073F 5A                      _0x0a58:  pop dx
   386 00000740 59                      _0x0a59:  pop cx
   387 00000741 5B                      _0x0a5a:  pop bx
   388 00000742 9F                      _0x0a5b:  lahf
   389 00000743 83C402                  _0x0a5c:  add sp,byte +0x2
   390 00000746 9E                      _0x0a5f:  sahf
   391                                  _0x0a60:  call _0xb57
   391          ******************       error: symbol `_0xb57' not defined
   392                                  _0x0a63:  jnc _0xa68
   392          ******************       error: symbol `_0xa68' not defined
   393                                  _0x0a65:  jmp _0x98f
   393          ******************       error: symbol `_0x98f' not defined
   394                                  
   395                                  ; ─────────────────────────────────────────────────────────────────────
   396                                  
   397 00000747 A880                    _0x0a68:  test al,0x80
   398                                  _0x0a6a:  jz _0xa6f
   398          ******************       error: symbol `_0xa6f' not defined
   399                                  _0x0a6c:  jmp _0x987
   399          ******************       error: symbol `_0x987' not defined
   400                                  
   401                                  ; ─────────────────────────────────────────────────────────────────────
   402                                  
   403 00000749 A840                    _0x0a6f:  test al,0x40
   404                                  _0x0a71:  jz _0xa76
   404          ******************       error: symbol `_0xa76' not defined
   405                                  _0x0a73:  jmp _0x983
   405          ******************       error: symbol `_0x983' not defined
   406                                  
   407                                  ; ─────────────────────────────────────────────────────────────────────
   408                                  
   409 0000074B A820                    _0x0a76:  test al,0x20
   410                                  _0x0a78:  jz _0xa7d
   410          ******************       error: symbol `_0xa7d' not defined
   411                                  _0x0a7a:  jmp _0x997
   411          ******************       error: symbol `_0x997' not defined
   412                                  
   413                                  ; ─────────────────────────────────────────────────────────────────────
   414                                  
   415 0000074D A810                    _0x0a7d:  test al,0x10
   416                                  _0x0a7f:  jz _0xa84
   416          ******************       error: symbol `_0xa84' not defined
   417                                  _0x0a81:  jmp _0x993
   417          ******************       error: symbol `_0x993' not defined
   418                                  
   419                                  ; ─────────────────────────────────────────────────────────────────────
   420                                  
   421 0000074F A80C                    _0x0a84:  test al,0xc
   422                                  _0x0a86:  jz _0xa8b
   422          ******************       error: symbol `_0xa8b' not defined
   423                                  _0x0a88:  jmp _0x98b
   423          ******************       error: symbol `_0x98b' not defined
   424                                  
   425                                  ; ─────────────────────────────────────────────────────────────────────
   426                                  
   427                                  _0x0a8b:  jmp _0x99b
   427          ******************       error: symbol `_0x99b' not defined
   428                                  
   429                                  ; ─────────────────────────────────────────────────────────────────────
   430                                  
   431 00000751 53                      _0x0a8e:  push bx
   432 00000752 50                      _0x0a8f:  push ax
   433 00000753 E41C                    _0x0a90:  in al,0x1c      ; parallel/floppy control
   434 00000755 2403                    _0x0a92:  and al,0x3
   435 00000757 2EC606B006FC            _0x0a94:  mov byte [cs:0x6b0],0xfc
   436 0000075D 2E0806B006              _0x0a9a:  or [cs:0x6b0],al
   437 00000762 58                      _0x0a9f:  pop ax
   438 00000763 B700                    _0x0aa0:  mov bh,0x0
   439 00000765 2E8A1EB006              _0x0aa2:  mov bl,[cs:0x6b0]
   440 0000076A 2EA2B006                _0x0aa7:  mov [cs:0x6b0],al
   441 0000076E 2403                    _0x0aab:  and al,0x3
   442 00000770 80E303                  _0x0aad:  and bl,0x3
   443 00000773 38D8                    _0x0ab0:  cmp al,bl
   444                                  _0x0ab2:  jz _0xad1
   444          ******************       error: symbol `_0xad1' not defined
   445 00000775 50                      _0x0ab4:  push ax
   446 00000776 E40A                    _0x0ab5:  in al,0xa             ; floppy track ?
   447 00000778 2E8887B106              _0x0ab7:  mov [cs:bx+0x6b1],al
   448 0000077D 58                      _0x0abc:  pop ax
   449 0000077E 88C3                    _0x0abd:  mov bl,al
   450 00000780 2403                    _0x0abf:  and al,0x3
   451 00000782 E61C                    _0x0ac1:  out 0x1c,al           ; floppy
   452 00000784 2E8A87B106              _0x0ac3:  mov al,[cs:bx+0x6b1]
   453 00000789 E60A                    _0x0ac8:  out 0xa,al            ; floppy
   454 0000078B 3C28                    _0x0aca:  cmp al,0x28
   455                                  _0x0acc:  jc _0xad1
   455          ******************       error: symbol `_0xad1' not defined
   456                                  _0x0ace:  call _0xb3f
   456          ******************       error: symbol `_0xb3f' not defined
   457 0000078D 89D0                    _0x0ad1:  mov ax,dx
   458 0000078F B208                    _0x0ad3:  mov dl,0x8
   459 00000791 F6F2                    _0x0ad5:  div dl
   460 00000793 FEC4                    _0x0ad7:  inc ah
   461 00000795 89C2                    _0x0ad9:  mov dx,ax
   462 00000797 80E60F                  _0x0adb:  and dh,0xf
   463 0000079A 5B                      _0x0ade:  pop bx
   464 0000079B C3                      _0x0adf:  ret
   465                                  
   466                                  ; ─────────────────────────────────────────────────────────────────────
   467                                  
   468 0000079C 53                      _0x0ae0:  push bx
   469 0000079D 51                      _0x0ae1:  push cx
   470 0000079E 52                      _0x0ae2:  push dx
   471 0000079F 00D2                    _0x0ae3:  add dl,dl
   472 000007A1 BB0A00                  _0x0ae5:  mov bx,0xa
   473 000007A4 2E3A16B506              _0x0ae8:  cmp dl,[cs:0x6b5]
   474                                  _0x0aed:  jz _0xaf4
   474          ******************       error: symbol `_0xaf4' not defined
   475 000007A9 B94D01                  _0x0aef:  mov cx,0x14d
   476                                  _0x0af2:  loop _0xaf2
   476          ******************       error: symbol `_0xaf2' not defined
   477 000007AC 88D0                    _0x0af4:  mov al,dl
   478 000007AE D0E8                    _0x0af6:  shr al,1
   479 000007B0 E60E                    _0x0af8:  out 0xe,al        ; floppy
   480 000007B2 B018                    _0x0afa:  mov al,0x18
   481 000007B4 E608                    _0x0afc:  out 0x8,al        ; floppy
   482 000007B6 E41C                    _0x0afe:  in al,0x1c        ; floppy
   483 000007B8 88D4                    _0x0b00:  mov ah,dl
   484 000007BA D0E4                    _0x0b02:  shl ah,1
   485 000007BC D0E4                    _0x0b04:  shl ah,1
   486 000007BE 80E404                  _0x0b06:  and ah,0x4
   487 000007C1 24FB                    _0x0b09:  and al,0xfb
   488 000007C3 08E0                    _0x0b0b:  or al,ah
   489 000007C5 E61C                    _0x0b0d:  out 0x1c,al       ; floppy
   490 000007C7 E408                    _0x0b0f:  in al,0x8         ; floppy
   491 000007C9 A801                    _0x0b11:  test al,0x1
   492                                  _0x0b13:  jnz _0xb0f
   492          ******************       error: symbol `_0xb0f' not defined
   493 000007CB B91482                  _0x0b15:  mov cx,0x8214
   494 000007CE E408                    _0x0b18:  in al,0x8         ; floppy
   495 000007D0 A880                    _0x0b1a:  test al,0x80
   496                                  _0x0b1c:  jz _0xb25
   496          ******************       error: symbol `_0xb25' not defined
   497                                  _0x0b1e:  loop _0xb18
   497          ******************       error: symbol `_0xb18' not defined
   498 000007D2 4B                      _0x0b20:  dec bx
   499                                  _0x0b21:  jnz _0xae8
   499          ******************       error: symbol `_0xae8' not defined
   500                                  _0x0b23:  jmp short _0xb36
   500          ******************       error: symbol `_0xb36' not defined
   501                                  
   502                                  ; ─────────────────────────────────────────────────────────────────────
   503                                  
   504 000007D3 2E3A16B506              _0x0b25:  cmp dl,[cs:0x6b5]
   505                                  _0x0b2a:  jz _0xb31
   505          ******************       error: symbol `_0xb31' not defined
   506 000007D8 B94D01                  _0x0b2c:  mov cx,0x14d
   507                                  _0x0b2f:  loop _0xb2f
   507          ******************       error: symbol `_0xb2f' not defined
   508 000007DB 2E8816B506              _0x0b31:  mov [cs:0x6b5],dl
   509 000007E0 5A                      _0x0b36:  pop dx
   510 000007E1 59                      _0x0b37:  pop cx
   511 000007E2 5B                      _0x0b38:  pop bx
   512 000007E3 2490                    _0x0b39:  and al,0x90
   513                                  _0x0b3b:  jz _0xb3e
   513          ******************       error: symbol `_0xb3e' not defined
   514 000007E5 F9                      _0x0b3d:  stc
   515 000007E6 C3                      _0x0b3e:  ret
   516                                  
   517                                  ; ─────────────────────────────────────────────────────────────────────
   518                                  
   519 000007E7 B008                    _0x0b3f:  mov al,0x8
   520 000007E9 E608                    _0x0b41:  out 0x8,al         ; floppy
   521 000007EB E408                    _0x0b43:  in al,0x8          ; floppy
   522 000007ED A801                    _0x0b45:  test al,0x1
   523                                  _0x0b47:  jnz _0xb43
   523          ******************       error: symbol `_0xb43' not defined
   524 000007EF 51                      _0x0b49:  push cx
   525 000007F0 B9511B                  _0x0b4a:  mov cx,0x1b51
   526                                  _0x0b4d:  loop _0xb4d
   526          ******************       error: symbol `_0xb4d' not defined
   527 000007F3 59                      _0x0b4f:  pop cx
   528 000007F4 2EC606B50600            _0x0b50:  mov byte [cs:0x6b5],0x0
   529 000007FA C3                      _0x0b56:  ret
   530                                  
   531                                  ; ─────────────────────────────────────────────────────────────────────
   532                                  
   533 000007FB 50                      _0x0b57:  push ax
   534 000007FC B027                    _0x0b58:  mov al,0x27
   535 000007FE E62A                    _0x0b5a:  out 0x2a,al       ; serial ?
   536 00000800 58                      _0x0b5c:  pop ax
   537 00000801 C3                      _0x0b5d:  ret
   538                                  
   539                                  ; ─────────────────────────────────────────────────────────────────────
   540                                  
   541 00000802 50                      _0x0b5e:  push ax
   542 00000803 B005                    _0x0b5f:  mov al,0x5
   543 00000805 E62A                    _0x0b61:  out 0x2a,al       ; serial ?
   544 00000807 58                      _0x0b63:  pop ax
   545 00000808 C3                      _0x0b64:  ret
   546                                  
   547                                  ; ─────────────────────────────────────────────────────────────────────
   548                                  
   549                                  ; DATA 
   550                                  
   551 00000809 00<rep 793Dh>           _0x0b65: times 0x793D db 0    ; veel blokken data. mogelijke startpunten:
   552                                                                ; _0x5a50, _0x6243, _0x7393, _0x7753, _0x7b2c, _0x7e0a, _0x8483
   553                                  
   554                                  ; _0x0c30, 64*192); //sprites
   555                                  ; _0x3c4e, 40*192); //sprites
   556                                  ; _0x6cf0, 1583);   // strings
   557                                  ; _0x7393, 5*192);  //sprites
   558                                  ; _0x7753, 984);    // strings
   559                                  ; _0x7e0a, 1656);   // strings
   560                                  ; _0x8bbb, 1167);   // strings
   561                                  
   562                                  ; _0x5a50: times 438 db 0 ; DATA
   563                                  ; times 2*478 db 0
   564                                  ; _0x6243: times XXXX db 0 ; DATA (level info?)
   565                                  ; _0x7393: times 0x960 db 0xFF
   566                                  ; _0x7753: times 0x3D9 db 0 ; DATA (messages)
   567                                  ; _0x7b2c: times 0x2DE db 0 ; DATA 
   568                                  ; _0x7e0a: times 0x697 db 0 ; DATA (strings PF1...SOLO etc)
   569                                  ; _0x8483: times 30 db 0  ; DATA 
   570                                  
   571                                  ; CODE
   572                                  
   573 00008146 BE030C                  _0x84a1:  mov si,0xc03
   574 00008149 00D2                    _0x84a4:  add dl,dl
   575 0000814B 030C                    _0x84a6:  add cx,[si]
   576 0000814D 00D2                    _0x84a8:  add dl,dl
   577 0000814F 030E00D2                _0x84aa:  add cx,[0xd200]
   578 00008153 030C                    _0x84ae:  add cx,[si]
   579 00008155 00D2                    _0x84b0:  add dl,dl
   580 00008157 0402                    _0x84b2:  add al,0x2
   581 00008159 3B16D77B                _0x84b4:  cmp dx,[0x7bd7]
   582 0000815D 7503E9F100              _0x84b8:  jz _0x84f6
   583 00008162 8916D77B                _0x84ba:  mov [0x7bd7],dx
   584 00008166 BF987B                  _0x84be:  mov di,0x7b98
   585 00008169 B90300                  _0x84c1:  mov cx,0x3
   586 0000816C 31C0                    _0x84c4:  xor ax,ax
   587 0000816E 31DB                    _0x84c6:  xor bx,bx
   588 00008170 D0EA                    _0x84c8:  shr dl,1
   589 00008172 7203E9B300              _0x84ca:  jnc _0x84cd
   590 00008177 48                      _0x84cc:  dec ax
   591 00008178 D0EE                    _0x84cd:  shr dh,1
   592 0000817A 7203E9B000              _0x84cf:  jnc _0x84d2
   593 0000817F 4B                      _0x84d1:  dec bx
   594 00008180 8905                    _0x84d2:  mov [di],ax
   595 00008182 895D0C                  _0x84d4:  mov [di+0xc],bx
   596 00008185 25AAAA                  _0x84d7:  and ax,0xaaaa
   597 00008188 81E35555                _0x84da:  and bx,0x5555
   598 0000818C 09D8                    _0x84de:  or ax,bx
   599 0000818E 894502                  _0x84e0:  mov [di+0x2],ax
   600 00008191 894506                  _0x84e3:  mov [di+0x6],ax
   601 00008194 89450A                  _0x84e6:  mov [di+0xa],ax
   602 00008197 D1C0                    _0x84e9:  rol ax,1
   603 00008199 894504                  _0x84eb:  mov [di+0x4],ax
   604 0000819C 894508                  _0x84ee:  mov [di+0x8],ax
   605 0000819F 83C70E                  _0x84f1:  add di,byte +0xe
   606 000081A2 E2C8                    _0x84f4:  loop _0x84c4
   607 000081A4 C3                      _0x84f6:  ret
   608                                  
   609                                  ; ─────────────────────────────────────────────────────────────────────
   610                                  
   611 000081A5 A3D081                  _0x84f7:  mov [0x81d0],ax
   612 000081A8 8A14                    _0x84fa:  mov dl,[si]
   613 000081AA 46                      _0x84fc:  inc si
   614 000081AB 08D2                    _0x84fd:  or dl,dl
   615 000081AD 7503E9FC00              _0x84ff:  jz _0x8551
   616 000081B2 80FA01                  _0x8501:  cmp dl,0x1
   617 000081B5 7403E9B100              _0x8504:  jnz _0x850e
   618 000081BA A1D081                  _0x8506:  mov ax,[0x81d0]
   619 000081BD 83C30C                  _0x8509:  add bx,byte +0xc
   620 000081C0 EBE6                    _0x850c:  jmp short _0x84fa
   621 000081C2 80FA02                  _0x850e:  cmp dl,0x2
   622 000081C5 7403E9B600              _0x8511:  jnz _0x8523
   623 000081CA 50                      _0x8513:  push ax
   624 000081CB 53                      _0x8514:  push bx
   625 000081CC 8B14                    _0x8515:  mov dx,[si]
   626 000081CE 83C602                  _0x8517:  add si,byte +0x2
   627 000081D1 56                      _0x851a:  push si
   628 000081D2 E884FF                  _0x851b:  call _0x84b4
   629 000081D5 5E                      _0x851e:  pop si
   630 000081D6 5B                      _0x851f:  pop bx
   631 000081D7 58                      _0x8520:  pop ax
   632 000081D8 EBCE                    _0x8521:  jmp short _0x84fa
   633                                  
   634                                  ; ─────────────────────────────────────────────────────────────────────
   635                                  
   636 000081DA 80FA03                  _0x8523:  cmp dl,0x3
   637 000081DD 7403E9AF00              _0x8526:  jnz _0x8534
   638 000081E2 AD                      _0x8528:  lodsw
   639 000081E3 88E3                    _0x8529:  mov bl,ah
   640 000081E5 30E4                    _0x852b:  xor ah,ah
   641 000081E7 88E7                    _0x852d:  mov bh,ah
   642 000081E9 A3D081                  _0x852f:  mov [0x81d0],ax
   643 000081EC EBBA                    _0x8532:  jmp short _0x84fa
   644                                  
   645                                  ; ─────────────────────────────────────────────────────────────────────
   646                                  
   647 000081EE 80FA04                  _0x8534:  cmp dl,0x4
   648 000081F1 7403E9AA00              _0x8537:  jnz _0x8543
   649 000081F6 AD                      _0x8539:  lodsw
   650 000081F7 89C3                    _0x853a:  mov bx,ax
   651 000081F9 AD                      _0x853c:  lodsw
   652 000081FA 93                      _0x853d:  xchg ax,bx
   653 000081FB A3D081                  _0x853e:  mov [0x81d0],ax
   654 000081FE EBA8                    _0x8541:  jmp short _0x84fa
   655                                  
   656                                  ; ─────────────────────────────────────────────────────────────────────
   657                                  
   658 00008200 50                      _0x8543:  push ax
   659 00008201 53                      _0x8544:  push bx
   660 00008202 56                      _0x8545:  push si
   661 00008203 E8A900                  _0x8546:  call _0x8552
   662 00008206 5E                      _0x8549:  pop si
   663 00008207 5B                      _0x854a:  pop bx
   664 00008208 58                      _0x854b:  pop ax
   665 00008209 83C003                  _0x854c:  add ax,0x3
   666 0000820C EB9A                    _0x854f:  jmp short _0x84fa
   667 0000820E C3                      _0x8551:  ret
   668                                  
   669                                  ; ─────────────────────────────────────────────────────────────────────
   670                                  
   671 0000820F BE20FE                  _0x8552:  mov si,0xfe20
   672 00008212 30F6                    _0x8555:  xor dh,dh
   673 00008214 D1E2                    _0x8557:  shl dx,1
   674 00008216 D1E2                    _0x8559:  shl dx,1
   675 00008218 D1E2                    _0x855b:  shl dx,1
   676 0000821A 89D1                    _0x855d:  mov cx,dx
   677 0000821C D1E2                    _0x855f:  shl dx,1
   678 0000821E 01CA                    _0x8561:  add dx,cx
   679 00008220 01D6                    _0x8563:  add si,dx
   680 00008222 FA                      _0x8565:  cli
   681 00008223 8926F87B                _0x8566:  mov [0x7bf8],sp
   682 00008227 30F6                    _0x856a:  xor dh,dh
   683 00008229 89C1                    _0x856c:  mov cx,ax
   684 0000822B D1E9                    _0x856e:  shr cx,1
   685 0000822D 7203E99F00              _0x8570:  jnc _0x8574
   686 00008232 FECE                    _0x8572:  dec dh
   687 00008234 89D5                    _0x8574:  mov bp,dx
   688 00008236 D1E1                    _0x8576:  shl cx,1
   689 00008238 D1E1                    _0x8578:  shl cx,1
   690 0000823A 89DF                    _0x857a:  mov di,bx
   691 0000823C 83E703                  _0x857c:  and di,0x3
   692 0000823F D1EB                    _0x8580:  shr bx,1
   693 00008241 D1EB                    _0x8582:  shr bx,1
   694 00008243 A1D17B                  _0x8584:  mov ax,[0x7bd1]
   695 00008246 89C4                    _0x8587:  mov sp,ax
   696 00008248 83EC04                  _0x8589:  sub sp,byte +0x4
   697 0000824B F7E3                    _0x858c:  mul bx
   698 0000824D 89EA                    _0x858e:  mov dx,bp
   699 0000824F 01C7                    _0x8590:  add di,ax
   700 00008251 01CF                    _0x8592:  add di,cx
   701 00008253 BD987B                  _0x8594:  mov bp,0x7b98
   702 00008256 C706D57B000F            _0x8597:  mov word [0x7bd5],0xf00
   703 0000825C 08F6                    _0x859d:  or dh,dh
   704 0000825E 7503E9A000              _0x859f:  jz _0x85a7
   705 00008263 C706D57BF000            _0x85a1:  mov word [0x7bd5],0xf0
   706 00008269 8B1ED37B                _0x85a7:  mov bx,[0x7bd3]
   707 0000826D 8E07                    _0x85ab:  mov es,[bx]
   708 0000826F 893EFC7B                _0x85ad:  mov [0x7bfc],di
   709 00008273 891EFA7B                _0x85b1:  mov [0x7bfa],bx
   710 00008277 8B1ED57B                _0x85b5:  mov bx,[0x7bd5]
   711 0000827B B2FC                    _0x85b9:  mov dl,0xfc
   712 0000827D B90C00                  _0x85bb:  mov cx,0xc
   713 00008280 F606F77BFF              _0x85be:  test byte [0x7bf7],0xff
   714 00008285 7403E9D100              _0x85c3:  jnz _0x85ff
   715 0000828A AD                      _0x85c5:  lodsw
   716 0000828B 234600                  _0x85c6:  and ax,[bp+0x0]
   717 0000828E D0EA                    _0x85c9:  shr dl,1
   718 00008290 7203E99700              _0x85cb:  jnc _0x85d0
   719 00008295 83C502                  _0x85cd:  add bp,byte +0x2
   720 00008298 D0CE                    _0x85d0:  ror dh,1
   721 0000829A 7203E99D00              _0x85d2:  jnc _0x85e0
   722 0000829F 86C4                    _0x85d4:  xchg ah,al
   723 000082A1 D1E8                    _0x85d6:  shr ax,1
   724 000082A3 D1E8                    _0x85d8:  shr ax,1
   725 000082A5 D1E8                    _0x85da:  shr ax,1
   726 000082A7 D1E8                    _0x85dc:  shr ax,1
   727 000082A9 86C4                    _0x85de:  xchg ah,al
   728 000082AB 26201D                  _0x85e0:  and [es:di],bl
   729 000082AE 26207D04                _0x85e3:  and [es:di+0x4],bh
   730 000082B2 260805                  _0x85e7:  or [es:di],al
   731 000082B5 26086504                _0x85ea:  or [es:di+0x4],ah
   732 000082B9 47                      _0x85ee:  inc di
   733 000082BA F7C70300                _0x85ef:  test di,0x3
   734 000082BE 7503E99200              _0x85f3:  jz _0x85f9
   735 000082C3 E2C5                    _0x85f5:  loop _0x85c5
   736 000082C5 EBC5                    _0x85f7:  jmp short _0x8630
   736          ******************       error: short jump is out of range
   736          ******************       warning: byte data exceeds bounds [-w+number-overflow]
   737                                  
   738                                  ; ─────────────────────────────────────────────────────────────────────
   739                                  
   740 000082C7 01E7                    _0x85f9:  add di,sp
   741 000082C9 E2BF                    _0x85fb:  loop _0x85c5
   742 000082CB EBBF                    _0x85fd:  jmp short _0x8630
   742          ******************       error: short jump is out of range
   742          ******************       warning: byte data exceeds bounds [-w+number-overflow]
   743                                  
   744                                  ; ─────────────────────────────────────────────────────────────────────
   745                                  
   746 000082CD AD                      _0x85ff:  lodsw
   747 000082CE 234600                  _0x8600:  and ax,[bp+0x0]
   748 000082D1 D0EA                    _0x8603:  shr dl,1
   749 000082D3 7203E98E00              _0x8605:  jnc _0x860a
   750 000082D8 83C502                  _0x8607:  add bp,byte +0x2
   751 000082DB D0CE                    _0x860a:  ror dh,1
   752 000082DD 7203E99400              _0x860c:  jnc _0x861a
   753 000082E2 86C4                    _0x860e:  xchg ah,al
   754 000082E4 D1E8                    _0x8610:  shr ax,1
   755 000082E6 D1E8                    _0x8612:  shr ax,1
   756 000082E8 D1E8                    _0x8614:  shr ax,1
   757 000082EA D1E8                    _0x8616:  shr ax,1
   758 000082EC 86C4                    _0x8618:  xchg ah,al
   759 000082EE 263005                  _0x861a:  xor [es:di],al
   760 000082F1 26306504                _0x861d:  xor [es:di+0x4],ah
   761 000082F5 47                      _0x8621:  inc di
   762 000082F6 F7C70300                _0x8622:  test di,0x3
   763 000082FA 7503E98900              _0x8626:  jz _0x862c
   764 000082FF E2CC                    _0x8628:  loop _0x85ff
   765 00008301 EB89                    _0x862a:  jmp short _0x8630
   765          ******************       error: short jump is out of range
   765          ******************       warning: byte data exceeds bounds [-w+number-overflow]
   766                                  
   767                                  ; ─────────────────────────────────────────────────────────────────────
   768                                  
   769 00008303 01E7                    _0x862c:  add di,sp
   770 00008305 E2C6                    _0x862e:  loop _0x85ff
   771 00008307 8B3EFC7B                _0x8630:  mov di,[0x7bfc]
   772 0000830B 8B1EFA7B                _0x8634:  mov bx,[0x7bfa]
   773 0000830F 83EE18                  _0x8638:  sub si,byte +0x18
   774 00008312 83C502                  _0x863b:  add bp,byte +0x2
   775 00008315 83C302                  _0x863e:  add bx,byte +0x2
   776 00008318 A1D37B                  _0x8641:  mov ax,[0x7bd3]
   777 0000831B 83C006                  _0x8644:  add ax,0x6
   778 0000831E 39D8                    _0x8647:  cmp ax,bx
   779 00008320 7503E98500              _0x8649:  jz _0x864e
   780 00008325 E945FF                  _0x864b:  jmp _0x85ab
   781 00008328 8B26F87B                _0x864e:  mov sp,[0x7bf8]
   782 0000832C FB                      _0x8652:  sti
   783 0000832D 8CC8                    _0x8653:  mov ax,cs
   784 0000832F 8EC0                    _0x8655:  mov es,ax
   785 00008331 C3                      _0x8657:  ret
   786                                  
   787                                  ; ─────────────────────────────────────────────────────────────────────
   788                                  
   789 00008332 56                      _0x8658:  push si
   790 00008333 57                      _0x8659:  push di
   791 00008334 BB9F27                  _0x865a:  mov bx,0x279f
   792 00008337 81C32354                _0x865d:  add bx,0x5423
   793 0000833B E8C81F                  _0x8661:  call _0xad83
   794 0000833E 8B0EF57B                _0x8664:  mov cx,[0x7bf5]
   795 00008342 8B16F37B                _0x8668:  mov dx,[0x7bf3]
   796 00008346 89CE                    _0x866c:  mov si,cx
   797 00008348 89D7                    _0x866e:  mov di,dx
   798 0000834A 88E8                    _0x8670:  mov al,ch
   799 0000834C 88CD                    _0x8672:  mov ch,cl
   800 0000834E 88F1                    _0x8674:  mov cl,dh
   801 00008350 88D6                    _0x8676:  mov dh,dl
   802 00008352 88C2                    _0x8678:  mov dl,al
   803 00008354 D1E9                    _0x867a:  shr cx,1
   804 00008356 D1DA                    _0x867c:  rcr dx,1
   805 00008358 29FA                    _0x867e:  sub dx,di
   806 0000835A 19F1                    _0x8680:  sbb cx,si
   807 0000835C 29FA                    _0x8682:  sub dx,di
   808 0000835E 19F1                    _0x8684:  sbb cx,si
   809 00008360 29FA                    _0x8686:  sub dx,di
   810 00008362 19F1                    _0x8688:  sbb cx,si
   811 00008364 8916F37B                _0x868a:  mov [0x7bf3],dx
   812 00008368 890EF57B                _0x868e:  mov [0x7bf5],cx
   813 0000836C 5F                      _0x8692:  pop di
   814 0000836D 5E                      _0x8693:  pop si
   815 0000836E C3                      _0x8694:  ret
   816                                  
   817                                  ; ─────────────────────────────────────────────────────────────────────
   818                                  
   819 0000836F B00C                    _0x8695:  mov al,0xc
   820 00008371 E630                    _0x8697:  out 0x30,al       ; CRT address
   821 00008373 30C0                    _0x8699:  xor al,al
   822 00008375 E632                    _0x869b:  out 0x32,al       ; CRT data
   823 00008377 B00D                    _0x869d:  mov al,0xd
   824 00008379 E630                    _0x869f:  out 0x30,al       ; CRT address
   825 0000837B 30C0                    _0x86a1:  xor al,al
   826 0000837D E632                    _0x86a3:  out 0x32,al       ; CRT data
   827 0000837F B005                    _0x86a5:  mov al,0x5
   828 00008381 E610                    _0x86a7:  out 0x10,al       ; video page
   829                                  
   830 00008383 31FF                    _0x86a9:  xor di,di
   831 00008385 89F8                    _0x86ab:  mov ax,di
   832 00008387 8E063289                _0x86ad:  mov es,[0x8932]
   833 0000838B B90420                  _0x86b1:  mov cx,0x2004
   834 0000838E F3AB                    _0x86b4:  rep stosw
   835                                  
   836 00008390 31FF                    _0x86b6:  xor di,di
   837 00008392 BA00F0                  _0x86b8:  mov dx,0xf000    ; RED channel
   838 00008395 8EC2                    _0x86bb:  mov es,dx
   839 00008397 B90040                  _0x86bd:  mov cx,0x4000
   840 0000839A F3AB                    _0x86c0:  rep stosw
   841                                  
   842 0000839C 8CC8                    _0x86c2:  mov ax,cs
   843 0000839E 8EC0                    _0x86c4:  mov es,ax
   844 000083A0 C3                      _0x86c6:  ret
   845                                  
   846                                  ; ─────────────────────────────────────────────────────────────────────
   847                                  
   848 000083A1 D1E3                    _0x86c7:  shl bx,1
   849 000083A3 FFA7907B                _0x86c9:  jmp [bx+0x7b90]
   850                                  
   851                                  ; ─────────────────────────────────────────────────────────────────────
   852                                  
   853 000083A7 C706057C0000            _0x86cd:  mov word [0x7c05],0x0
   854 000083AD B401                    _0x86d3:  mov ah,0x1
   855 000083AF E88002                  _0x86d5:  call _0x88d6
   856 000083B2 7503E98700              _0x86d8:  jz _0x86e2
   857 000083B7 30E4                    _0x86da:  xor ah,ah
   858 000083B9 E87602                  _0x86dc:  call _0x88d6
   859 000083BC A3057C                  _0x86df:  mov [0x7c05],ax
   860 000083BF C3                      _0x86e2:  ret
   861                                  
   862                                  ; ─────────────────────────────────────────────────────────────────────
   863                                  
   864 000083C0 A1057C                  _0x86e3:  mov ax,[0x7c05]
   865 000083C3 C606FE7B50              _0x86e6:  mov byte [0x7bfe],0x50
   866 000083C8 3D004B                  _0x86eb:  cmp ax,0x4b00
   867 000083CB 7503E99100              _0x86ee:  jz _0x8705
   868 000083D0 3D0047                  _0x86f0:  cmp ax,0x4700
   869 000083D3 7503E98900              _0x86f3:  jz _0x8705
   870 000083D8 3C0A                    _0x86f5:  cmp al,0xa
   871 000083DA 7503E98200              _0x86f7:  jz _0x8705
   872 000083DF 3C34                    _0x86f9:  cmp al,0x34
   873 000083E1 747E                    _0x86fb:  jz _0x8705
   874 000083E3 3C37                    _0x86fd:  cmp al,0x37
   875 000083E5 747A                    _0x86ff:  jz _0x8705
   876 000083E7 3C31                    _0x8701:  cmp al,0x31
   877 000083E9 757B                    _0x8703:  jnz _0x870a
   878 000083EB C606FE7B19              _0x8705:  mov byte [0x7bfe],0x19
   879 000083F0 3D004D                  _0x870a:  cmp ax,0x4d00
   880 000083F3 7503E98900              _0x870d:  jz _0x8725
   881 000083F8 3D0049                  _0x870f:  cmp ax,0x4900
   882 000083FB 7503E98100              _0x8712:  jz _0x8725
   883 00008400 3D0051                  _0x8714:  cmp ax,0x5100
   884 00008403 747C                    _0x8717:  jz _0x8725
   885 00008405 3C36                    _0x8719:  cmp al,0x36
   886 00008407 7478                    _0x871b:  jz _0x8725
   887 00008409 3C39                    _0x871d:  cmp al,0x39
   888 0000840B 7474                    _0x871f:  jz _0x8725
   889 0000840D 3C33                    _0x8721:  cmp al,0x33
   890 0000840F 7575                    _0x8723:  jnz _0x872a
   891 00008411 C606FE7B87              _0x8725:  mov byte [0x7bfe],0x87
   892 00008416 C606FF7B50              _0x872a:  mov byte [0x7bff],0x50
   893 0000841B 3D0048                  _0x872f:  cmp ax,0x4800
   894 0000841E 7503E98300              _0x8732:  jz _0x874a
   895 00008423 3D0047                  _0x8734:  cmp ax,0x4700
   896 00008426 747E                    _0x8737:  jz _0x874a
   897 00008428 3D0049                  _0x8739:  cmp ax,0x4900
   898 0000842B 7479                    _0x873c:  jz _0x874a
   899 0000842D 3C37                    _0x873e:  cmp al,0x37
   900 0000842F 7475                    _0x8740:  jz _0x874a
   901 00008431 3C38                    _0x8742:  cmp al,0x38
   902 00008433 7471                    _0x8744:  jz _0x874a
   903 00008435 3C39                    _0x8746:  cmp al,0x39
   904 00008437 7572                    _0x8748:  jnz _0x874f
   905 00008439 C606FF7B19              _0x874a:  mov byte [0x7bff],0x19
   906 0000843E 3D0050                  _0x874f:  cmp ax,0x5000
   907 00008441 7503E97F00              _0x8752:  jz _0x8769
   908 00008446 3D0051                  _0x8754:  cmp ax,0x5100
   909 00008449 747A                    _0x8757:  jz _0x8769
   910 0000844B 3C0A                    _0x8759:  cmp al,0xa
   911 0000844D 7476                    _0x875b:  jz _0x8769
   912 0000844F 3C35                    _0x875d:  cmp al,0x35
   913 00008451 7472                    _0x875f:  jz _0x8769
   914 00008453 3C31                    _0x8761:  cmp al,0x31
   915 00008455 746E                    _0x8763:  jz _0x8769
   916 00008457 3C33                    _0x8765:  cmp al,0x33
   917 00008459 756F                    _0x8767:  jnz _0x876e
   918 0000845B C606FF7B8C              _0x8769:  mov byte [0x7bff],0x8c
   919 00008460 C706007C0000            _0x876e:  mov word [0x7c00],0x0
   920 00008466 3C20                    _0x8774:  cmp al,0x20
   921 00008468 756E                    _0x8776:  jnz _0x877c
   922 0000846A FE06007C                _0x8778:  inc byte [0x7c00]
   923 0000846E 3C41                    _0x877c:  cmp al,0x41
   924 00008470 7272                    _0x877e:  jc _0x8788
   925 00008472 3C7A                    _0x8780:  cmp al,0x7a
   926 00008474 776E                    _0x8782:  ja _0x8788
   927 00008476 FE06017C                _0x8784:  inc byte [0x7c01]
   928 0000847A C3                      _0x8788:  ret
   929                                  
   930                                  ; ─────────────────────────────────────────────────────────────────────
   931                                  
   932 0000847B F606037CFF              _0x8789:  test byte [0x7c03],0xff
   933 00008480 7403E98D00              _0x878e:  jnz _0x87b6
   934 00008485 B101                    _0x8790:  mov cl,0x1
   935 00008487 E8F100                  _0x8792:  call _0x881f
   936 0000848A 8826FE7B                _0x8795:  mov [0x7bfe],ah
   937 0000848E B102                    _0x8799:  mov cl,0x2
   938 00008490 E8E800                  _0x879b:  call _0x881f
   939 00008493 8826FF7B                _0x879e:  mov [0x7bff],ah
   940 00008497 C706007C0000            _0x87a2:  mov word [0x7c00],0x0
   941 0000849D D0C8                    _0x87a8:  ror al,1
   942 0000849F D0C8                    _0x87aa:  ror al,1
   943 000084A1 D01E007C                _0x87ac:  rcr byte [0x7c00],1
   944 000084A5 D0C8                    _0x87b0:  ror al,1
   945 000084A7 D01E017C                _0x87b2:  rcr byte [0x7c01],1
   946 000084AB C3                      _0x87b6:  ret
   947                                  
   948                                  ; ─────────────────────────────────────────────────────────────────────
   949                                  
   950 000084AC F606047CFF              _0x87b7:  test byte [0x7c04],0xff
   951 000084B1 7403E98C00              _0x87bc:  jnz _0x87e6
   952 000084B6 B103                    _0x87be:  mov cl,0x3
   953 000084B8 E8C000                  _0x87c0:  call _0x881f
   954 000084BB 8826FE7B                _0x87c3:  mov [0x7bfe],ah
   955 000084BF B104                    _0x87c7:  mov cl,0x4
   956 000084C1 E8B700                  _0x87c9:  call _0x881f
   957 000084C4 8826FF7B                _0x87cc:  mov [0x7bff],ah
   958 000084C8 C706007C0000            _0x87d0:  mov word [0x7c00],0x0
   959 000084CE D0C8                    _0x87d6:  ror al,1
   960 000084D0 D01E007C                _0x87d8:  rcr byte [0x7c00],1
   961 000084D4 D0C8                    _0x87dc:  ror al,1
   962 000084D6 D0C8                    _0x87de:  ror al,1
   963 000084D8 D0C8                    _0x87e0:  ror al,1
   964 000084DA D01E017C                _0x87e2:  rcr byte [0x7c01],1
   965 000084DE C3                      _0x87e6:  ret
   966                                  
   967                                  ; ─────────────────────────────────────────────────────────────────────
   968                                  
   969 000084DF 5B                      _0x87e7:  pop bx
   970 000084E0 81FBF085                _0x87e8:  cmp bx,0x85f0
   971 000084E4 747F                    _0x87ec:  jz _0x8809
   972 000084E6 FFE3                    _0x87ee:  jmp bx
   973                                  
   974                                  ; ─────────────────────────────────────────────────────────────────────
   975                                  
   976 000084E8 8B4E0B                  _0x87f0:  mov cx,[bp+0xb]
   977 000084EB FE4E0D                  _0x87f3:  dec byte [bp+0xd]
   978 000084EE E0(F3)                  _0x87f6:  loopne 0x87f3
   979 000084F0 E3(E7)                  _0x87f8:  jcxz 0x87e7
   980 000084F2 51                      _0x87fa:  push cx
   981 000084F3 8B5605                  _0x87fb:  mov dx,[bp+0x5]
   982 000084F6 8B4E09                  _0x87fe:  mov cx,[bp+0x9]
   983 000084F9 2B4E07                  _0x8801:  sub cx,[bp+0x7]
   984 000084FC D1E9                    _0x8804:  shr cx,1
   985 000084FE 8B7607                  _0x8806:  mov si,[bp+0x7]
   986 00008501 AD                      _0x8809:  lodsw
   987 00008502 01C2                    _0x880a:  add dx,ax
   988 00008504 D1C2                    _0x880c:  rol dx,1
   989 00008506 E2F9                    _0x880e:  loop _0x8809
   990 00008508 58                      _0x8810:  pop ax
   991 00008509 335603                  _0x8811:  xor dx,[bp+0x3]
   992 0000850C 74D1                    _0x8814:  jz _0x87e7
   993 0000850E C7060986AB00            _0x8816:  mov word [0x8609],0xab
   994 00008514 EBE8                    _0x881c:  jmp short _0x8806
   995                                  
   996                                  ; ─────────────────────────────────────────────────────────────────────
   997                                  
   998 00008516 C3                      _0x881e:  ret
   999                                  
  1000                                  ; ─────────────────────────────────────────────────────────────────────
  1001                                  
  1002 00008517 FA                      _0x881f:  cli
  1003 00008518 A0027C                  _0x8820:  mov al,[0x7c02]
  1004 0000851B E61A                    _0x8823:  out 0x1a,al      ; parallel port / joystick?
  1005 0000851D B408                    _0x8825:  mov ah,0x8
  1006 0000851F D2E4                    _0x8827:  shl ah,cl
  1007 00008521 B90008                  _0x8829:  mov cx,0x800
  1008 00008524 E41A                    _0x882c:  in al,0x1a       ; parallel port / joystick?
  1009 00008526 247F                    _0x882e:  and al,0x7f
  1010 00008528 E61A                    _0x8830:  out 0x1a,al
  1011 0000852A 0C80                    _0x8832:  or al,0x80
  1012 0000852C E61A                    _0x8834:  out 0x1a,al      ; parallel port / joystick?
  1013 0000852E 247F                    _0x8836:  and al,0x7f
  1014 00008530 E61A                    _0x8838:  out 0x1a,al      ; parallel port / joystick?
  1015 00008532 D0E8                    _0x883a:  shr al,1
  1016 00008534 E418                    _0x883c:  in al,0x18       ; joystick
  1017 00008536 20E0                    _0x883e:  and al,ah
  1018 00008538 E0(3A)                  _0x8840:  loopne 0x883a
  1019 0000853A E41A                    _0x8842:  in al,0x1a       ; parallel port  / joystick?
  1020 0000853C A2027C                  _0x8844:  mov [0x7c02],al
  1021 0000853F E418                    _0x8847:  in al,0x18       ; joystick
  1022 00008541 FB                      _0x8849:  sti
  1023 00008542 88CC                    _0x884a:  mov ah,cl
  1024 00008544 08CD                    _0x884c:  or ch,cl
  1025 00008546 7566                    _0x884e:  jnz _0x8852
  1026 00008548 F9                      _0x8850:  stc
  1027 00008549 C3                      _0x8851:  ret
  1028                                  
  1029                                  ; ─────────────────────────────────────────────────────────────────────
  1030                                  
  1031 0000854A 88E1                    _0x8852:  mov cl,ah
  1032 0000854C 30ED                    _0x8854:  xor ch,ch
  1033 0000854E E3(58)                  _0x8856:  jcxz 0x8858
  1034 00008550 F6DC                    _0x8858:  neg ah
  1035 00008552 F8                      _0x885a:  clc
  1036 00008553 C3                      _0x885b:  ret
  1037                                  
  1038                                  ; ─────────────────────────────────────────────────────────────────────
  1039                                  
  1040 00008554 E41A                    _0x885c:  in al,0x1a       ; parallel port  / joystick?
  1041 00008556 A2027C                  _0x885e:  mov [0x7c02],al
  1042 00008559 B101                    _0x8861:  mov cl,0x1
  1043 0000855B C706037C0000            _0x8863:  mov word [0x7c03],0x0
  1044 00008561 E8B3FF                  _0x8869:  call _0x881f
  1045 00008564 7368                    _0x886c:  jnc _0x8872
  1046 00008566 FE06037C                _0x886e:  inc byte [0x7c03]
  1047 0000856A B103                    _0x8872:  mov cl,0x3
  1048 0000856C E8A8FF                  _0x8874:  call _0x881f
  1049 0000856F 7368                    _0x8877:  jnc _0x887d
  1050 00008571 FE06047C                _0x8879:  inc byte [0x7c04]
  1051 00008575 C3                      _0x887d:  ret
  1052 00008576 E43A                    _0x887e:  in al,0x3a       ; keyboard command/status
  1053 00008578 A802                    _0x8880:  test al,0x2
  1054 0000857A C3                      _0x8882:  ret
  1055                                  
  1056                                  ; ─────────────────────────────────────────────────────────────────────
  1057                                  
  1058 0000857B 50                      _0x8883:  push ax
  1059 0000857C 53                      _0x8884:  push bx
  1060 0000857D 06                      _0x8885:  push es
  1061 0000857E 1E                      _0x8886:  push ds
  1062 0000857F E8F4FF                  _0x8887:  call _0x887e
  1063 00008582 7503E98300              _0x888a:  jz _0x88ae
  1064 00008587 8CCB                    _0x888c:  mov bx,cs
  1065 00008589 8EDB                    _0x888e:  mov ds,bx
  1066 0000858B A808                    _0x8890:  test al,0x8
  1067 0000858D C41EEB7B                _0x8892:  les bx,[0x7beb]
  1068 00008591 7465                    _0x8896:  jz _0x889c
  1069 00008593 C41EEF7B                _0x8898:  les bx,[0x7bef]
  1070 00008597 31C0                    _0x889c:  xor ax,ax
  1071 00008599 E438                    _0x889e:  in al,0x38         ; keyboard data
  1072 0000859B D1E0                    _0x88a0:  shl ax,1
  1073 0000859D 01C3                    _0x88a2:  add bx,ax
  1074 0000859F B035                    _0x88a4:  mov al,0x35
  1075 000085A1 E63A                    _0x88a6:  out 0x3a,al        ; keyboard command
  1076 000085A3 268B07                  _0x88a8:  mov ax,[es:bx]
  1077 000085A6 E86600                  _0x88ab:  call _0x88b3
  1078 000085A9 1F                      _0x88ae:  pop ds
  1079 000085AA 07                      _0x88af:  pop es
  1080 000085AB 5B                      _0x88b0:  pop bx
  1081 000085AC 58                      _0x88b1:  pop ax
  1082 000085AD CF                      _0x88b2:  iret
  1083                                  
  1084                                  ; ─────────────────────────────────────────────────────────────────────
  1085                                  
  1086 000085AE 30FF                    _0x88b3:  xor bh,bh
  1087 000085B0 8A1ED97B                _0x88b5:  mov bl,[0x7bd9]
  1088 000085B4 8987DB7B                _0x88b9:  mov [bx+0x7bdb],ax
  1089 000085B8 80C302                  _0x88bd:  add bl,0x2
  1090 000085BB 80E30F                  _0x88c0:  and bl,0xf
  1091 000085BE 8A3EDA7B                _0x88c3:  mov bh,[0x7bda]
  1092 000085C2 38FB                    _0x88c7:  cmp bl,bh
  1093 000085C4 7567                    _0x88c9:  jnz _0x88d1
  1094 000085C6 80EB02                  _0x88cb:  sub bl,0x2
  1095 000085C9 80E30F                  _0x88ce:  and bl,0xf
  1096 000085CC 891ED97B                _0x88d1:  mov [0x7bd9],bx
  1097 000085D0 C3                      _0x88d5:  ret
  1098                                  
  1099                                  ; ─────────────────────────────────────────────────────────────────────
  1100                                  
  1101 000085D1 53                      _0x88d6:  push bx
  1102 000085D2 FECC                    _0x88d7:  dec ah
  1103 000085D4 7865                    _0x88d9:  js _0x88df
  1104 000085D6 7503E98700              _0x88db:  jz _0x8906
  1105 000085DB 5B                      _0x88dd:  pop bx
  1106 000085DC C3                      _0x88de:  ret
  1107 000085DD A0DA7B                  _0x88df:  mov al,[0x7bda]
  1108 000085E0 3A06D97B                _0x88e2:  cmp al,[0x7bd9]
  1109 000085E4 74F7                    _0x88e6:  jz _0x88df
  1110 000085E6 30FF                    _0x88e8:  xor bh,bh
  1111 000085E8 88C3                    _0x88ea:  mov bl,al
  1112 000085EA 8B87DB7B                _0x88ec:  mov ax,[bx+0x7bdb]
  1113 000085EE 80C302                  _0x88f0:  add bl,0x2
  1114 000085F1 80E30F                  _0x88f3:  and bl,0xf
  1115 000085F4 881EDA7B                _0x88f6:  mov [0x7bda],bl
  1116 000085F8 BB1987                  _0x88fa:  mov bx,0x8719
  1117 000085FB 87DD                    _0x88fd:  xchg bp,bx
  1118 000085FD 50                      _0x88ff:  push ax
  1119 000085FE E8E7FE                  _0x8900:  call _0x87f0
  1120 00008601 58                      _0x8903:  pop ax
  1121 00008602 5B                      _0x8904:  pop bx
  1122 00008603 C3                      _0x8905:  ret
  1123                                  
  1124                                  ; ─────────────────────────────────────────────────────────────────────
  1125                                  
  1126 00008604 FA                      _0x8906:  cli
  1127 00008605 30FF                    _0x8907:  xor bh,bh
  1128 00008607 A0DA7B                  _0x8909:  mov al,[0x7bda]
  1129 0000860A 3A06D97B                _0x890c:  cmp al,[0x7bd9]
  1130 0000860E 88C3                    _0x8910:  mov bl,al
  1131 00008610 8B87DB7B                _0x8912:  mov ax,[bx+0x7bdb]
  1132 00008614 FB                      _0x8916:  sti
  1133 00008615 5B                      _0x8917:  pop bx
  1134 00008616 C3                      _0x8918:  ret
  1135                                  
  1136                                  ; ─────────────────────────────────────────────────────────────────────
  1137                                  
  1138                                  ; DATA
  1139                                  
  1140                                  ; times 0x7C3 db
  1141                                  
  1142                                  ; ─────────────────────────────────────────────────────────────────────
  1143                                  
  1144                                  begin:
  1145                                  
  1146 00008617 FA                      _0x90db:  cli
  1147 00008618 8CC8                    _0x90dc:  mov ax,cs
  1148 0000861A 8ED8                    _0x90de:  mov ds,ax
  1149 0000861C 8EC0                    _0x90e0:  mov es,ax
  1150 0000861E 8ED0                    _0x90e2:  mov ss,ax
  1151 00008620 BC3089                  _0x90e4:  mov sp,0x8930
  1152 00008623 FB                      _0x90e7:  sti
  1153 00008624 E8531D                  _0x90e8:  call _0xadf7
  1154                                  
  1155 00008627 E80C06                  _0x90eb:  call _0x96c8
  1156 0000862A 72FB                    _0x90ee:  jc _0x90eb
  1157                                  
  1158 0000862C E82A0D                  _0x90f0:  call _0x9dec
  1159 0000862F E83101                  _0x90f3:  call _0x91f5
  1160 00008632 E8E216                  _0x90f6:  call _0xa799
  1161 00008635 E86718                  _0x90f9:  call _0xa921
  1162 00008638 E8721D                  _0x90fc:  call _0xae2a
  1163 0000863B E85D17                  _0x90ff:  call _0xa81d
  1164 0000863E E8CC09                  _0x9102:  call _0x9a9f
  1165 00008641 BC3089                  _0x9105:  mov sp,0x8930
  1166 00008644 E81F0D                  _0x9108:  call _0x9dfa
  1167 00008647 BB1C8F                  _0x910b:  mov bx,0x8f1c
  1168 0000864A 833F00                  _0x910e:  cmp word [bx],byte +0x0
  1169 0000864D 74F8                    _0x9111:  jz _0x910b
  1170 0000864F 53                      _0x9113:  push bx
  1171                                  _0x9114:  call _[bx]
  1171          ******************       error: symbol `_' not defined
  1172 00008650 5B                      _0x9116:  pop bx
  1173 00008651 83C302                  _0x9117:  add bx,byte +0x2
  1174 00008654 EBF4                    _0x911a:  jmp short _0x910e
  1175                                  
  1176                                  ; ─────────────────────────────────────────────────────────────────────
  1177                                  
  1178                                  ;  DATA ????
  1179                                  
  1180                                  ; ???????????????
  1181                                  
  1182                                  ; _0x911c:  xlatb
  1183                                  ; _0x911d:  xchg ax,si
  1184                                  ; _0x911e:  xchg ax,si
  1185                                  ; _0x911f:  sahf
  1186                                  ; _0x9120:  inc si
  1187                                  ; _0x9121:  mov ax,[0x8f4a]
  1188                                  ; _0x9124:  dec cx
  1189                                  ; _0x9125:  mov al,[0x8fa1]
  1190                                  ; _0x9128:  cli
  1191                                  ; _0x9129:  wait cli
  1192                                  ; _0x912b:  wait cmp ax,0xbc9f
  1193                                  ; _0x912f:  lahf
  1194                                  ; _0x9130:  xchg [bp+si-0x6a02],dx
  1195                                  ; _0x9134:  repne nop
  1196                                  ; _0x9136:  bound dx,[bp-0x69a3]
  1197                                  ; _0x913a:  jpo 0x90ce
  1198                                  ; _0x913c:  outsb
  1199                                  ; _0x913d:  xchg ax,di
  1200                                  ; _0x913e:  or ch,[di-0x5f1c]
  1201                                  ; _0x9142:  rol byte [bx+si],1
  1202                                  ; _0x9144:  test [bp+0xd0],ah
  1203                                  ; _0x9148:  add [bx+si],al
  1204                                  
  1205                                  ; ─────────────────────────────────────────────────────────────────────
  1206                                  
  1207 00008656 BE4E89                  _0x914a:  mov si,0x894e
  1208 00008659 E86500                  _0x914d:  call _0x9153
  1209 0000865C BE8389                  _0x9150:  mov si,0x8983
  1210 0000865F F604FF                  _0x9153:  test byte [si],0xff
  1211 00008662 7963                    _0x9156:  jns _0x9159
  1212 00008664 C3                      _0x9158:  ret
  1213                                  
  1214                                  ; ─────────────────────────────────────────────────────────────────────
  1215                                  
  1216 00008665 8B7C2F                  _0x9159:  mov di,[si+0x2f]
  1217 00008668 BA3001                  _0x915c:  mov dx,0x130
  1218 0000866B BB3089                  _0x915f:  mov bx,0x8930
  1219 0000866E 807C2E00                _0x9162:  cmp byte [si+0x2e],0x0
  1220 00008672 7403E98700              _0x9166:  jnz _0x9190
  1221 00008677 803C00                  _0x9168:  cmp byte [si],0x0
  1222 0000867A 7566                    _0x916b:  jnz _0x9174
  1223 0000867C 833EF48D00              _0x916d:  cmp word [0x8df4],byte +0x0
  1224 00008681 756A                    _0x9172:  jnz _0x917f
  1225 00008683 C6443103                _0x9174:  mov byte [si+0x31],0x3
  1226 00008687 8B36D18D                _0x9178:  mov si,[0x8dd1]
  1227 0000868B E99C1D                  _0x917c:  jmp _0xaea7
  1228 0000868E 807C3101                _0x917f:  cmp byte [si+0x31],0x1
  1229 00008692 7560                    _0x9183:  jnz _0x9186
  1230 00008694 C3                      _0x9185:  ret
  1231                                  
  1232                                  ; ─────────────────────────────────────────────────────────────────────
  1233                                  
  1234 00008695 C6443101                _0x9186:  mov byte [si+0x31],0x1
  1235 00008699 BEF00A                  _0x918a:  mov si,0xaf0
  1236 0000869C E98B1D                  _0x918d:  jmp _0xaea7
  1237 0000869F 807C3102                _0x9190:  cmp byte [si+0x31],0x2
  1238 000086A3 7560                    _0x9194:  jnz _0x9197
  1239 000086A5 C3                      _0x9196:  ret
  1240                                  
  1241                                  ; ─────────────────────────────────────────────────────────────────────
  1242                                  
  1243 000086A6 C6443102                _0x9197:  mov byte [si+0x31],0x2
  1244 000086AA BE300A                  _0x919b:  mov si,0xa30
  1245 000086AD E97A1D                  _0x919e:  jmp _0xaea7
  1246 000086B0 803E4E8900              _0x91a1:  cmp byte [0x894e],0x0
  1247 000086B5 7560                    _0x91a6:  jnz _0x91a9
  1248 000086B7 C3                      _0x91a8:  ret
  1249                                  
  1250                                  ; ─────────────────────────────────────────────────────────────────────
  1251                                  
  1252 000086B8 803E838900              _0x91a9:  cmp byte [0x8983],0x0
  1253 000086BD 7560                    _0x91ae:  jnz _0x91b1
  1254 000086BF C3                      _0x91b0:  ret
  1255                                  
  1256                                  ; ─────────────────────────────────────────────────────────────────────
  1257                                  
  1258 000086C0 FE06D38D                _0x91b1:  inc byte [0x8dd3]
  1259 000086C4 803ED38D05              _0x91b5:  cmp byte [0x8dd3],0x5
  1260 000086C9 7360                    _0x91ba:  jnc _0x91bd
  1261 000086CB C3                      _0x91bc:  ret
  1262                                  
  1263                                  ; ─────────────────────────────────────────────────────────────────────
  1264                                  
  1265 000086CC BA0100                  _0x91bd:  mov dx,0x1
  1266 000086CF B93F00                  _0x91c0:  mov cx,0x3f
  1267 000086D2 52                      _0x91c3:  push dx
  1268 000086D3 51                      _0x91c4:  push cx
  1269 000086D4 E882FA                  _0x91c5:  call _0x84b4
  1270 000086D7 A1C18D                  _0x91c8:  mov ax,[0x8dc1]
  1271 000086DA 8B1EC38D                _0x91cb:  mov bx,[0x8dc3]
  1272 000086DE BECB8C                  _0x91cf:  mov si,0x8ccb
  1273 000086E1 E8C1FA                  _0x91d2:  call _0x84f7
  1274 000086E4 B9EE02                  _0x91d5:  mov cx,0x2ee
  1275 000086E7 E2FE                    _0x91d8:  loop _0x91d8
  1276 000086E9 59                      _0x91da:  pop cx
  1277 000086EA 5A                      _0x91db:  pop dx
  1278 000086EB 81C20101                _0x91dc:  add dx,0x101
  1279 000086EF 81E20707                _0x91e0:  and dx,0x707
  1280 000086F3 E2DD                    _0x91e4:  loop _0x91c3
  1281 000086F5 BE4E89                  _0x91e6:  mov si,0x894e
  1282 000086F8 E87E0A                  _0x91e9:  call _0x9c0b
  1283 000086FB BE8389                  _0x91ec:  mov si,0x8983
  1284 000086FE E8780A                  _0x91ef:  call _0x9c0b
  1285 00008701 E92BFF                  _0x91f2:  jmp _0x90f3
  1286                                  
  1287                                  ; ─────────────────────────────────────────────────────────────────────
  1288                                  
  1289 00008704 C706A88D6E7C            _0x91f5:  mov word [0x8da8],0x7c6e
  1290 0000870A C606DD8D17              _0x91fb:  mov byte [0x8ddd],0x17
  1291 0000870F C7065989500B            _0x9200:  mov word [0x8959],0xb50
  1292 00008715 C606798903              _0x9206:  mov byte [0x8979],0x3
  1293 0000871A C606D98D00              _0x920b:  mov byte [0x8dd9],0x0
  1294 0000871F C606A68DFF              _0x9210:  mov byte [0x8da6],0xff
  1295 00008724 C606A78D00              _0x9215:  mov byte [0x8da7],0x0
  1296 00008729 C3                      _0x921a:  ret
  1297                                  
  1298                                  ; ─────────────────────────────────────────────────────────────────────
  1299                                  
  1300 0000872A C706007C0000            _0x921b:  mov word [0x7c00],0x0
  1301 00008730 C606FE7B50              _0x9221:  mov byte [0x7bfe],0x50
  1302 00008735 C606FF7B50              _0x9226:  mov byte [0x7bff],0x50
  1303 0000873A 8A1EA68D                _0x922b:  mov bl,[0x8da6]
  1304 0000873E 80FB04                  _0x922f:  cmp bl,0x4
  1305 00008741 7767                    _0x9232:  ja _0x923c
  1306 00008743 FE0EA78D                _0x9234:  dec byte [0x8da7]
  1307 00008747 7461                    _0x9238:  jz _0x923c
  1308 00008749 EB6E                    _0x923a:  jmp short _0x924b
  1309 0000874B 8B36A88D                _0x923c:  mov si,[0x8da8]
  1310 0000874F 8A1C                    _0x9240:  mov bl,[si]
  1311 00008751 881EA68D                _0x9242:  mov [0x8da6],bl
  1312 00008755 46                      _0x9246:  inc si
  1313 00008756 8936A88D                _0x9247:  mov [0x8da8],si
  1314 0000875A 30FF                    _0x924b:  xor bh,bh
  1315 0000875C D1E3                    _0x924d:  shl bx,1
  1316 0000875E 83FB08                  _0x924f:  cmp bx,byte +0x8
  1317 00008761 776E                    _0x9252:  ja _0x9263
  1318 00008763 F606A78DFF              _0x9254:  test byte [0x8da7],0xff
  1319 00008768 7567                    _0x9259:  jnz _0x9263
  1320 0000876A AC                      _0x925b:  lodsb
  1321 0000876B A2A78D                  _0x925c:  mov [0x8da7],al
  1322 0000876E 8936A88D                _0x925f:  mov [0x8da8],si
  1323 00008772 FFA7C98E                _0x9263:  jmp [bx-0x7137]
  1324 00008776 C3                      _0x9267:  ret
  1325                                  
  1326                                  ; ─────────────────────────────────────────────────────────────────────
  1327                                  
  1328 00008777 C606FE7B50              _0x9268:  mov byte [0x7bfe],0x50
  1329 0000877C C606FF7B00              _0x926d:  mov byte [0x7bff],0x0
  1330 00008781 C3                      _0x9272:  ret
  1331                                  
  1332                                  ; ─────────────────────────────────────────────────────────────────────
  1333                                  
  1334 00008782 C606FE7B96              _0x9273:  mov byte [0x7bfe],0x96
  1335 00008787 C606FF7B50              _0x9278:  mov byte [0x7bff],0x50
  1336 0000878C C3                      _0x927d:  ret
  1337                                  
  1338                                  ; ─────────────────────────────────────────────────────────────────────
  1339                                  
  1340 0000878D C606FE7B50              _0x927e:  mov byte [0x7bfe],0x50
  1341 00008792 C606FF7B96              _0x9283:  mov byte [0x7bff],0x96
  1342 00008797 C3                      _0x9288:  ret
  1343                                  
  1344                                  ; ─────────────────────────────────────────────────────────────────────
  1345                                  
  1346 00008798 C606FE7B00              _0x9289:  mov byte [0x7bfe],0x0
  1347 0000879D C606FF7B50              _0x928e:  mov byte [0x7bff],0x50
  1348 000087A2 C3                      _0x9293:  ret
  1349                                  
  1350                                  ; ─────────────────────────────────────────────────────────────────────
  1351                                  
  1352 000087A3 56                      _0x9294:  push si
  1353 000087A4 BA0607                  _0x9295:  mov dx,0x706
  1354 000087A7 E8AFF9                  _0x9298:  call _0x84b4
  1355 000087AA 5E                      _0x929b:  pop si
  1356 000087AB B80900                  _0x929c:  mov ax,0x9
  1357 000087AE BB0800                  _0x929f:  mov bx,0x8
  1358 000087B1 E8F1F9                  _0x92a2:  call _0x84f7
  1359 000087B4 8936A88D                _0x92a5:  mov [0x8da8],si
  1360 000087B8 C3                      _0x92a9:  ret
  1361                                  
  1362                                  ; ─────────────────────────────────────────────────────────────────────
  1363                                  
  1364 000087B9 B80900                  _0x92aa:  mov ax,0x9
  1365 000087BC BB0800                  _0x92ad:  mov bx,0x8
  1366 000087BF BE898E                  _0x92b0:  mov si,0x8e89
  1367 000087C2 E9E0F9                  _0x92b3:  jmp _0x84f7
  1368 000087C5 C606007C01              _0x92b6:  mov byte [0x7c00],0x1
  1369 000087CA C3                      _0x92bb:  ret
  1370                                  
  1371                                  ; ─────────────────────────────────────────────────────────────────────
  1372                                  
  1373 000087CB 8936A88D                _0x92bc:  mov [0x8da8],si
  1374 000087CF 8306A88D04              _0x92c0:  add word [0x8da8],byte +0x4
  1375 000087D4 89F7                    _0x92c5:  mov di,si
  1376 000087D6 E81301                  _0x92c7:  call _0x937e
  1377 000087D9 E8FD00                  _0x92ca:  call _0x936b
  1378 000087DC 87F7                    _0x92cd:  xchg di,si
  1379 000087DE AD                      _0x92cf:  lodsw
  1380 000087DF 8905                    _0x92d0:  mov [di],ax
  1381 000087E1 D0E0                    _0x92d2:  shl al,1
  1382 000087E3 D0E4                    _0x92d4:  shl ah,1
  1383 000087E5 894504                  _0x92d6:  mov [di+0x4],ax
  1384 000087E8 AD                      _0x92d9:  lodsw
  1385 000087E9 884508                  _0x92da:  mov [di+0x8],al
  1386 000087EC 886509                  _0x92dd:  mov [di+0x9],ah
  1387 000087EF 87FE                    _0x92e0:  xchg si,di
  1388 000087F1 E8CF01                  _0x92e2:  call _0x9455
  1389 000087F4 803EDD8D18              _0x92e5:  cmp byte [0x8ddd],0x18
  1390 000087F9 7460                    _0x92ea:  jz _0x92ed
  1391 000087FB C3                      _0x92ec:  ret
  1392                                  
  1393                                  ; ─────────────────────────────────────────────────────────────────────
  1394                                  
  1395 000087FC C6440AFF                _0x92ed:  mov byte [si+0xa],0xff
  1396 00008800 C3                      _0x92f1:  ret
  1397                                  
  1398                                  ; ─────────────────────────────────────────────────────────────────────
  1399                                  
  1400 00008801 BB3689                  _0x92f2:  mov bx,0x8936
  1401 00008804 BDE960                  _0x92f5:  mov bp,0x60e9
  1402 00008807 A00A8E                  _0x92f8:  mov al,[0x8e0a]
  1403 0000880A FEC0                    _0x92fb:  inc al
  1404 0000880C 2403                    _0x92fd:  and al,0x3
  1405 0000880E A20A8E                  _0x92ff:  mov [0x8e0a],al
  1406 00008811 B4C0                    _0x9302:  mov ah,0xc0
  1407 00008813 F6E4                    _0x9304:  mul ah
  1408 00008815 BE4E3A                  _0x9306:  mov si,0x3a4e
  1409 00008818 01C6                    _0x9309:  add si,ax
  1410 0000881A 8B0EF88D                _0x930b:  mov cx,[0x8df8]
  1411 0000881E 56                      _0x930f:  push si
  1412 0000881F E87B00                  _0x9310:  call _0x932f
  1413 00008822 5E                      _0x9313:  pop si
  1414 00008823 81C60003                _0x9314:  add si,0x300
  1415 00008827 8936D18D                _0x9318:  mov [0x8dd1],si
  1416 0000882B B90100                  _0x931c:  mov cx,0x1
  1417 0000882E BD068E                  _0x931f:  mov bp,0x8e06
  1418 00008831 803EDD8D01              _0x9322:  cmp byte [0x8ddd],0x1
  1419 00008836 7565                    _0x9327:  jnz _0x932f
  1420 00008838 B91500                  _0x9329:  mov cx,0x15
  1421 0000883B BD9460                  _0x932c:  mov bp,0x6094
  1422 0000883E 8B16048E                _0x932f:  mov dx,[0x8e04]
  1423 00008842 51                      _0x9333:  push cx
  1424 00008843 30E4                    _0x9334:  xor ah,ah
  1425 00008845 8A4600                  _0x9336:  mov al,[bp+0x0]
  1426 00008848 45                      _0x9339:  inc bp
  1427 00008849 89C7                    _0x933a:  mov di,ax
  1428 0000884B D1E7                    _0x933c:  shl di,1
  1429 0000884D D1E7                    _0x933e:  shl di,1
  1430 0000884F D1E7                    _0x9340:  shl di,1
  1431 00008851 D1E7                    _0x9342:  shl di,1
  1432 00008853 8A4600                  _0x9344:  mov al,[bp+0x0]
  1433 00008856 45                      _0x9347:  inc bp
  1434 00008857 08C0                    _0x9348:  or al,al
  1435 00008859 787A                    _0x934a:  js _0x9367
  1436 0000885B F626018E                _0x934c:  mul byte [0x8e01]
  1437 0000885F D1E0                    _0x9350:  shl ax,1
  1438 00008861 D1E0                    _0x9352:  shl ax,1
  1439 00008863 D1E0                    _0x9354:  shl ax,1
  1440 00008865 D1E0                    _0x9356:  shl ax,1
  1441 00008867 D1E0                    _0x9358:  shl ax,1
  1442 00008869 D1E0                    _0x935a:  shl ax,1
  1443 0000886B 01C7                    _0x935c:  add di,ax
  1444 0000886D 89F0                    _0x935e:  mov ax,si
  1445 0000886F 55                      _0x9360:  push bp
  1446 00008870 E8B71B                  _0x9361:  call _0xaea7
  1447 00008873 5D                      _0x9364:  pop bp
  1448 00008874 89C6                    _0x9365:  mov si,ax
  1449 00008876 59                      _0x9367:  pop cx
  1450 00008877 E2C9                    _0x9368:  loop _0x9333
  1451 00008879 C3                      _0x936a:  ret
  1452                                  
  1453                                  ; ─────────────────────────────────────────────────────────────────────
  1454                                  
  1455 0000887A 57                      _0x936b:  push di
  1456 0000887B 89F7                    _0x936c:  mov di,si
  1457 0000887D B91100                  _0x936e:  mov cx,0x11
  1458 00008880 B000                    _0x9371:  mov al,0x0
  1459 00008882 F3AA                    _0x9373:  rep stosb
  1460                                  
  1461 00008884 C684F800FF              _0x9375:  mov byte [si+0xf8],0xff
  1462 00008889 FE0C                    _0x937a:  dec byte [si]
  1463 0000888B 5F                      _0x937c:  pop di
  1464 0000888C C3                      _0x937d:  ret
  1465                                  
  1466                                  ; ─────────────────────────────────────────────────────────────────────
  1467                                  
  1468 0000888D BE6F8A                  _0x937e:  mov si,0x8a6f
  1469 00008890 B90A00                  _0x9381:  mov cx,0xa
  1470 00008893 803CFF                  _0x9384:  cmp byte [si],0xff
  1471 00008896 7465                    _0x9387:  jz _0x938f
  1472 00008898 83C611                  _0x9389:  add si,byte +0x11
  1473 0000889B E2F6                    _0x938c:  loop _0x9384
  1474 0000889D 58                      _0x938e:  pop ax
  1475 0000889E C3                      _0x938f:  ret
  1476                                  
  1477                                  ; ─────────────────────────────────────────────────────────────────────
  1478                                  
  1479 0000889F BA0604                  _0x9390:  mov dx,0x406
  1480 000088A2 81FE4E89                _0x9393:  cmp si,0x894e
  1481 000088A6 7562                    _0x9397:  jnz _0x939c
  1482 000088A8 BA0703                  _0x9399:  mov dx,0x307
  1483 000088AB BD2B8C                  _0x939c:  mov bp,0x8c2b
  1484 000088AE B90800                  _0x939f:  mov cx,0x8
  1485 000088B1 F64600FF                _0x93a2:  test byte [bp+0x0],0xff
  1486 000088B5 7465                    _0x93a6:  jz _0x93ae
  1487 000088B7 83C50A                  _0x93a8:  add bp,byte +0xa
  1488 000088BA E2F5                    _0x93ab:  loop _0x93a2
  1489 000088BC C3                      _0x93ad:  ret
  1490                                  
  1491                                  ; ─────────────────────────────────────────────────────────────────────
  1492                                  
  1493 000088BD 895605                  _0x93ae:  mov [bp+0x5],dx
  1494 000088C0 C646001F                _0x93b1:  mov byte [bp+0x0],0x1f
  1495 000088C4 B20A                    _0x93b5:  mov dl,0xa
  1496 000088C6 F6F2                    _0x93b7:  div dl
  1497 000088C8 0D3030                  _0x93b9:  or ax,0x3030
  1498 000088CB 894607                  _0x93bc:  mov [bp+0x7],ax
  1499 000088CE 8B441B                  _0x93bf:  mov ax,[si+0x1b]
  1500 000088D1 88E3                    _0x93c2:  mov bl,ah
  1501 000088D3 30E4                    _0x93c4:  xor ah,ah
  1502 000088D5 30FF                    _0x93c6:  xor bh,bh
  1503 000088D7 B103                    _0x93c8:  mov cl,0x3
  1504 000088D9 D3E0                    _0x93ca:  shl ax,cl
  1505 000088DB FEC1                    _0x93cc:  inc cl
  1506 000088DD D3E3                    _0x93ce:  shl bx,cl
  1507 000088DF 40                      _0x93d0:  inc ax
  1508 000088E0 83C302                  _0x93d1:  add bx,byte +0x2
  1509 000088E3 894601                  _0x93d4:  mov [bp+0x1],ax
  1510 000088E6 895E03                  _0x93d7:  mov [bp+0x3],bx
  1511 000088E9 C3                      _0x93da:  ret
  1512                                  
  1513                                  ; ─────────────────────────────────────────────────────────────────────
  1514                                  
  1515 000088EA 8B1EFA8D                _0x93db:  mov bx,[0x8dfa]
  1516 000088EE D1E3                    _0x93df:  shl bx,1
  1517 000088F0 8B87E960                _0x93e1:  mov ax,[bx+0x60e9]
  1518 000088F4 D1EB                    _0x93e5:  shr bx,1
  1519 000088F6 43                      _0x93e7:  inc bx
  1520 000088F7 3B1EF88D                _0x93e8:  cmp bx,[0x8df8]
  1521 000088FB 7261                    _0x93ec:  jc _0x93f0
  1522 000088FD 31DB                    _0x93ee:  xor bx,bx
  1523 000088FF 891EFA8D                _0x93f0:  mov [0x8dfa],bx
  1524 00008903 C3                      _0x93f4:  ret
  1525                                  
  1526                                  ; ─────────────────────────────────────────────────────────────────────
  1527                                  
  1528 00008904 E886FF                  _0x93f5:  call _0x937e
  1529 00008907 E870FF                  _0x93f8:  call _0x936b
  1530 0000890A E8DDFF                  _0x93fb:  call _0x93db
  1531 0000890D 8904                    _0x93fe:  mov [si],ax
  1532 0000890F D0E0                    _0x9400:  shl al,1
  1533 00008911 D0E4                    _0x9402:  shl ah,1
  1534 00008913 894404                  _0x9404:  mov [si+0x4],ax
  1535 00008916 E819FA                  _0x9407:  call _0x8658
  1536 00008919 80E503                  _0x940a:  and ch,0x3
  1537 0000891C 886C07                  _0x940d:  mov [si+0x7],ch
  1538 0000891F 886C09                  _0x9410:  mov [si+0x9],ch
  1539 00008922 B84501                  _0x9413:  mov ax,0x145
  1540 00008925 803EDE8D00              _0x9416:  cmp byte [0x8dde],0x0
  1541 0000892A 7562                    _0x941b:  jnz _0x9420
  1542 0000892C B85802                  _0x941d:  mov ax,0x258
  1543 0000892F 803EDE8D0D              _0x9420:  cmp byte [0x8dde],0xd
  1544 00008934 7262                    _0x9425:  jc _0x942a
  1545 00008936 B81400                  _0x9427:  mov ax,0x14
  1546 00008939 3906CF8D                _0x942a:  cmp [0x8dcf],ax
  1547 0000893D 7769                    _0x942e:  ja _0x943a
  1548 0000893F F6C670                  _0x9430:  test dh,0x70
  1549 00008942 7575                    _0x9433:  jnz _0x944b
  1550 00008944 80E607                  _0x9435:  and dh,0x7
  1551 00008947 7563                    _0x9438:  jnz _0x943e
  1552 00008949 B609                    _0x943a:  mov dh,0x9
  1553 0000894B EB73                    _0x943c:  jmp short _0x9452
  1554                                  
  1555                                  ; ─────────────────────────────────────────────────────────────────────
  1556                                  
  1557 0000894D FECE                    _0x943e:  dec dh
  1558 0000894F 80FE06                  _0x9440:  cmp dh,0x6
  1559 00008952 7465                    _0x9443:  jz _0x944b
  1560 00008954 80C603                  _0x9445:  add dh,0x3
  1561 00008957 EB67                    _0x9448:  jmp short _0x9452
  1562                                  
  1563                                  ; ─────────────────────────────────────────────────────────────────────
  1564                                  
  1565 00008959 90                      _0x944a:  nop
  1566 0000895A 80E601                  _0x944b:  and dh,0x1
  1567 0000895D 0236FF8D                _0x944e:  add dh,[0x8dff]
  1568 00008961 887408                  _0x9452:  mov [si+0x8],dh
  1569 00008964 8A4408                  _0x9455:  mov al,[si+0x8]
  1570 00008967 88C4                    _0x9458:  mov ah,al
  1571 00008969 BB9C8D                  _0x945a:  mov bx,0x8d9c
  1572 0000896C D7                      _0x945d:  xlatb
  1573 0000896D 80E107                  _0x945e:  and cl,0x7
  1574 00008970 D2C0                    _0x9461:  rol al,cl
  1575 00008972 803EDE8D06              _0x9463:  cmp byte [0x8dde],0x6
  1576 00008977 7261                    _0x9468:  jc _0x946c
  1577 00008979 B0FF                    _0x946a:  mov al,0xff
  1578 0000897B 88440A                  _0x946c:  mov [si+0xa],al
  1579 0000897E 88E0                    _0x946f:  mov al,ah
  1580 00008980 BB443A                  _0x9471:  mov bx,0x3a44
  1581 00008983 D7                      _0x9474:  xlatb
  1582 00008984 884406                  _0x9475:  mov [si+0x6],al
  1583 00008987 E9890D                  _0x9478:  jmp _0xa1a7
  1584                                  
  1585                                  ; ─────────────────────────────────────────────────────────────────────
  1586                                  
  1587 0000898A BE4D8A                  _0x947b:  mov si,0x8a4d
  1588 0000898D BF3B8B                  _0x947e:  mov di,0x8b3b
  1589 00008990 B97800                  _0x9481:  mov cx,0x78
  1590 00008993 F3A5                    _0x9484:  rep movsw
  1591                                  
  1592 00008995 C3                      _0x9486:  ret
  1593                                  
  1594                                  ; ─────────────────────────────────────────────────────────────────────
  1595                                  
  1596 00008996 BE4D8A                  _0x9487:  mov si,0x8a4d
  1597 00008999 BD0E00                  _0x948a:  mov bp,0xe
  1598 0000899C 8A6408                  _0x948d:  mov ah,[si+0x8]
  1599 0000899F 80FC03                  _0x9490:  cmp ah,0x3
  1600 000089A2 7269                    _0x9493:  jc _0x949f
  1601 000089A4 8A5C0E                  _0x9495:  mov bl,[si+0xe]
  1602 000089A7 FEC3                    _0x9498:  inc bl
  1603 000089A9 7462                    _0x949a:  jz _0x949f
  1604 000089AB 885C0E                  _0x949c:  mov [si+0xe],bl
  1605 000089AE 803CFF                  _0x949f:  cmp byte [si],0xff
  1606 000089B1 7562                    _0x94a2:  jnz _0x94a7
  1607 000089B3 E9E601                  _0x94a4:  jmp _0x962e
  1608                                  
  1609                                  ; ─────────────────────────────────────────────────────────────────────
  1610                                  
  1611 000089B6 A0D48D                  _0x94a7:  mov al,[0x8dd4]
  1612 000089B9 22440A                  _0x94aa:  and al,[si+0xa]
  1613 000089BC 7562                    _0x94ad:  jnz _0x94b2
  1614 000089BE E9DB01                  _0x94af:  jmp _0x962e
  1615                                  
  1616                                  ; ─────────────────────────────────────────────────────────────────────
  1617                                  
  1618 000089C1 80FC03                  _0x94b2:  cmp ah,0x3
  1619 000089C4 7268                    _0x94b5:  jc _0x94c0
  1620 000089C6 807C0E08                _0x94b7:  cmp byte [si+0xe],0x8
  1621 000089CA 7762                    _0x94bb:  ja _0x94c0
  1622 000089CC E9A201                  _0x94bd:  jmp _0x9603
  1623                                  
  1624                                  ; ─────────────────────────────────────────────────────────────────────
  1625                                  
  1626 000089CF C606D68D00              _0x94c0:  mov byte [0x8dd6],0x0
  1627 000089D4 8B4402                  _0x94c5:  mov ax,[si+0x2]
  1628 000089D7 09C0                    _0x94c8:  or ax,ax
  1629 000089D9 7403E9BB00              _0x94ca:  jnz _0x952b
  1630 000089DE E851F9                  _0x94cc:  call _0x8658
  1631 000089E1 807C0803                _0x94cf:  cmp byte [si+0x8],0x3
  1632 000089E5 7303E9AF00              _0x94d3:  jc _0x952b
  1633 000089EA F6C610                  _0x94d5:  test dh,0x10
  1634 000089ED 7403E9A700              _0x94d8:  jnz _0x952b
  1635 000089F2 FE06D68D                _0x94da:  inc byte [0x8dd6]
  1636 000089F6 8A5C23                  _0x94de:  mov bl,[si+0x23]
  1637 000089F9 A0CF8D                  _0x94e1:  mov al,[0x8dcf]
  1638 000089FC A810                    _0x94e4:  test al,0x10
  1639 000089FE 7503E98E00              _0x94e6:  jz _0x9523
  1640 00008A03 BF8389                  _0x94e8:  mov di,0x8983
  1641 00008A06 F6068389FF              _0x94eb:  test byte [0x8983],0xff
  1642 00008A0B 7857                    _0x94f0:  js _0x94f6
  1643 00008A0D A820                    _0x94f2:  test al,0x20
  1644 00008A0F 7456                    _0x94f4:  jz _0x94f9
  1645 00008A11 BF4E89                  _0x94f6:  mov di,0x894e
  1646 00008A14 B401                    _0x94f9:  mov ah,0x1
  1647 00008A16 8A451D                  _0x94fb:  mov al,[di+0x1d]
  1648 00008A19 2A4404                  _0x94fe:  sub al,[si+0x4]
  1649 00008A1C 7957                    _0x9501:  jns _0x9507
  1650 00008A1E F6D8                    _0x9503:  neg al
  1651 00008A20 B403                    _0x9505:  mov ah,0x3
  1652 00008A22 3C02                    _0x9507:  cmp al,0x2
  1653 00008A24 735F                    _0x9509:  jnc _0x9517
  1654 00008A26 30E4                    _0x950b:  xor ah,ah
  1655 00008A28 8A451E                  _0x950d:  mov al,[di+0x1e]
  1656 00008A2B 2A4405                  _0x9510:  sub al,[si+0x5]
  1657 00008A2E 7855                    _0x9513:  js _0x9517
  1658 00008A30 B402                    _0x9515:  mov ah,0x2
  1659 00008A32 886409                  _0x9517:  mov [si+0x9],ah
  1660 00008A35 53                      _0x951a:  push bx
  1661 00008A36 56                      _0x951b:  push si
  1662 00008A37 E86C01                  _0x951c:  call _0x9638
  1663 00008A3A 5E                      _0x951f:  pop si
  1664 00008A3B 5B                      _0x9520:  pop bx
  1665 00008A3C EB5B                    _0x9521:  jmp short _0x952b
  1666                                  
  1667                                  ; ─────────────────────────────────────────────────────────────────────
  1668                                  
  1669 00008A3E D0EA                    _0x9523:  shr dl,1
  1670 00008A40 80E203                  _0x9525:  and dl,0x3
  1671 00008A43 885409                  _0x9528:  mov [si+0x9],dl
  1672 00008A46 807C0803                _0x952b:  cmp byte [si+0x8],0x3
  1673 00008A4A 725D                    _0x952f:  jc _0x953b
  1674 00008A4C A0D58D                  _0x9531:  mov al,[0x8dd5]
  1675 00008A4F 08C0                    _0x9534:  or al,al
  1676 00008A51 7456                    _0x9536:  jz _0x953b
  1677 00008A53 E91B01                  _0x9538:  jmp _0x9603
  1678                                  
  1679                                  ; ─────────────────────────────────────────────────────────────────────
  1680                                  
  1681 00008A56 8A4409                  _0x953b:  mov al,[si+0x9]
  1682 00008A59 FEC8                    _0x953e:  dec al
  1683 00008A5B 7865                    _0x9540:  js _0x9554
  1684 00008A5D FEC8                    _0x9542:  dec al
  1685 00008A5F 7903E9AB00              _0x9544:  js _0x95a1
  1686 00008A64 FEC8                    _0x9546:  dec al
  1687 00008A66 7903E97E00              _0x9548:  js _0x957b
  1688 00008A6B FEC8                    _0x954a:  dec al
  1689 00008A6D 7950                    _0x954c:  jns _0x9551
  1690 00008A6F E9D700                  _0x954e:  jmp _0x95db
  1691                                  
  1692                                  ; ─────────────────────────────────────────────────────────────────────
  1693                                  
  1694 00008A72 E9FC00                  _0x9551:  jmp _0x9603
  1695                                  
  1696                                  ; ─────────────────────────────────────────────────────────────────────
  1697                                  
  1698 00008A75 F64403FF                _0x9554:  test byte [si+0x3],0xff
  1699 00008A79 7565                    _0x9558:  jnz _0x9572
  1700 00008A7B F64401FF                _0x955a:  test byte [si+0x1],0xff
  1701 00008A7F 7550                    _0x955e:  jnz _0x9563
  1702 00008A81 E9ED00                  _0x9560:  jmp _0x9603
  1703                                  
  1704                                  ; ─────────────────────────────────────────────────────────────────────
  1705                                  
  1706 00008A84 A0018E                  _0x9563:  mov al,[0x8e01]
  1707 00008A87 F6D8                    _0x9566:  neg al
  1708 00008A89 E86201                  _0x9568:  call _0x9680
  1709 00008A8C C6440302                _0x956b:  mov byte [si+0x3],0x2
  1710 00008A90 FE4C01                  _0x956f:  dec byte [si+0x1]
  1711 00008A93 FE4C05                  _0x9572:  dec byte [si+0x5]
  1712 00008A96 FE4C03                  _0x9575:  dec byte [si+0x3]
  1713 00008A99 E9D500                  _0x9578:  jmp _0x9603
  1714                                  
  1715                                  ; ─────────────────────────────────────────────────────────────────────
  1716                                  
  1717 00008A9C F64403FF                _0x957b:  test byte [si+0x3],0xff
  1718 00008AA0 755D                    _0x957f:  jnz _0x9591
  1719 00008AA2 8A4401                  _0x9581:  mov al,[si+0x1]
  1720 00008AA5 40                      _0x9584:  inc ax
  1721 00008AA6 3A06008E                _0x9585:  cmp al,[0x8e00]
  1722 00008AAA 7503E9C200              _0x9589:  jz _0x9603
  1723 00008AAF A0018E                  _0x958b:  mov al,[0x8e01]
  1724 00008AB2 E83901                  _0x958e:  call _0x9680
  1725 00008AB5 FE4405                  _0x9591:  inc byte [si+0x5]
  1726 00008AB8 8A4403                  _0x9594:  mov al,[si+0x3]
  1727 00008ABB 3401                    _0x9597:  xor al,0x1
  1728 00008ABD 884403                  _0x9599:  mov [si+0x3],al
  1729 00008AC0 004401                  _0x959c:  add [si+0x1],al
  1730 00008AC3 EBAC                    _0x959f:  jmp short _0x9603
  1730          ******************       error: short jump is out of range
  1730          ******************       warning: byte data exceeds bounds [-w+number-overflow]
  1731                                  
  1732                                  ; ─────────────────────────────────────────────────────────────────────
  1733                                  
  1734 00008AC5 F64402FF                _0x95a1:  test byte [si+0x2],0xff
  1735 00008AC9 7558                    _0x95a5:  jnz _0x95b5
  1736 00008ACB 8A04                    _0x95a7:  mov al,[si]
  1737 00008ACD 40                      _0x95a9:  inc ax
  1738 00008ACE 3A06018E                _0x95aa:  cmp al,[0x8e01]
  1739 00008AD2 7503E99A00              _0x95ae:  jz _0x9603
  1740 00008AD7 B001                    _0x95b0:  mov al,0x1
  1741 00008AD9 E81201                  _0x95b2:  call _0x9680
  1742 00008ADC FE4404                  _0x95b5:  inc byte [si+0x4]
  1743 00008ADF 8A4402                  _0x95b8:  mov al,[si+0x2]
  1744 00008AE2 3401                    _0x95bb:  xor al,0x1
  1745 00008AE4 884402                  _0x95bd:  mov [si+0x2],al
  1746 00008AE7 0004                    _0x95c0:  add [si],al
  1747 00008AE9 8A6406                  _0x95c2:  mov ah,[si+0x6]
  1748 00008AEC F6C404                  _0x95c5:  test ah,0x4
  1749 00008AEF 7503E97D00              _0x95c8:  jz _0x9603
  1750 00008AF4 C7440F8001              _0x95ca:  mov word [si+0xf],0x180
  1751 00008AF9 F6C402                  _0x95cf:  test ah,0x2
  1752 00008AFC 7473                    _0x95d2:  jz _0x9603
  1753 00008AFE C7440F0003              _0x95d4:  mov word [si+0xf],0x300
  1754 00008B03 EB6C                    _0x95d9:  jmp short _0x9603
  1755                                  
  1756                                  ; ─────────────────────────────────────────────────────────────────────
  1757                                  
  1758 00008B05 F64402FF                _0x95db:  test byte [si+0x2],0xff
  1759 00008B09 7555                    _0x95df:  jnz _0x95f2
  1760 00008B0B F64404FF                _0x95e1:  test byte [si+0x4],0xff
  1761 00008B0F 7460                    _0x95e5:  jz _0x9603
  1762 00008B11 B0FF                    _0x95e7:  mov al,0xff
  1763 00008B13 E8D800                  _0x95e9:  call _0x9680
  1764 00008B16 FE0C                    _0x95ec:  dec byte [si]
  1765 00008B18 C6440202                _0x95ee:  mov byte [si+0x2],0x2
  1766 00008B1C FE4C04                  _0x95f2:  dec byte [si+0x4]
  1767 00008B1F FE4C02                  _0x95f5:  dec byte [si+0x2]
  1768 00008B22 F6440604                _0x95f8:  test byte [si+0x6],0x4
  1769 00008B26 7449                    _0x95fc:  jz _0x9603
  1770 00008B28 C7440F0000              _0x95fe:  mov word [si+0xf],0x0
  1771 00008B2D 807C0801                _0x9603:  cmp byte [si+0x8],0x1
  1772 00008B31 7454                    _0x9607:  jz _0x9619
  1773 00008B33 807C0802                _0x9609:  cmp byte [si+0x8],0x2
  1774 00008B37 7758                    _0x960d:  ja _0x9623
  1775 00008B39 F74402FFFF              _0x960f:  test word [si+0x2],0xffff
  1776 00008B3E 7447                    _0x9614:  jz _0x9619
  1777 00008B40 E913FF                  _0x9616:  jmp _0x953b
  1778                                  
  1779                                  ; ─────────────────────────────────────────────────────────────────────
  1780                                  
  1781 00008B43 FE4C0E                  _0x9619:  dec byte [si+0xe]
  1782 00008B46 7549                    _0x961c:  jnz _0x9623
  1783 00008B48 E82FFD                  _0x961e:  call _0x936b
  1784 00008B4B EB4F                    _0x9621:  jmp short _0x962e
  1785                                  
  1786                                  ; ─────────────────────────────────────────────────────────────────────
  1787                                  
  1788 00008B4D FE4407                  _0x9623:  inc byte [si+0x7]
  1789 00008B50 8A4406                  _0x9626:  mov al,[si+0x6]
  1790 00008B53 2403                    _0x9629:  and al,0x3
  1791 00008B55 204407                  _0x962b:  and [si+0x7],al
  1792 00008B58 83C611                  _0x962e:  add si,byte +0x11
  1793 00008B5B 4D                      _0x9631:  dec bp
  1794 00008B5C 7447                    _0x9632:  jz _0x9637
  1795 00008B5E E93BFE                  _0x9634:  jmp _0x948d
  1796                                  
  1797                                  ; ─────────────────────────────────────────────────────────────────────
  1798                                  
  1799 00008B61 C3                      _0x9637:  ret
  1800 00008B62 807C0809                _0x9638:  cmp byte [si+0x8],0x9
  1801 00008B66 7445                    _0x963c:  jz _0x963f
  1802 00008B68 C3                      _0x963e:  ret
  1803                                  
  1804                                  ; ─────────────────────────────────────────────────────────────────────
  1805                                  
  1806 00008B69 F74402FFFF              _0x963f:  test word [si+0x2],0xffff
  1807 00008B6E 7445                    _0x9644:  jz _0x9647
  1808 00008B70 C3                      _0x9646:  ret
  1809                                  
  1810                                  ; ─────────────────────────────────────────────────────────────────────
  1811                                  
  1812 00008B71 87F7                    _0x9647:  xchg di,si
  1813 00008B73 E817FD                  _0x9649:  call _0x937e
  1814 00008B76 E801FD                  _0x964c:  call _0x936b
  1815 00008B79 8A4509                  _0x964f:  mov al,[di+0x9]
  1816 00008B7C 884409                  _0x9652:  mov [si+0x9],al
  1817 00008B7F C6440603                _0x9655:  mov byte [si+0x6],0x3
  1818 00008B83 8B05                    _0x9659:  mov ax,[di]
  1819 00008B85 8904                    _0x965b:  mov [si],ax
  1820 00008B87 8B4504                  _0x965d:  mov ax,[di+0x4]
  1821 00008B8A 894404                  _0x9660:  mov [si+0x4],ax
  1822 00008B8D C6440E10                _0x9663:  mov byte [si+0xe],0x10
  1823 00008B91 C6440802                _0x9667:  mov byte [si+0x8],0x2
  1824 00008B95 B80600                  _0x966b:  mov ax,0x6
  1825                                  _0x966e:  call _0x2a2
  1825          ******************       error: symbol `_0x2a2' not defined
  1826 00008B98 56                      _0x9671:  push si
  1827 00008B99 53                      _0x9672:  push bx
  1828 00008B9A 55                      _0x9673:  push bp
  1829 00008B9B BB428E                  _0x9674:  mov bx,0x8e42
  1830 00008B9E E86517                  _0x9677:  call _0xad83
  1831 00008BA1 5D                      _0x967a:  pop bp
  1832 00008BA2 5B                      _0x967b:  pop bx
  1833 00008BA3 5E                      _0x967c:  pop si
  1834 00008BA4 E9BDFD                  _0x967d:  jmp _0x9455
  1835                                  
  1836                                  ; ─────────────────────────────────────────────────────────────────────
  1837                                  
  1838 00008BA7 98                      _0x9680:  cbw
  1839 00008BA8 89C7                    _0x9681:  mov di,ax
  1840 00008BAA 037C0B                  _0x9683:  add di,[si+0xb]
  1841 00008BAD 8A05                    _0x9686:  mov al,[di]
  1842 00008BAF 3C78                    _0x9688:  cmp al,0x78
  1843 00008BB1 7468                    _0x968a:  jz _0x96ad
  1844 00008BB3 807C0EFF                _0x968c:  cmp byte [si+0xe],0xff
  1845 00008BB7 744F                    _0x9690:  jz _0x969a
  1846 00008BB9 3C40                    _0x9692:  cmp al,0x40
  1847 00008BBB 744B                    _0x9694:  jz _0x969a
  1848 00008BBD 3C72                    _0x9696:  cmp al,0x72
  1849 00008BBF 754B                    _0x9698:  jnz _0x969e
  1850 00008BC1 897C0B                  _0x969a:  mov [si+0xb],di
  1851 00008BC4 C3                      _0x969d:  ret
  1852                                  
  1853                                  ; ─────────────────────────────────────────────────────────────────────
  1854                                  
  1855 00008BC5 3C50                    _0x969e:  cmp al,0x50
  1856 00008BC7 7252                    _0x96a0:  jc _0x96ad
  1857 00008BC9 3C53                    _0x96a2:  cmp al,0x53
  1858 00008BCB 774E                    _0x96a4:  ja _0x96ad
  1859 00008BCD 2C50                    _0x96a6:  sub al,0x50
  1860 00008BCF 3A4409                  _0x96a8:  cmp al,[si+0x9]
  1861 00008BD2 75ED                    _0x96ab:  jnz _0x969a
  1862 00008BD4 58                      _0x96ad:  pop ax
  1863 00008BD5 F606D68DFF              _0x96ae:  test byte [0x8dd6],0xff
  1864 00008BDA 7451                    _0x96b3:  jz _0x96bf
  1865 00008BDC FE0ED68D                _0x96b5:  dec byte [0x8dd6]
  1866 00008BE0 885C09                  _0x96b9:  mov [si+0x9],bl
  1867 00008BE3 E960FE                  _0x96bc:  jmp _0x952b
  1868                                  
  1869                                  ; ─────────────────────────────────────────────────────────────────────
  1870                                  
  1871 00008BE6 80E503                  _0x96bf:  and ch,0x3
  1872 00008BE9 886C09                  _0x96c2:  mov [si+0x9],ch
  1873 00008BEC E93EFF                  _0x96c5:  jmp _0x9603
  1874                                  
  1875                                  ; ─────────────────────────────────────────────────────────────────────
  1876                                  
  1877 00008BEF B202                    _0x96c8:  mov dl,0x2
  1878 00008BF1 B90300                  _0x96ca:  mov cx,0x3
  1879 00008BF4 80F203                  _0x96cd:  xor dl,0x3
  1880 00008BF7 51                      _0x96d0:  push cx
  1881 00008BF8 52                      _0x96d1:  push dx
  1882 00008BF9 E86200                  _0x96d2:  call _0x96f0
  1883 00008BFC 5A                      _0x96d5:  pop dx
  1884 00008BFD 59                      _0x96d6:  pop cx
  1885 00008BFE 734B                    _0x96d7:  jnc _0x96dd
  1886 00008C00 E2F5                    _0x96d9:  loop _0x96d0
  1887 00008C02 EBED                    _0x96db:  jmp short _0x96ca
  1888                                  
  1889                                  ; ─────────────────────────────────────────────────────────────────────
  1890                                  
  1891 00008C04 BB4D8A                  _0x96dd:  mov bx,0x8a4d
  1892 00008C07 BA0800                  _0x96e0:  mov dx,0x8
  1893 00008C0A 31C0                    _0x96e3:  xor ax,ax
  1894 00008C0C B90100                  _0x96e5:  mov cx,0x1
  1895                                  _0x96e8:  call _0x8b6
  1895          ******************       error: symbol `_0x8b6' not defined
  1896 00008C0F 08C0                    _0x96eb:  or al,al
  1897 00008C11 74F1                    _0x96ed:  jz _0x96dd
  1898 00008C13 C3                      _0x96ef:  ret
  1899                                  
  1900                                  ; ─────────────────────────────────────────────────────────────────────
  1901                                  
  1902 00008C14 30C0                    _0x96f0:  xor al,al
  1903 00008C16 E61C                    _0x96f2:  out 0x1c,al         ; floppy
  1904 00008C18 B004                    _0x96f4:  mov al,0x4
  1905 00008C1A E61E                    _0x96f6:  out 0x1e,al         ; PPI control
  1906 00008C1C B9041A                  _0x96f8:  mov cx,0x1a04
  1907 00008C1F E2FE                    _0x96fb:  loop _0x96fb
  1908 00008C21 B008                    _0x96fd:  mov al,0x8
  1909 00008C23 E608                    _0x96ff:  out 0x8,al          ; floppy
  1910 00008C25 D40A                    _0x9701:  aam
  1911 00008C27 D40A                    _0x9703:  aam
  1912 00008C29 D40A                    _0x9705:  aam
  1913 00008C2B E408                    _0x9707:  in al,0x8           ; floppy
  1914 00008C2D A801                    _0x9709:  test al,0x1
  1915 00008C2F 75FA                    _0x970b:  jnz _0x9707
  1916 00008C31 A880                    _0x970d:  test al,0x80
  1917 00008C33 7454                    _0x970f:  jz _0x971b
  1918 00008C35 B008                    _0x9711:  mov al,0x8
  1919 00008C37 E608                    _0x9713:  out 0x8,al         ; floppy
  1920 00008C39 D40A                    _0x9715:  aam
  1921 00008C3B D40A                    _0x9717:  aam
  1922 00008C3D EBEC                    _0x9719:  jmp short _0x9707
  1923                                  
  1924                                  ; ─────────────────────────────────────────────────────────────────────
  1925                                  
  1926 00008C3F FA                      _0x971b:  cli
  1927 00008C40 FC                      _0x971c:  cld
  1928 00008C41 B9511B                  _0x971d:  mov cx,0x1b51
  1929 00008C44 E2FE                    _0x9720:  loop _0x9720
  1930 00008C46 88D0                    _0x9722:  mov al,dl
  1931 00008C48 E60E                    _0x9724:  out 0xe,al          ; floppy
  1932 00008C4A B018                    _0x9726:  mov al,0x18
  1933 00008C4C E608                    _0x9728:  out 0x8,al          ; floppy
  1934 00008C4E D40A                    _0x972a:  aam
  1935 00008C50 D40A                    _0x972c:  aam
  1936 00008C52 D40A                    _0x972e:  aam
  1937 00008C54 D40A                    _0x9730:  aam
  1938 00008C56 D40A                    _0x9732:  aam
  1939 00008C58 E408                    _0x9734:  in al,0x8           ; floppy
  1940 00008C5A A801                    _0x9736:  test al,0x1
  1941 00008C5C 75FA                    _0x9738:  jnz _0x9734
  1942 00008C5E A880                    _0x973a:  test al,0x80
  1943 00008C60 744C                    _0x973c:  jz _0x9740
  1944 00008C62 EBDD                    _0x973e:  jmp short _0x971d
  1945                                  
  1946                                  ; ─────────────────────────────────────────────────────────────────────
  1947                                  
  1948 00008C64 B9511B                  _0x9740:  mov cx,0x1b51
  1949 00008C67 E2FE                    _0x9743:  loop _0x9743
  1950 00008C69 BA0800                  _0x9745:  mov dx,0x8
  1951 00008C6C BF4D8A                  _0x9748:  mov di,0x8a4d
  1952 00008C6F B7FC                    _0x974b:  mov bh,0xfc
  1953 00008C71 B302                    _0x974d:  mov bl,0x2
  1954 00008C73 B90002                  _0x974f:  mov cx,0x200
  1955 00008C76 B0E4                    _0x9752:  mov al,0xe4
  1956 00008C78 EE                      _0x9754:  out dx,al         ; floppy
  1957 00008C79 D40A                    _0x9755:  aam
  1958 00008C7B D40A                    _0x9757:  aam
  1959 00008C7D EC                      _0x9759:  in al,dx          ; floppy
  1960 00008C7E A801                    _0x975a:  test al,0x1
  1961 00008C80 74FB                    _0x975c:  jz _0x9759
  1962 00008C82 84C7                    _0x975e:  test bh,al
  1963 00008C84 7403E98100              _0x9760:  jnz _0x979c
  1964 00008C89 EC                      _0x9762:  in al,dx          ; floppy
  1965 00008C8A 84C3                    _0x9763:  test bl,al
  1966 00008C8C 744E                    _0x9765:  jz _0x976e
  1967 00008C8E E40E                    _0x9767:  in al,0xe          ; floppy
  1968 00008C90 AA                      _0x9769:  stosb
  1969 00008C91 E2F6                    _0x976a:  loop _0x9762
  1970 00008C93 EB75                    _0x976c:  jmp short _0x979c
  1971                                  
  1972                                  ; ─────────────────────────────────────────────────────────────────────
  1973                                  
  1974 00008C95 EC                      _0x976e:  in al,dx          ; floppy
  1975 00008C96 84C3                    _0x976f:  test bl,al
  1976 00008C98 744E                    _0x9771:  jz _0x977a
  1977 00008C9A E40E                    _0x9773:  in al,0xe          ; floppy
  1978 00008C9C AA                      _0x9775:  stosb
  1979 00008C9D E2EA                    _0x9776:  loop _0x9762
  1980 00008C9F EB69                    _0x9778:  jmp short _0x979c
  1981                                  
  1982                                  ; ─────────────────────────────────────────────────────────────────────
  1983                                  
  1984 00008CA1 EC                      _0x977a:  in al,dx          ; floppy
  1985 00008CA2 84C3                    _0x977b:  test bl,al
  1986 00008CA4 744E                    _0x977d:  jz _0x9786
  1987 00008CA6 E40E                    _0x977f:  in al,0xe          ; floppy
  1988 00008CA8 AA                      _0x9781:  stosb
  1989 00008CA9 E2DE                    _0x9782:  loop _0x9762
  1990 00008CAB EB5D                    _0x9784:  jmp short _0x979c
  1991                                  
  1992                                  ; ─────────────────────────────────────────────────────────────────────
  1993                                  
  1994 00008CAD EC                      _0x9786:  in al,dx          ; floppy
  1995 00008CAE 84C3                    _0x9787:  test bl,al
  1996 00008CB0 744E                    _0x9789:  jz _0x9792
  1997 00008CB2 E40E                    _0x978b:  in al,0xe          ; floppy
  1998 00008CB4 AA                      _0x978d:  stosb
  1999 00008CB5 E2D2                    _0x978e:  loop _0x9762
  2000 00008CB7 EB51                    _0x9790:  jmp short _0x979c
  2001                                  
  2002                                  ; ─────────────────────────────────────────────────────────────────────
  2003                                  
  2004 00008CB9 EC                      _0x9792:  in al,dx          ; floppy
  2005 00008CBA 84C3                    _0x9793:  test bl,al
  2006 00008CBC 74C4                    _0x9795:  jz _0x975e
  2007 00008CBE E40E                    _0x9797:  in al,0xe          ; floppy
  2008 00008CC0 AA                      _0x9799:  stosb
  2009 00008CC1 E2C6                    _0x979a:  loop _0x9762
  2010 00008CC3 EC                      _0x979c:  in al,dx          ; floppy
  2011 00008CC4 FB                      _0x979d:  sti
  2012 00008CC5 24F8                    _0x979e:  and al,0xf8
  2013 00008CC7 7449                    _0x97a0:  jz _0x97a4
  2014 00008CC9 F9                      _0x97a2:  stc
  2015 00008CCA C3                      _0x97a3:  ret
  2016                                  
  2017                                  ; ─────────────────────────────────────────────────────────────────────
  2018                                  
  2019 00008CCB BEE395                  _0x97a4:  mov si,0x95e3
  2020 00008CCE E86300                  _0x97a7:  call _0x97c6
  2021 00008CD1 7348                    _0x97aa:  jnc _0x97ad
  2022 00008CD3 C3                      _0x97ac:  ret
  2023                                  
  2024                                  ; ─────────────────────────────────────────────────────────────────────
  2025                                  
  2026 00008CD4 BEEA95                  _0x97ad:  mov si,0x95ea
  2027 00008CD7 E85A00                  _0x97b0:  call _0x97c6
  2028 00008CDA 7348                    _0x97b3:  jnc _0x97b6
  2029 00008CDC C3                      _0x97b5:  ret
  2030                                  
  2031                                  ; ─────────────────────────────────────────────────────────────────────
  2032                                  
  2033 00008CDD BEF395                  _0x97b6:  mov si,0x95f3
  2034 00008CE0 E85100                  _0x97b9:  call _0x97c6
  2035 00008CE3 7348                    _0x97bc:  jnc _0x97bf
  2036 00008CE5 C3                      _0x97be:  ret
  2037                                  
  2038                                  ; ─────────────────────────────────────────────────────────────────────
  2039                                  
  2040 00008CE6 BEF995                  _0x97bf:  mov si,0x95f9
  2041 00008CE9 E84800                  _0x97c2:  call _0x97c6
  2042 00008CEC C3                      _0x97c5:  ret
  2043                                  
  2044                                  ; ─────────────────────────────────────────────────────────────────────
  2045                                  
  2046 00008CED BB4D8A                  _0x97c6:  mov bx,0x8a4d
  2047 00008CF0 89DF                    _0x97c9:  mov di,bx
  2048 00008CF2 8B0C                    _0x97cb:  mov cx,[si]
  2049 00008CF4 56                      _0x97cd:  push si
  2050 00008CF5 83C602                  _0x97ce:  add si,byte +0x2
  2051 00008CF8 F3A6                    _0x97d1:  repe cmpsb
  2052 00008CFA 5E                      _0x97d3:  pop si
  2053 00008CFB 7450                    _0x97d4:  jz _0x97df
  2054 00008CFD 43                      _0x97d6:  inc bx
  2055 00008CFE 81FB4D8E                _0x97d7:  cmp bx,0x8e4d
  2056 00008D02 744B                    _0x97db:  jz _0x97e1
  2057 00008D04 EBEA                    _0x97dd:  jmp short _0x97c9
  2058                                  
  2059                                  ; ─────────────────────────────────────────────────────────────────────
  2060                                  
  2061 00008D06 F8                      _0x97df:  clc
  2062 00008D07 C3                      _0x97e0:  ret
  2063                                  
  2064                                  ; ─────────────────────────────────────────────────────────────────────
  2065                                  
  2066 00008D08 F9                      _0x97e1:  stc
  2067 00008D09 C3                      _0x97e2:  ret
  2068                                  
  2069                                  ; ─────────────────────────────────────────────────────────────────────
  2070                                  
  2071 00008D0A 050087                  _0x97e3:  add ax,0x8700
  2072 00008D0D 0003                    _0x97e6:  add [bp+di+0x0],al
  2073 00008D0F 83C807                  _0x97e9:  or ax,0x7
  2074 00008D12 55                      _0x97ec:  push bp
  2075 00008D13 F755F6                  _0x97ed:  not word [di-0xa]
  2076 00008D16 55                      _0x97f0:  push bp
  2077 00008D17 F5                      _0x97f1:  cmc
  2078 00008D18 55                      _0x97f2:  push bp
  2079 00008D19 0400                    _0x97f3:  add al,0x0
  2080 00008D1B 83E8EE                  _0x97f5:  sub ax,0xffee
  2081 00008D1E 4E                      _0x97f8:  dec si
  2082 00008D1F 0300                    _0x97f9:  add ax,[bx+si]
  2083 00008D21 BC57FF                  _0x97fb:  mov sp,0xff57
  2084 00008D24 FE06F77B                _0x97fe:  inc byte [0x7bf7]
  2085 00008D28 A1048E                  _0x9802:  mov ax,[0x8e04]
  2086 00008D2B 83C010                  _0x9805:  add ax,0x10
  2087 00008D2E A3D17B                  _0x9808:  mov [0x7bd1],ax
  2088 00008D31 C706D37B3689            _0x980b:  mov word [0x7bd3],0x8936
  2089 00008D37 BE2B8C                  _0x9811:  mov si,0x8c2b
  2090 00008D3A C706D78D0800            _0x9814:  mov word [0x8dd7],0x8
  2091 00008D40 F604FF                  _0x981a:  test byte [si],0xff
  2092 00008D43 746B                    _0x981d:  jz _0x9843
  2093 00008D45 FE0C                    _0x981f:  dec byte [si]
  2094 00008D47 7451                    _0x9821:  jz _0x982d
  2095 00008D49 803C05                  _0x9823:  cmp byte [si],0x5
  2096 00008D4C 724C                    _0x9826:  jc _0x982d
  2097 00008D4E 803C1E                  _0x9828:  cmp byte [si],0x1e
  2098 00008D51 755D                    _0x982b:  jnz _0x9843
  2099 00008D53 8B5405                  _0x982d:  mov dx,[si+0x5]
  2100 00008D56 56                      _0x9830:  push si
  2101 00008D57 E8FFF3                  _0x9831:  call _0x84b4
  2102 00008D5A 5E                      _0x9834:  pop si
  2103 00008D5B 56                      _0x9835:  push si
  2104 00008D5C 8B4401                  _0x9836:  mov ax,[si+0x1]
  2105 00008D5F 8B5C03                  _0x9839:  mov bx,[si+0x3]
  2106 00008D62 8D7407                  _0x983c:  lea si,[si+0x7]
  2107 00008D65 E83DF4                  _0x983f:  call _0x84f7
  2108 00008D68 5E                      _0x9842:  pop si
  2109 00008D69 83C60A                  _0x9843:  add si,byte +0xa
  2110 00008D6C FF0ED78D                _0x9846:  dec word [0x8dd7]
  2111 00008D70 75CE                    _0x984a:  jnz _0x981a
  2112 00008D72 C706D17B4001            _0x984c:  mov word [0x7bd1],0x140
  2113 00008D78 C706D37B3089            _0x9852:  mov word [0x7bd3],0x8930
  2114 00008D7E FE0EF77B                _0x9858:  dec byte [0x7bf7]
  2115 00008D82 C3                      _0x985c:  ret
  2116                                  
  2117                                  ; ─────────────────────────────────────────────────────────────────────
  2118                                  
  2119 00008D83 BB3B8B                  _0x985d:  mov bx,0x8b3b
  2120 00008D86 EB4A                    _0x9860:  jmp short _0x9865
  2121                                  
  2122                                  ; ─────────────────────────────────────────────────────────────────────
  2123                                  
  2124 00008D88 BB4D8A                  _0x9862:  mov bx,0x8a4d
  2125 00008D8B C706D78D0E00            _0x9865:  mov word [0x8dd7],0xe
  2126 00008D91 803FFF                  _0x986b:  cmp byte [bx],0xff
  2127 00008D94 7503E9A100              _0x986e:  jz _0x98cd
  2128 00008D99 A0D48D                  _0x9870:  mov al,[0x8dd4]
  2129 00008D9C 22470A                  _0x9873:  and al,[bx+0xa]
  2130 00008D9F 7503E99600              _0x9876:  jz _0x98cd
  2131 00008DA4 30F6                    _0x9878:  xor dh,dh
  2132 00008DA6 8A5704                  _0x987a:  mov dl,[bx+0x4]
  2133 00008DA9 89D7                    _0x987d:  mov di,dx
  2134 00008DAB D1E7                    _0x987f:  shl di,1
  2135 00008DAD D1E7                    _0x9881:  shl di,1
  2136 00008DAF D1E7                    _0x9883:  shl di,1
  2137 00008DB1 8A4705                  _0x9885:  mov al,[bx+0x5]
  2138 00008DB4 F626018E                _0x9888:  mul byte [0x8e01]
  2139 00008DB8 D1E0                    _0x988c:  shl ax,1
  2140 00008DBA D1E0                    _0x988e:  shl ax,1
  2141 00008DBC D1E0                    _0x9890:  shl ax,1
  2142 00008DBE D1E0                    _0x9892:  shl ax,1
  2143 00008DC0 D1E0                    _0x9894:  shl ax,1
  2144 00008DC2 01C7                    _0x9896:  add di,ax
  2145 00008DC4 8A5708                  _0x9898:  mov dl,[bx+0x8]
  2146 00008DC7 89D6                    _0x989b:  mov si,dx
  2147 00008DC9 D1E6                    _0x989d:  shl si,1
  2148 00008DCB 8BB4303A                _0x989f:  mov si,[si+0x3a30]
  2149 00008DCF 8A5707                  _0x98a3:  mov dl,[bx+0x7]
  2150 00008DD2 D1E2                    _0x98a6:  shl dx,1
  2151 00008DD4 D1E2                    _0x98a8:  shl dx,1
  2152 00008DD6 D1E2                    _0x98aa:  shl dx,1
  2153 00008DD8 D1E2                    _0x98ac:  shl dx,1
  2154 00008DDA D1E2                    _0x98ae:  shl dx,1
  2155 00008DDC D1E2                    _0x98b0:  shl dx,1
  2156 00008DDE 89D0                    _0x98b2:  mov ax,dx
  2157 00008DE0 D1E2                    _0x98b4:  shl dx,1
  2158 00008DE2 01C6                    _0x98b6:  add si,ax
  2159 00008DE4 01D6                    _0x98b8:  add si,dx
  2160 00008DE6 03770F                  _0x98ba:  add si,[bx+0xf]
  2161 00008DE9 53                      _0x98bd:  push bx
  2162 00008DEA 807F0809                _0x98be:  cmp byte [bx+0x8],0x9
  2163 00008DEE BB1200                  _0x98c2:  mov bx,0x12
  2164 00008DF1 7443                    _0x98c5:  jz _0x98c9
  2165 00008DF3 31DB                    _0x98c7:  xor bx,bx
  2166 00008DF5 E8AE05                  _0x98c9:  call _0x9e3a
  2167 00008DF8 5B                      _0x98cc:  pop bx
  2168 00008DF9 83C311                  _0x98cd:  add bx,byte +0x11
  2169 00008DFC FF0ED78D                _0x98d0:  dec word [0x8dd7]
  2170 00008E00 758F                    _0x98d4:  jnz _0x986b
  2171 00008E02 C3                      _0x98d6:  ret
  2172                                  
  2173                                  ; ─────────────────────────────────────────────────────────────────────
  2174                                  
  2175 00008E03 E8A1F5                  _0x98d7:  call _0x86cd
  2176 00008E06 A1057C                  _0x98da:  mov ax,[0x7c05]
  2177 00008E09 3C53                    _0x98dd:  cmp al,0x53
  2178 00008E0B 7445                    _0x98df:  jz _0x98e5
  2179 00008E0D 3C73                    _0x98e1:  cmp al,0x73
  2180 00008E0F 7546                    _0x98e3:  jnz _0x98ea
  2181 00008E11 8036B88D01              _0x98e5:  xor byte [0x8db8],0x1
  2182 00008E16 3C11                    _0x98ea:  cmp al,0x11
  2183 00008E18 7544                    _0x98ec:  jnz _0x98f1
  2184 00008E1A E912F8                  _0x98ee:  jmp _0x90f3
  2185                                  
  2186                                  ; ─────────────────────────────────────────────────────────────────────
  2187                                  
  2188 00008E1D 803EDD8D16              _0x98f1:  cmp byte [0x8ddd],0x16
  2189 00008E22 7703E9(3A99)            _0x98f6:  jna 0x993a
  2190 00008E27 80EC3B                  _0x98f8:  sub ah,0x3b
  2191 00008E2A 7942                    _0x98fb:  jns _0x98fe
  2192 00008E2C C3                      _0x98fd:  ret
  2193                                  
  2194                                  ; ─────────────────────────────────────────────────────────────────────
  2195                                  
  2196 00008E2D 3A26DA8D                _0x98fe:  cmp ah,[0x8dda]
  2197 00008E31 7242                    _0x9902:  jc _0x9905
  2198 00008E33 C3                      _0x9904:  ret
  2199                                  
  2200                                  ; ─────────────────────────────────────────────────────────────────────
  2201                                  
  2202 00008E34 C606798901              _0x9905:  mov byte [0x8979],0x1
  2203 00008E39 C70659890000            _0x990a:  mov word [0x8959],0x0
  2204 00008E3F C606AE8900              _0x9910:  mov byte [0x89ae],0x0
  2205 00008E44 C606D98D00              _0x9915:  mov byte [0x8dd9],0x0
  2206 00008E49 C606DD8D01              _0x991a:  mov byte [0x8ddd],0x1
  2207 00008E4E 08E4                    _0x991f:  or ah,ah
  2208 00008E50 7545                    _0x9921:  jnz _0x9927
  2209 00008E52 FE0E7989                _0x9923:  dec byte [0x8979]
  2210 00008E56 80FC02                  _0x9927:  cmp ah,0x2
  2211 00008E59 7703E9(3199)            _0x992a:  jna 0x9931
  2212 00008E5E C606AE8902              _0x992c:  mov byte [0x89ae],0x2
  2213 00008E63 7245                    _0x9931:  jc _0x9937
  2214 00008E65 FE06D98D                _0x9933:  inc byte [0x8dd9]
  2215 00008E69 E9C6F7                  _0x9937:  jmp _0x90f6
  2216                                  
  2217                                  ; ─────────────────────────────────────────────────────────────────────
  2218                                  
  2219 00008E6C 3C70                    _0x993a:  cmp al,0x70
  2220 00008E6E 7446                    _0x993c:  jz _0x9943
  2221 00008E70 3C50                    _0x993e:  cmp al,0x50
  2222 00008E72 7442                    _0x9940:  jz _0x9943
  2223 00008E74 C3                      _0x9942:  ret
  2224                                  
  2225                                  ; ─────────────────────────────────────────────────────────────────────
  2226                                  
  2227 00008E75 BA0307                  _0x9943:  mov dx,0x703
  2228 00008E78 E8DEF2                  _0x9946:  call _0x84b4
  2229 00008E7B A1C18D                  _0x9949:  mov ax,[0x8dc1]
  2230 00008E7E 8B1EC38D                _0x994c:  mov bx,[0x8dc3]
  2231 00008E82 BE858C                  _0x9950:  mov si,0x8c85
  2232 00008E85 E81DF3                  _0x9953:  call _0x84f7
  2233 00008E88 E81CF5                  _0x9956:  call _0x86cd
  2234 00008E8B 803E057C20              _0x9959:  cmp byte [0x7c05],0x20
  2235 00008E90 75F6                    _0x995e:  jnz _0x9956
  2236 00008E92 A1C18D                  _0x9960:  mov ax,[0x8dc1]
  2237 00008E95 8B1EC38D                _0x9963:  mov bx,[0x8dc3]
  2238 00008E99 BE998C                  _0x9967:  mov si,0x8c99
  2239 00008E9C E806F3                  _0x996a:  call _0x84f7
  2240 00008E9F C3                      _0x996d:  ret
  2241                                  
  2242                                  ; ─────────────────────────────────────────────────────────────────────
  2243                                  
  2244 00008EA0 F606D58DFF              _0x996e:  test byte [0x8dd5],0xff
  2245 00008EA5 7445                    _0x9973:  jz _0x9979
  2246 00008EA7 FE0ED58D                _0x9975:  dec byte [0x8dd5]
  2247 00008EAB D006D48D                _0x9979:  rol byte [0x8dd4],1
  2248 00008EAF FF06CF8D                _0x997d:  inc word [0x8dcf]
  2249 00008EB3 7547                    _0x9981:  jnz _0x9989
  2250 00008EB5 812ECF8D0001            _0x9983:  sub word [0x8dcf],0x100
  2251 00008EBB 803EDD8D16              _0x9989:  cmp byte [0x8ddd],0x16
  2252 00008EC0 7603E97D00              _0x998e:  ja _0x99cf
  2253 00008EC5 B00F                    _0x9990:  mov al,0xf
  2254 00008EC7 813ECF8D4501            _0x9992:  cmp word [0x8dcf],0x145
  2255 00008ECD 774A                    _0x9998:  ja _0x99a6
  2256 00008ECF B007                    _0x999a:  mov al,0x7
  2257 00008ED1 813ECF8D9600            _0x999c:  cmp word [0x8dcf],0x96
  2258 00008ED7 7240                    _0x99a2:  jc _0x99a6
  2259 00008ED9 B003                    _0x99a4:  mov al,0x3
  2260 00008EDB 8406CF8D                _0x99a6:  test [0x8dcf],al
  2261 00008EDF 7541                    _0x99aa:  jnz _0x99af
  2262 00008EE1 E820FA                  _0x99ac:  call _0x93f5
  2263 00008EE4 B84501                  _0x99af:  mov ax,0x145
  2264 00008EE7 803EDE8D00              _0x99b2:  cmp byte [0x8dde],0x0
  2265 00008EEC 7741                    _0x99b7:  ja _0x99bc
  2266 00008EEE B85802                  _0x99b9:  mov ax,0x258
  2267 00008EF1 3906CF8D                _0x99bc:  cmp [0x8dcf],ax
  2268 00008EF5 754B                    _0x99c0:  jnz _0x99cf
  2269 00008EF7 A1C18D                  _0x99c2:  mov ax,[0x8dc1]
  2270 00008EFA 8B1EC38D                _0x99c5:  mov bx,[0x8dc3]
  2271 00008EFE BEDF8C                  _0x99c9:  mov si,0x8cdf
  2272 00008F01 E8A1F2                  _0x99cc:  call _0x84f7
  2273 00008F04 C3                      _0x99cf:  ret
  2274                                  
  2275                                  ; ─────────────────────────────────────────────────────────────────────
  2276                                  
  2277 00008F05 89DF                    _0x99d0:  mov di,bx
  2278 00008F07 83E7F8                  _0x99d2:  and di,0xfff8
  2279 00008F0A D1EF                    _0x99d6:  shr di,1
  2280 00008F0C 88C1                    _0x99d8:  mov cl,al
  2281 00008F0E 80E103                  _0x99da:  and cl,0x3
  2282 00008F11 30ED                    _0x99dd:  xor ch,ch
  2283 00008F13 01CF                    _0x99df:  add di,cx
  2284 00008F15 24FC                    _0x99e1:  and al,0xfc
  2285 00008F17 B450                    _0x99e3:  mov ah,0x50
  2286 00008F19 F6E4                    _0x99e5:  mul ah
  2287 00008F1B 01C7                    _0x99e7:  add di,ax
  2288 00008F1D 8E063289                _0x99e9:  mov es,[0x8932]
  2289 00008F21 8E1E3489                _0x99ed:  mov ds,[0x8934]
  2290 00008F25 C3                      _0x99f1:  ret
  2291                                  
  2292                                  ; ─────────────────────────────────────────────────────────────────────
  2293                                  
  2294 00008F26 E8DCFF                  _0x99f2:  call _0x99d0
  2295 00008F29 89D9                    _0x99f5:  mov cx,bx
  2296 00008F2B 83E107                  _0x99f7:  and cx,0x7
  2297 00008F2E 744A                    _0x99fb:  jz _0x9a09
  2298 00008F30 B0FF                    _0x99fd:  mov al,0xff
  2299 00008F32 D2E8                    _0x99ff:  shr al,cl
  2300 00008F34 24CC                    _0x9a01:  and al,0xcc
  2301 00008F36 8805                    _0x9a03:  mov [di],al
  2302 00008F38 AA                      _0x9a05:  stosb
  2303 00008F39 83C703                  _0x9a06:  add di,byte +0x3
  2304 00008F3C 89D1                    _0x9a09:  mov cx,dx
  2305 00008F3E 83C307                  _0x9a0b:  add bx,byte +0x7
  2306 00008F41 83E3F8                  _0x9a0e:  and bx,0xfff8
  2307 00008F44 29D9                    _0x9a12:  sub cx,bx
  2308 00008F46 41                      _0x9a14:  inc cx
  2309 00008F47 D1E9                    _0x9a15:  shr cx,1
  2310 00008F49 D1E9                    _0x9a17:  shr cx,1
  2311 00008F4B D1E9                    _0x9a19:  shr cx,1
  2312 00008F4D B0CC                    _0x9a1b:  mov al,0xcc
  2313 00008F4F 8805                    _0x9a1d:  mov [di],al
  2314 00008F51 AA                      _0x9a1f:  stosb
  2315 00008F52 83C703                  _0x9a20:  add di,byte +0x3
  2316 00008F55 E2F8                    _0x9a23:  loop _0x9a1d
  2317 00008F57 89D1                    _0x9a25:  mov cx,dx
  2318 00008F59 83E107                  _0x9a27:  and cx,0x7
  2319 00008F5C 744A                    _0x9a2b:  jz _0x9a39
  2320 00008F5E 41                      _0x9a2d:  inc cx
  2321 00008F5F B0FF                    _0x9a2e:  mov al,0xff
  2322 00008F61 D2E8                    _0x9a30:  shr al,cl
  2323 00008F63 F6D0                    _0x9a32:  not al
  2324 00008F65 24CC                    _0x9a34:  and al,0xcc
  2325 00008F67 8805                    _0x9a36:  mov [di],al
  2326 00008F69 AA                      _0x9a38:  stosb
  2327 00008F6A 8CC8                    _0x9a39:  mov ax,cs
  2328 00008F6C 8ED8                    _0x9a3b:  mov ds,ax
  2329 00008F6E 8EC0                    _0x9a3d:  mov es,ax
  2330 00008F70 C3                      _0x9a3f:  ret
  2331                                  
  2332                                  ; ─────────────────────────────────────────────────────────────────────
  2333                                  
  2334 00008F71 50                      _0x9a40:  push ax
  2335 00008F72 E890FF                  _0x9a41:  call _0x99d0
  2336 00008F75 B8CC33                  _0x9a44:  mov ax,0x33cc
  2337 00008F78 B5C0                    _0x9a47:  mov ch,0xc0
  2338 00008F7A 88D9                    _0x9a49:  mov cl,bl
  2339 00008F7C 80E107                  _0x9a4b:  and cl,0x7
  2340 00008F7F D2CD                    _0x9a4e:  ror ch,cl
  2341 00008F81 20E8                    _0x9a50:  and al,ch
  2342 00008F83 20EC                    _0x9a52:  and ah,ch
  2343 00008F85 5B                      _0x9a54:  pop bx
  2344 00008F86 28DA                    _0x9a55:  sub dl,bl
  2345 00008F88 30F6                    _0x9a57:  xor dh,dh
  2346 00008F8A 42                      _0x9a59:  inc dx
  2347 00008F8B 89D1                    _0x9a5a:  mov cx,dx
  2348 00008F8D 0805                    _0x9a5c:  or [di],al
  2349 00008F8F 260805                  _0x9a5e:  or [es:di],al
  2350 00008F92 47                      _0x9a61:  inc di
  2351 00008F93 86C4                    _0x9a62:  xchg ah,al
  2352 00008F95 F7C70300                _0x9a64:  test di,0x3
  2353 00008F99 7442                    _0x9a68:  jz _0x9a6e
  2354 00008F9B E2F0                    _0x9a6a:  loop _0x9a5c
  2355 00008F9D EB44                    _0x9a6c:  jmp short _0x9a74
  2356                                  
  2357                                  ; ─────────────────────────────────────────────────────────────────────
  2358                                  
  2359 00008F9F 81C73C01                _0x9a6e:  add di,0x13c
  2360 00008FA3 E2E8                    _0x9a72:  loop _0x9a5c
  2361 00008FA5 8CC8                    _0x9a74:  mov ax,cs
  2362 00008FA7 8ED8                    _0x9a76:  mov ds,ax
  2363 00008FA9 8EC0                    _0x9a78:  mov es,ax
  2364 00008FAB C3                      _0x9a7a:  ret
  2365                                  
  2366                                  ; ─────────────────────────────────────────────────────────────────────
  2367                                  
  2368 00008FAC F7C30300                _0x9a7b:  test bx,0x3
  2369 00008FB0 7444                    _0x9a7f:  jz _0x9a88
  2370 00008FB2 83C304                  _0x9a81:  add bx,byte +0x4
  2371 00008FB5 83E3FC                  _0x9a84:  and bx,0xfffc
  2372 00008FB8 89D9                    _0x9a88:  mov cx,bx
  2373 00008FBA 83C302                  _0x9a8a:  add bx,byte +0x2
  2374 00008FBD 50                      _0x9a8d:  push ax
  2375 00008FBE 24FE                    _0x9a8e:  and al,0xfe
  2376 00008FC0 89C2                    _0x9a90:  mov dx,ax
  2377 00008FC2 D1E2                    _0x9a92:  shl dx,1
  2378 00008FC4 B050                    _0x9a94:  mov al,0x50
  2379 00008FC6 F6E1                    _0x9a96:  mul cl
  2380 00008FC8 01C2                    _0x9a98:  add dx,ax
  2381 00008FCA 83C218                  _0x9a9a:  add dx,byte +0x18
  2382 00008FCD 58                      _0x9a9d:  pop ax
  2383 00008FCE C3                      _0x9a9e:  ret
  2384                                  
  2385                                  ; ─────────────────────────────────────────────────────────────────────
  2386                                  
  2387 00008FCF 8B36FC8D                _0x9a9f:  mov si,[0x8dfc]
  2388 00008FD3 A1048E                  _0x9aa3:  mov ax,[0x8e04]
  2389 00008FD6 83C010                  _0x9aa6:  add ax,0x10
  2390 00008FD9 A3D17B                  _0x9aa9:  mov [0x7bd1],ax
  2391 00008FDC C706D37B3689            _0x9aac:  mov word [0x7bd3],0x8936
  2392 00008FE2 E8C0F1                  _0x9ab2:  call _0x84f7
  2393 00008FE5 C706D17B4001            _0x9ab5:  mov word [0x7bd1],0x140
  2394 00008FEB C706D37B3089            _0x9abb:  mov word [0x7bd3],0x8930
  2395 00008FF1 56                      _0x9ac1:  push si
  2396 00008FF2 E87AF3                  _0x9ac2:  call _0x8695
  2397 00008FF5 8B36C58D                _0x9ac5:  mov si,[0x8dc5]
  2398 00008FF9 803CFF                  _0x9ac9:  cmp byte [si],0xff
  2399 00008FFC 744A                    _0x9acc:  jz _0x9ada
  2400 00008FFE AD                      _0x9ace:  lodsw
  2401 00008FFF 89C3                    _0x9acf:  mov bx,ax
  2402 00009001 AD                      _0x9ad1:  lodsw
  2403 00009002 89C2                    _0x9ad2:  mov dx,ax
  2404 00009004 AC                      _0x9ad4:  lodsb
  2405 00009005 E81EFF                  _0x9ad5:  call _0x99f2
  2406 00009008 EBEF                    _0x9ad8:  jmp short _0x9ac9
  2407                                  
  2408                                  ; ─────────────────────────────────────────────────────────────────────
  2409                                  
  2410 0000900A 46                      _0x9ada:  inc si
  2411 0000900B 803CFF                  _0x9adb:  cmp byte [si],0xff
  2412 0000900E 744E                    _0x9ade:  jz _0x9af0
  2413 00009010 AC                      _0x9ae0:  lodsb
  2414 00009011 88C1                    _0x9ae1:  mov cl,al
  2415 00009013 AC                      _0x9ae3:  lodsb
  2416 00009014 88C2                    _0x9ae4:  mov dl,al
  2417 00009016 AD                      _0x9ae6:  lodsw
  2418 00009017 89C3                    _0x9ae7:  mov bx,ax
  2419 00009019 88C8                    _0x9ae9:  mov al,cl
  2420 0000901B E853FF                  _0x9aeb:  call _0x9a40
  2421 0000901E EBEB                    _0x9aee:  jmp short _0x9adb
  2422                                  
  2423                                  ; ─────────────────────────────────────────────────────────────────────
  2424                                  
  2425 00009020 BA0603                  _0x9af0:  mov dx,0x306
  2426 00009023 E833F1                  _0x9af3:  call _0x84b4
  2427 00009026 A1B98D                  _0x9af6:  mov ax,[0x8db9]
  2428 00009029 88E3                    _0x9af9:  mov bl,ah
  2429 0000902B 08C4                    _0x9afb:  or ah,al
  2430 0000902D 7462                    _0x9afd:  jz _0x9b23
  2431 0000902F 30E4                    _0x9aff:  xor ah,ah
  2432 00009031 30FF                    _0x9b01:  xor bh,bh
  2433 00009033 BE7B8C                  _0x9b03:  mov si,0x8c7b
  2434 00009036 E86CF1                  _0x9b06:  call _0x84f7
  2435 00009039 BEB58C                  _0x9b09:  mov si,0x8cb5
  2436 0000903C 803E7489FF              _0x9b0c:  cmp byte [0x8974],0xff
  2437 00009041 7441                    _0x9b11:  jz _0x9b16
  2438 00009043 BEC48C                  _0x9b13:  mov si,0x8cc4
  2439 00009046 E85CF1                  _0x9b16:  call _0x84f7
  2440 00009049 E860FF                  _0x9b19:  call _0x9a7b
  2441 0000904C 89167D89                _0x9b1c:  mov [0x897d],dx
  2442 00009050 E852F1                  _0x9b20:  call _0x84f7
  2443 00009053 BA0604                  _0x9b23:  mov dx,0x406
  2444 00009056 E800F1                  _0x9b26:  call _0x84b4
  2445 00009059 A1BB8D                  _0x9b29:  mov ax,[0x8dbb]
  2446 0000905C 88E3                    _0x9b2c:  mov bl,ah
  2447 0000905E 08C4                    _0x9b2e:  or ah,al
  2448 00009060 7462                    _0x9b30:  jz _0x9b56
  2449 00009062 30E4                    _0x9b32:  xor ah,ah
  2450 00009064 30FF                    _0x9b34:  xor bh,bh
  2451 00009066 BE7B8C                  _0x9b36:  mov si,0x8c7b
  2452 00009069 E839F1                  _0x9b39:  call _0x84f7
  2453 0000906C BEB58C                  _0x9b3c:  mov si,0x8cb5
  2454 0000906F 803EA989FF              _0x9b3f:  cmp byte [0x89a9],0xff
  2455 00009074 7441                    _0x9b44:  jz _0x9b49
  2456 00009076 BEC48C                  _0x9b46:  mov si,0x8cc4
  2457 00009079 E829F1                  _0x9b49:  call _0x84f7
  2458 0000907C E82DFF                  _0x9b4c:  call _0x9a7b
  2459 0000907F 8916B289                _0x9b4f:  mov [0x89b2],dx
  2460 00009083 E81FF1                  _0x9b53:  call _0x84f7
  2461 00009086 FE0E5789                _0x9b56:  dec byte [0x8957]
  2462 0000908A FF0E5189                _0x9b5a:  dec word [0x8951]
  2463 0000908E FE0E8C89                _0x9b5e:  dec byte [0x898c]
  2464 00009092 FF0E8689                _0x9b62:  dec word [0x8986]
  2465 00009096 FE067689                _0x9b66:  inc byte [0x8976]
  2466 0000909A F606D98DFF              _0x9b6a:  test byte [0x8dd9],0xff
  2467 0000909F 7442                    _0x9b6f:  jz _0x9b75
  2468 000090A1 FE06AB89                _0x9b71:  inc byte [0x89ab]
  2469 000090A5 E8E513                  _0x9b75:  call _0xaf0a
  2470 000090A8 BA0306                  _0x9b78:  mov dx,0x603
  2471 000090AB E8ABF0                  _0x9b7b:  call _0x84b4
  2472 000090AE A1BD8D                  _0x9b7e:  mov ax,[0x8dbd]
  2473 000090B1 88E3                    _0x9b81:  mov bl,ah
  2474 000090B3 30E4                    _0x9b83:  xor ah,ah
  2475 000090B5 30FF                    _0x9b85:  xor bh,bh
  2476 000090B7 5E                      _0x9b87:  pop si
  2477 000090B8 E8EAF0                  _0x9b88:  call _0x84f7
  2478 000090BB 803EDD8D16              _0x9b8b:  cmp byte [0x8ddd],0x16
  2479 000090C0 7770                    _0x9b90:  ja _0x9bc4
  2480 000090C2 83C002                  _0x9b92:  add ax,0x2
  2481 000090C5 53                      _0x9b95:  push bx
  2482 000090C6 8A1EDD8D                _0x9b96:  mov bl,[0x8ddd]
  2483 000090CA 30FF                    _0x9b9a:  xor bh,bh
  2484 000090CC 8A977960                _0x9b9c:  mov dl,[bx+0x6079]
  2485 000090D0 D0EA                    _0x9ba0:  shr dl,1
  2486 000090D2 D0EA                    _0x9ba2:  shr dl,1
  2487 000090D4 FEC2                    _0x9ba4:  inc dl
  2488 000090D6 80CA30                  _0x9ba6:  or dl,0x30
  2489 000090D9 8816AE8C                _0x9ba9:  mov [0x8cae],dl
  2490 000090DD 8A977960                _0x9bad:  mov dl,[bx+0x6079]
  2491 000090E1 80E203                  _0x9bb1:  and dl,0x3
  2492 000090E4 FEC2                    _0x9bb4:  inc dl
  2493 000090E6 80CA40                  _0x9bb6:  or dl,0x40
  2494 000090E9 8816AF8C                _0x9bb9:  mov [0x8caf],dl
  2495 000090ED 5B                      _0x9bbd:  pop bx
  2496 000090EE BEAD8C                  _0x9bbe:  mov si,0x8cad
  2497 000090F1 E8B1F0                  _0x9bc1:  call _0x84f7
  2498 000090F4 E86D00                  _0x9bc4:  call _0x9bf6
  2499 000090F7 803EDD8D16              _0x9bc7:  cmp byte [0x8ddd],0x16
  2500 000090FC 773F                    _0x9bcc:  ja _0x9bcf
  2501 000090FE C3                      _0x9bce:  ret
  2502 000090FF B86600                  _0x9bcf:  mov ax,0x66
  2503 00009102 BB5600                  _0x9bd2:  mov bx,0x56
  2504 00009105 8A0EDA8D                _0x9bd5:  mov cl,[0x8dda]
  2505 00009109 30ED                    _0x9bd9:  xor ch,ch
  2506 0000910B 80F904                  _0x9bdb:  cmp cl,0x4
  2507 0000910E 7449                    _0x9bde:  jz _0x9beb
  2508 00009110 BB5C00                  _0x9be0:  mov bx,0x5c
  2509 00009113 80F903                  _0x9be3:  cmp cl,0x3
  2510 00009116 7441                    _0x9be6:  jz _0x9beb
  2511 00009118 BB6800                  _0x9be8:  mov bx,0x68
  2512 0000911B BE077C                  _0x9beb:  mov si,0x7c07
  2513 0000911E 51                      _0x9bee:  push cx
  2514 0000911F E883F0                  _0x9bef:  call _0x84f7
  2515 00009122 59                      _0x9bf2:  pop cx
  2516 00009123 E2F9                    _0x9bf3:  loop _0x9bee
  2517 00009125 C3                      _0x9bf5:  ret
  2518 00009126 A1BF8D                  _0x9bf6:  mov ax,[0x8dbf]
  2519 00009129 88E3                    _0x9bf9:  mov bl,ah
  2520 0000912B 30E4                    _0x9bfb:  xor ah,ah
  2521 0000912D 30FF                    _0x9bfd:  xor bh,bh
  2522 0000912F BEB889                  _0x9bff:  mov si,0x89b8
  2523 00009132 E870F0                  _0x9c02:  call _0x84f7
  2524 00009135 83C304                  _0x9c05:  add bx,byte +0x4
  2525 00009138 E96AF0                  _0x9c08:  jmp _0x84f7
  2526                                  
  2527                                  ; ─────────────────────────────────────────────────────────────────────
  2528                                  
  2529 0000913B F604FF                  _0x9c0b:  test byte [si],0xff
  2530 0000913E 793F                    _0x9c0e:  jns _0x9c11
  2531 00009140 C3                      _0x9c10:  ret
  2532 00009141 8B4403                  _0x9c11:  mov ax,[si+0x3]
  2533 00009144 BB438A                  _0x9c14:  mov bx,0x8a43
  2534 00009147 8B16BF8D                _0x9c17:  mov dx,[0x8dbf]
  2535 0000914B 81C20010                _0x9c1b:  add dx,0x1000
  2536 0000914F BFD389                  _0x9c1f:  mov di,0x89d3
  2537 00009152 B90500                  _0x9c22:  mov cx,0x5
  2538 00009155 3B07                    _0x9c25:  cmp ax,[bx]
  2539 00009157 774A                    _0x9c27:  ja _0x9c35
  2540 00009159 83C302                  _0x9c29:  add bx,byte +0x2
  2541 0000915C 83C717                  _0x9c2c:  add di,byte +0x17
  2542 0000915F 80C60C                  _0x9c2f:  add dh,0xc
  2543 00009162 E2F1                    _0x9c32:  loop _0x9c25
  2544 00009164 C3                      _0x9c34:  ret
  2545                                  
  2546                                  ; ─────────────────────────────────────────────────────────────────────
  2547                                  
  2548 00009165 8916C78D                _0x9c35:  mov [0x8dc7],dx
  2549 00009169 56                      _0x9c39:  push si
  2550 0000916A 57                      _0x9c3a:  push di
  2551 0000916B 49                      _0x9c3b:  dec cx
  2552 0000916C BD4B8A                  _0x9c3c:  mov bp,0x8a4b
  2553 0000916F 7460                    _0x9c3f:  jz _0x9c63
  2554 00009171 BF2F8A                  _0x9c41:  mov di,0x8a2f
  2555 00009174 BE188A                  _0x9c44:  mov si,0x8a18
  2556 00009177 51                      _0x9c47:  push cx
  2557 00009178 56                      _0x9c48:  push si
  2558 00009179 57                      _0x9c49:  push di
  2559 0000917A B91300                  _0x9c4a:  mov cx,0x13
  2560 0000917D F3A4                    _0x9c4d:  rep movsb
  2561                                  
  2562 0000917F 5F                      _0x9c4f:  pop di
  2563 00009180 5E                      _0x9c50:  pop si
  2564 00009181 59                      _0x9c51:  pop cx
  2565 00009182 83EF17                  _0x9c52:  sub di,byte +0x17
  2566 00009185 83EE17                  _0x9c55:  sub si,byte +0x17
  2567 00009188 8B56FE                  _0x9c58:  mov dx,[bp-0x2]
  2568 0000918B 895600                  _0x9c5b:  mov [bp+0x0],dx
  2569 0000918E 83ED02                  _0x9c5e:  sub bp,byte +0x2
  2570 00009191 E2E4                    _0x9c61:  loop _0x9c47
  2571 00009193 894600                  _0x9c63:  mov [bp+0x0],ax
  2572 00009196 5F                      _0x9c66:  pop di
  2573 00009197 5E                      _0x9c67:  pop si
  2574 00009198 57                      _0x9c68:  push di
  2575 00009199 B91300                  _0x9c69:  mov cx,0x13
  2576 0000919C B020                    _0x9c6c:  mov al,0x20
  2577 0000919E F3AA                    _0x9c6e:  rep stosb
  2578                                  
  2579 000091A0 5F                      _0x9c70:  pop di
  2580 000091A1 4F                      _0x9c71:  dec di
  2581 000091A2 B90500                  _0x9c72:  mov cx,0x5
  2582 000091A5 56                      _0x9c75:  push si
  2583 000091A6 8D7404                  _0x9c76:  lea si,[si+0x4]
  2584 000091A9 47                      _0x9c79:  inc di
  2585 000091AA 46                      _0x9c7a:  inc si
  2586 000091AB 803C30                  _0x9c7b:  cmp byte [si],0x30
  2587 000091AE E1(79)                  _0x9c7e:  loope 0x9c79
  2588 000091B0 41                      _0x9c80:  inc cx
  2589 000091B1 F3A4                    _0x9c81:  rep movsb
  2590                                  
  2591 000091B3 47                      _0x9c83:  inc di
  2592 000091B4 893EC98D                _0x9c84:  mov [0x8dc9],di
  2593 000091B8 C706CB8D0000            _0x9c88:  mov word [0x8dcb],0x0
  2594 000091BE E865FF                  _0x9c8e:  call _0x9bf6
  2595 000091C1 5E                      _0x9c91:  pop si
  2596 000091C2 BA0406                  _0x9c92:  mov dx,0x604
  2597 000091C5 81FE4E89                _0x9c95:  cmp si,0x894e
  2598 000091C9 BEF68C                  _0x9c99:  mov si,0x8cf6
  2599 000091CC 7441                    _0x9c9c:  jz _0x9ca1
  2600 000091CE BE0A8D                  _0x9c9e:  mov si,0x8d0a
  2601 000091D1 81EA0101                _0x9ca1:  sub dx,0x101
  2602 000091D5 81E20707                _0x9ca5:  and dx,0x707
  2603 000091D9 52                      _0x9ca9:  push dx
  2604 000091DA 56                      _0x9caa:  push si
  2605 000091DB E87BEF                  _0x9cab:  call _0x84b4
  2606 000091DE A1C18D                  _0x9cae:  mov ax,[0x8dc1]
  2607 000091E1 8B1EC38D                _0x9cb1:  mov bx,[0x8dc3]
  2608 000091E5 E8BDEF                  _0x9cb5:  call _0x84f7
  2609 000091E8 E8BCF1                  _0x9cb8:  call _0x86cd
  2610 000091EB A1057C                  _0x9cbb:  mov ax,[0x7c05]
  2611 000091EE 08E4                    _0x9cbe:  or ah,ah
  2612 000091F0 7466                    _0x9cc0:  jz _0x9cea
  2613 000091F2 3C20                    _0x9cc2:  cmp al,0x20
  2614 000091F4 7262                    _0x9cc4:  jc _0x9cea
  2615 000091F6 3C7A                    _0x9cc6:  cmp al,0x7a
  2616 000091F8 775E                    _0x9cc8:  ja _0x9cea
  2617 000091FA 3C61                    _0x9cca:  cmp al,0x61
  2618 000091FC 7240                    _0x9ccc:  jc _0x9cd0
  2619 000091FE 24DF                    _0x9cce:  and al,0xdf
  2620 00009200 3C5A                    _0x9cd0:  cmp al,0x5a
  2621 00009202 7754                    _0x9cd2:  ja _0x9cea
  2622 00009204 8B1ECB8D                _0x9cd4:  mov bx,[0x8dcb]
  2623 00009208 8B3EC98D                _0x9cd8:  mov di,[0x8dc9]
  2624 0000920C 8801                    _0x9cdc:  mov [bx+di],al
  2625 0000920E 43                      _0x9cde:  inc bx
  2626 0000920F 83FB0D                  _0x9cdf:  cmp bx,byte +0xd
  2627 00009212 7477                    _0x9ce2:  jz _0x9d1d
  2628 00009214 891ECB8D                _0x9ce4:  mov [0x8dcb],bx
  2629 00009218 EB71                    _0x9ce8:  jmp short _0x9d1d
  2630                                  
  2631                                  ; ─────────────────────────────────────────────────────────────────────
  2632                                  
  2633 0000921A 3C08                    _0x9cea:  cmp al,0x8
  2634 0000921C 7559                    _0x9cec:  jnz _0x9d09
  2635 0000921E FF0ECB8D                _0x9cee:  dec word [0x8dcb]
  2636 00009222 7942                    _0x9cf2:  jns _0x9cf8
  2637 00009224 FF06CB8D                _0x9cf4:  inc word [0x8dcb]
  2638 00009228 8B1ECB8D                _0x9cf8:  mov bx,[0x8dcb]
  2639 0000922C 8B3EC98D                _0x9cfc:  mov di,[0x8dc9]
  2640 00009230 C60120                  _0x9d00:  mov byte [bx+di],0x20
  2641 00009233 C6450C20                _0x9d03:  mov byte [di+0xc],0x20
  2642 00009237 EB52                    _0x9d07:  jmp short _0x9d1d
  2643                                  
  2644                                  ; ─────────────────────────────────────────────────────────────────────
  2645                                  
  2646 00009239 3C0D                    _0x9d09:  cmp al,0xd
  2647 0000923B 7544                    _0x9d0b:  jnz _0x9d13
  2648 0000923D 83C404                  _0x9d0d:  add sp,byte +0x4
  2649 00009240 EB6D                    _0x9d10:  jmp short _0x9d41
  2650                                  
  2651                                  ; ─────────────────────────────────────────────────────────────────────
  2652                                  
  2653 00009242 90                      _0x9d12:  nop
  2654 00009243 3D0053                  _0x9d13:  cmp ax,0x5300
  2655 00009246 74D6                    _0x9d16:  jz _0x9cee
  2656 00009248 3D004B                  _0x9d18:  cmp ax,0x4b00
  2657 0000924B 74D1                    _0x9d1b:  jz _0x9cee
  2658 0000924D A1C78D                  _0x9d1d:  mov ax,[0x8dc7]
  2659 00009250 88E3                    _0x9d20:  mov bl,ah
  2660 00009252 30E4                    _0x9d22:  xor ah,ah
  2661 00009254 30FF                    _0x9d24:  xor bh,bh
  2662 00009256 8B36C98D                _0x9d26:  mov si,[0x8dc9]
  2663 0000925A 83EE06                  _0x9d2a:  sub si,byte +0x6
  2664 0000925D FF7413                  _0x9d2d:  push word [si+0x13]
  2665 00009260 C6441300                _0x9d30:  mov byte [si+0x13],0x0
  2666 00009264 56                      _0x9d34:  push si
  2667 00009265 E83DEF                  _0x9d35:  call _0x84f7
  2668 00009268 5E                      _0x9d38:  pop si
  2669 00009269 8F4413                  _0x9d39:  pop word [si+0x13]
  2670 0000926C 5E                      _0x9d3c:  pop si
  2671 0000926D 5A                      _0x9d3d:  pop dx
  2672 0000926E E960FF                  _0x9d3e:  jmp _0x9ca1
  2673                                  
  2674                                  ; ─────────────────────────────────────────────────────────────────────
  2675                                  
  2676 00009271 31C0                    _0x9d41:  xor ax,ax
  2677 00009273 B90100                  _0x9d43:  mov cx,0x1
  2678 00009276 BA0700                  _0x9d46:  mov dx,0x7
  2679 00009279 BBD089                  _0x9d49:  mov bx,0x89d0
  2680                                  _0x9d4c:  jmp _0x99f
  2680          ******************       error: symbol `_0x99f' not defined
  2681                                  
  2682                                  ; ─────────────────────────────────────────────────────────────────────
  2683                                  
  2684 0000927C A0DB8D                  _0x9d4f:  mov al,[0x8ddb]
  2685 0000927F B414                    _0x9d52:  mov ah,0x14
  2686 00009281 F6E4                    _0x9d54:  mul ah
  2687 00009283 89C6                    _0x9d56:  mov si,ax
  2688 00009285 81C62A61                _0x9d58:  add si,0x612a
  2689 00009289 AC                      _0x9d5c:  lodsb
  2690 0000928A 30E4                    _0x9d5d:  xor ah,ah
  2691 0000928C A3B28D                  _0x9d5f:  mov [0x8db2],ax
  2692 0000928F AC                      _0x9d62:  lodsb
  2693 00009290 A3B08D                  _0x9d63:  mov [0x8db0],ax
  2694 00009293 AD                      _0x9d66:  lodsw
  2695 00009294 A3AC8D                  _0x9d67:  mov [0x8dac],ax
  2696 00009297 AD                      _0x9d6a:  lodsw
  2697 00009298 A3AE8D                  _0x9d6b:  mov [0x8dae],ax
  2698 0000929B AD                      _0x9d6e:  lodsw
  2699 0000929C A3B98D                  _0x9d6f:  mov [0x8db9],ax
  2700 0000929F 0416                    _0x9d72:  add al,0x16
  2701 000092A1 A24F89                  _0x9d74:  mov [0x894f],al
  2702 000092A4 88265089                _0x9d77:  mov [0x8950],ah
  2703 000092A8 AD                      _0x9d7b:  lodsw
  2704 000092A9 A3BB8D                  _0x9d7c:  mov [0x8dbb],ax
  2705 000092AC 0416                    _0x9d7f:  add al,0x16
  2706 000092AE A28489                  _0x9d81:  mov [0x8984],al
  2707 000092B1 88268589                _0x9d84:  mov [0x8985],ah
  2708 000092B5 AD                      _0x9d88:  lodsw
  2709 000092B6 A3BD8D                  _0x9d89:  mov [0x8dbd],ax
  2710 000092B9 AD                      _0x9d8c:  lodsw
  2711 000092BA A3BF8D                  _0x9d8d:  mov [0x8dbf],ax
  2712 000092BD AD                      _0x9d90:  lodsw
  2713 000092BE A38E89                  _0x9d91:  mov [0x898e],ax
  2714 000092C1 AD                      _0x9d94:  lodsw
  2715 000092C2 88E3                    _0x9d95:  mov bl,ah
  2716 000092C4 30FF                    _0x9d97:  xor bh,bh
  2717 000092C6 30E4                    _0x9d99:  xor ah,ah
  2718 000092C8 A3C18D                  _0x9d9b:  mov [0x8dc1],ax
  2719 000092CB 891EC38D                _0x9d9e:  mov [0x8dc3],bx
  2720 000092CF AD                      _0x9da2:  lodsw
  2721 000092D0 A3C58D                  _0x9da3:  mov [0x8dc5],ax
  2722 000092D3 A1B28D                  _0x9da6:  mov ax,[0x8db2]
  2723 000092D6 D1E0                    _0x9da9:  shl ax,1
  2724 000092D8 89C2                    _0x9dab:  mov dx,ax
  2725 000092DA 2D4001                  _0x9dad:  sub ax,0x140
  2726 000092DD F7D8                    _0x9db0:  neg ax
  2727 000092DF A3B48D                  _0x9db2:  mov [0x8db4],ax
  2728 000092E2 30E4                    _0x9db5:  xor ah,ah
  2729 000092E4 A0018E                  _0x9db7:  mov al,[0x8e01]
  2730 000092E7 D1E0                    _0x9dba:  shl ax,1
  2731 000092E9 D1E0                    _0x9dbc:  shl ax,1
  2732 000092EB D1E0                    _0x9dbe:  shl ax,1
  2733 000092ED D1E0                    _0x9dc0:  shl ax,1
  2734 000092EF 29D0                    _0x9dc2:  sub ax,dx
  2735 000092F1 A3B68D                  _0x9dc4:  mov [0x8db6],ax
  2736 000092F4 30E4                    _0x9dc7:  xor ah,ah
  2737 000092F6 A0018E                  _0x9dc9:  mov al,[0x8e01]
  2738 000092F9 D1E0                    _0x9dcc:  shl ax,1
  2739 000092FB 8B1EB28D                _0x9dce:  mov bx,[0x8db2]
  2740 000092FF D1EB                    _0x9dd2:  shr bx,1
  2741 00009301 D1EB                    _0x9dd4:  shr bx,1
  2742 00009303 29D8                    _0x9dd6:  sub ax,bx
  2743 00009305 A2AA8D                  _0x9dd8:  mov [0x8daa],al
  2744 00009308 A0008E                  _0x9ddb:  mov al,[0x8e00]
  2745 0000930B D1E0                    _0x9dde:  shl ax,1
  2746 0000930D 8B1EB08D                _0x9de0:  mov bx,[0x8db0]
  2747 00009311 D1EB                    _0x9de4:  shr bx,1
  2748 00009313 29D8                    _0x9de6:  sub ax,bx
  2749 00009315 A2AB8D                  _0x9de8:  mov [0x8dab],al
  2750 00009318 C3                      _0x9deb:  ret
  2751                                  
  2752                                  ; ─────────────────────────────────────────────────────────────────────
  2753                                  
  2754 00009319 BBD089                  _0x9dec:  mov bx,0x89d0
  2755 0000931C 31C0                    _0x9def:  xor ax,ax
  2756 0000931E B90100                  _0x9df1:  mov cx,0x1
  2757 00009321 BA0700                  _0x9df4:  mov dx,0x7
  2758                                  _0x9df7:  jmp _0x8b6
  2758          ******************       error: symbol `_0x8b6' not defined
  2759                                  
  2760                                  ; ─────────────────────────────────────────────────────────────────────
  2761                                  
  2762 00009324 BE4E89                  _0x9dfa:  mov si,0x894e
  2763 00009327 31DB                    _0x9dfd:  xor bx,bx
  2764 00009329 F6064E89FF              _0x9dff:  test byte [0x894e],0xff
  2765 0000932E 7845                    _0x9e04:  js _0x9e09
  2766 00009330 E85000                  _0x9e06:  call _0x9e17
  2767 00009333 BE8389                  _0x9e09:  mov si,0x8983
  2768 00009336 F6068389FF              _0x9e0c:  test byte [0x8983],0xff
  2769 0000933B 7943                    _0x9e11:  jns _0x9e14
  2770 0000933D C3                      _0x9e13:  ret
  2771                                  
  2772                                  ; ─────────────────────────────────────────────────────────────────────
  2773                                  
  2774 0000933E BB0600                  _0x9e14:  mov bx,0x6
  2775 00009341 803C02                  _0x9e17:  cmp byte [si],0x2
  2776 00009344 7245                    _0x9e1a:  jc _0x9e1f
  2777 00009346 BB0C00                  _0x9e1c:  mov bx,0xc
  2778 00009349 803C01                  _0x9e1f:  cmp byte [si],0x1
  2779 0000934C 7544                    _0x9e22:  jnz _0x9e26
  2780 0000934E FE04                    _0x9e24:  inc byte [si]
  2781 00009350 8B7C11                  _0x9e26:  mov di,[si+0x11]
  2782 00009353 8B440F                  _0x9e29:  mov ax,[si+0xf]
  2783 00009356 894411                  _0x9e2c:  mov [si+0x11],ax
  2784 00009359 8B5415                  _0x9e2f:  mov dx,[si+0x15]
  2785 0000935C 8B4413                  _0x9e32:  mov ax,[si+0x13]
  2786 0000935F 894415                  _0x9e35:  mov [si+0x15],ax
  2787 00009362 89D6                    _0x9e38:  mov si,dx
  2788 00009364 8B16048E                _0x9e3a:  mov dx,[0x8e04]
  2789 00009368 B90200                  _0x9e3e:  mov cx,0x2
  2790 0000936B 01CA                    _0x9e41:  add dx,cx
  2791 0000936D 8E873689                _0x9e43:  mov es,[bx-0x76ca]
  2792 00009371 89FD                    _0x9e47:  mov bp,di
  2793 00009373 AD                      _0x9e49:  lodsw
  2794                                  
  2795 00009374 26310503F9AD-           _0x9e4a: times 31 db 0x26,0x31,0x05,0x03,0xF9,0xAD  ; =  MACRO: xor [es:di],ax  \n   add di,cx  \n   lodsw
  2795 00009374 <rep 1Fh>          
  2796                                  
  2797 0000942E 263105                  _0x9f04:  xor [es:di],ax
  2798 00009431 89EF                    _0x9f07:  mov di,bp
  2799 00009433 8E873889                _0x9f09:  mov es,[bx-0x76c8]
  2800 00009437 AD                      _0x9f0d:  lodsw
  2801                                  
  2802 00009438 26310503F9AD-           _0x9f0e: times 31 db 0x26,0x31,0x05,0x03,0xF9,0xAD  ; =  MACRO: xor [es:di],ax  \n   add di,cx  \n   lodsw
  2802 00009438 <rep 1Fh>          
  2803                                  
  2804 000094F2 263105                  _0x9fc8:  xor [es:di],ax
  2805 000094F5 89EF                    _0x9fcb:  mov di,bp
  2806 000094F7 8E873A89                _0x9fcd:  mov es,[bx-0x76c6]
  2807 000094FB AD                      _0x9fd1:  lodsw
  2808                                  
  2809 000094FC 26310503F9AD-           _0x9fd2: times 31 db 0x26,0x31,0x05,0x03,0xF9,0xAD  ; =  MACRO: xor [es:di],ax  \n   add di,cx  \n   lodsw
  2809 000094FC <rep 1Fh>          
  2810                                  
  2811 000095B6 263105                  _0xa08c:  xor [es:di],ax
  2812 000095B9 89EF                    _0xa08f:  mov di,bp
  2813 000095BB 8CC8                    _0xa091:  mov ax,cs
  2814 000095BD 8EC0                    _0xa093:  mov es,ax
  2815 000095BF C3                      _0xa095:  ret
  2816                                  
  2817                                  ; ─────────────────────────────────────────────────────────────────────
  2818                                  
  2819 000095C0 BE4E89                  _0xa096:  mov si,0x894e
  2820 000095C3 F6064E89FF              _0xa099:  test byte [0x894e],0xff
  2821 000095C8 7845                    _0xa09e:  js _0xa0a3
  2822 000095CA E84D00                  _0xa0a0:  call _0xa0ae
  2823 000095CD BE8389                  _0xa0a3:  mov si,0x8983
  2824 000095D0 F6068389FF              _0xa0a6:  test byte [0x8983],0xff
  2825 000095D5 7943                    _0xa0ab:  jns _0xa0ae
  2826 000095D7 C3                      _0xa0ad:  ret
  2827                                  
  2828                                  ; ─────────────────────────────────────────────────────────────────────
  2829                                  
  2830 000095D8 8A5C2B                  _0xa0ae:  mov bl,[si+0x2b]
  2831 000095DB 30FF                    _0xa0b1:  xor bh,bh
  2832 000095DD 56                      _0xa0b3:  push si
  2833 000095DE E8C0ED                  _0xa0b4:  call _0x86c7
  2834 000095E1 5E                      _0xa0b7:  pop si
  2835 000095E2 F64432FF                _0xa0b8:  test byte [si+0x32],0xff
  2836 000095E6 7455                    _0xa0bc:  jz _0xa0d1
  2837 000095E8 FE4C32                  _0xa0be:  dec byte [si+0x32]
  2838 000095EB C606FE7B50              _0xa0c1:  mov byte [0x7bfe],0x50
  2839 000095F0 C606FF7B50              _0xa0c6:  mov byte [0x7bff],0x50
  2840 000095F5 C706007C0000            _0xa0cb:  mov word [0x7c00],0x0
  2841 000095FB 8A4423                  _0xa0d1:  mov al,[si+0x23]
  2842 000095FE 884424                  _0xa0d4:  mov [si+0x24],al
  2843 00009601 98                      _0xa0d7:  cbw
  2844 00009602 89C3                    _0xa0d8:  mov bx,ax
  2845 00009604 8B441D                  _0xa0da:  mov ax,[si+0x1d]
  2846 00009607 89441F                  _0xa0dd:  mov [si+0x1f],ax
  2847 0000960A 08E0                    _0xa0e0:  or al,ah
  2848 0000960C 2401                    _0xa0e2:  and al,0x1
  2849 0000960E 884425                  _0xa0e4:  mov [si+0x25],al
  2850 00009611 31D2                    _0xa0e7:  xor dx,dx
  2851 00009613 B402                    _0xa0e9:  mov ah,0x2
  2852 00009615 30C0                    _0xa0eb:  xor al,al
  2853 00009617 803EFF7B3C              _0xa0ed:  cmp byte [0x7bff],0x3c
  2854 0000961C 7745                    _0xa0f2:  ja _0xa0f7
  2855 0000961E B401                    _0xa0f4:  mov ah,0x1
  2856 00009620 4A                      _0xa0f6:  dec dx
  2857 00009621 803EFF7B64              _0xa0f7:  cmp byte [0x7bff],0x64
  2858 00009626 7247                    _0xa0fc:  jc _0xa103
  2859 00009628 B004                    _0xa0fe:  mov al,0x4
  2860 0000962A B4FF                    _0xa100:  mov ah,0xff
  2861 0000962C 4A                      _0xa102:  dec dx
  2862 0000962D 803EFE7B64              _0xa103:  cmp byte [0x7bfe],0x64
  2863 00009632 7245                    _0xa108:  jc _0xa10d
  2864 00009634 00E0                    _0xa10a:  add al,ah
  2865 00009636 4A                      _0xa10c:  dec dx
  2866 00009637 803EFE7B3C              _0xa10d:  cmp byte [0x7bfe],0x3c
  2867 0000963C 7747                    _0xa112:  ja _0xa119
  2868 0000963E 28E0                    _0xa114:  sub al,ah
  2869 00009640 2407                    _0xa116:  and al,0x7
  2870 00009642 4A                      _0xa118:  dec dx
  2871 00009643 09D2                    _0xa119:  or dx,dx
  2872 00009645 7957                    _0xa11b:  jns _0xa132
  2873 00009647 D1E3                    _0xa11d:  shl bx,1
  2874 00009649 D1E3                    _0xa11f:  shl bx,1
  2875 0000964B D1E3                    _0xa121:  shl bx,1
  2876 0000964D 81C32C8D                _0xa123:  add bx,0x8d2c
  2877 00009651 D7                      _0xa127:  xlatb
  2878 00009652 884423                  _0xa128:  mov [si+0x23],al
  2879 00009655 C6442A02                _0xa12b:  mov byte [si+0x2a],0x2
  2880 00009659 FE4425                  _0xa12f:  inc byte [si+0x25]
  2881 0000965C F606007CFF              _0xa132:  test byte [0x7c00],0xff
  2882 00009661 7445                    _0xa137:  jz _0xa13c
  2883 00009663 FE442C                  _0xa139:  inc byte [si+0x2c]
  2884 00009666 C3                      _0xa13c:  ret
  2885                                  
  2886                                  ; ─────────────────────────────────────────────────────────────────────
  2887                                  
  2888 00009667 BF4E89                  _0xa13d:  mov di,0x894e
  2889 0000966A BE4D8A                  _0xa140:  mov si,0x8a4d
  2890 0000966D F6064E89FF              _0xa143:  test byte [0x894e],0xff
  2891 00009672 7845                    _0xa148:  js _0xa14d
  2892 00009674 E85000                  _0xa14a:  call _0xa15b
  2893 00009677 BF8389                  _0xa14d:  mov di,0x8983
  2894 0000967A BE198B                  _0xa150:  mov si,0x8b19
  2895 0000967D F6068389FF              _0xa153:  test byte [0x8983],0xff
  2896 00009682 7943                    _0xa158:  jns _0xa15b
  2897 00009684 C3                      _0xa15a:  ret
  2898                                  
  2899                                  ; ─────────────────────────────────────────────────────────────────────
  2900                                  
  2901 00009685 F6452CFF                _0xa15b:  test byte [di+0x2c],0xff
  2902 00009689 7503E99900              _0xa15f:  jz _0xa1bb
  2903 0000968E F74521FFFF              _0xa161:  test word [di+0x21],0xffff
  2904 00009693 7403E98F00              _0xa166:  jnz _0xa1bb
  2905 00009698 803CFF                  _0xa168:  cmp byte [si],0xff
  2906 0000969B 7444                    _0xa16b:  jz _0xa175
  2907 0000969D 83C611                  _0xa16d:  add si,byte +0x11
  2908 000096A0 803CFF                  _0xa170:  cmp byte [si],0xff
  2909 000096A3 7403E97F00              _0xa173:  jnz _0xa1bb
  2910 000096A8 E8CFF1                  _0xa175:  call _0x936b
  2911 000096AB 8A4523                  _0xa178:  mov al,[di+0x23]
  2912 000096AE 884409                  _0xa17b:  mov [si+0x9],al
  2913 000096B1 C6440603                _0xa17e:  mov byte [si+0x6],0x3
  2914 000096B5 8B4519                  _0xa182:  mov ax,[di+0x19]
  2915 000096B8 8904                    _0xa185:  mov [si],ax
  2916 000096BA 8B451D                  _0xa187:  mov ax,[di+0x1d]
  2917 000096BD 894404                  _0xa18a:  mov [si+0x4],ax
  2918 000096C0 C6440AFF                _0xa18d:  mov byte [si+0xa],0xff
  2919 000096C4 B00A                    _0xa191:  mov al,0xa
  2920 000096C6 803D01                  _0xa193:  cmp byte [di],0x1
  2921 000096C9 753B                    _0xa196:  jnz _0xa19a
  2922 000096CB B003                    _0xa198:  mov al,0x3
  2923 000096CD 88440E                  _0xa19a:  mov [si+0xe],al
  2924 000096D0 C6452C00                _0xa19d:  mov byte [di+0x2c],0x0
  2925 000096D4 B80200                  _0xa1a1:  mov ax,0x2
  2926                                  _0xa1a4:  call _0x2a2
  2926          ******************       error: symbol `_0x2a2' not defined
  2927 000096D7 8A4401                  _0xa1a7:  mov al,[si+0x1]
  2928 000096DA F626018E                _0xa1aa:  mul byte [0x8e01]
  2929 000096DE 8A1C                    _0xa1ae:  mov bl,[si]
  2930 000096E0 30FF                    _0xa1b0:  xor bh,bh
  2931 000096E2 01C3                    _0xa1b2:  add bx,ax
  2932 000096E4 81C3C05C                _0xa1b4:  add bx,0x5cc0
  2933 000096E8 895C0B                  _0xa1b8:  mov [si+0xb],bx
  2934 000096EB C3                      _0xa1bb:  ret
  2935 000096EC BE4D8A                  _0xa1bc:  mov si,0x8a4d
  2936 000096EF BD4E89                  _0xa1bf:  mov bp,0x894e
  2937 000096F2 C706D78D0200            _0xa1c2:  mov word [0x8dd7],0x2
  2938 000096F8 E84800                  _0xa1c8:  call _0xa1d7
  2939 000096FB BE198B                  _0xa1cb:  mov si,0x8b19
  2940 000096FE BD8389                  _0xa1ce:  mov bp,0x8983
  2941 00009701 C706D78D0200            _0xa1d1:  mov word [0x8dd7],0x2
  2942 00009707 803CFF                  _0xa1d7:  cmp byte [si],0xff
  2943 0000970A 7503E99C00              _0xa1da:  jz _0xa23f
  2944 0000970F BF6F8A                  _0xa1dc:  mov di,0x8a6f
  2945 00009712 B90A00                  _0xa1df:  mov cx,0xa
  2946 00009715 803DFF                  _0xa1e2:  cmp byte [di],0xff
  2947 00009718 7503E98900              _0xa1e5:  jz _0xa23a
  2948 0000971D 807D0803                _0xa1e7:  cmp byte [di+0x8],0x3
  2949 00009721 7303E98000              _0xa1eb:  jc _0xa23a
  2950 00009726 8A4404                  _0xa1ed:  mov al,[si+0x4]
  2951 00009729 2A4504                  _0xa1f0:  sub al,[di+0x4]
  2952 0000972C 7935                    _0xa1f3:  jns _0xa1f7
  2953 0000972E F6D8                    _0xa1f5:  neg al
  2954 00009730 3C01                    _0xa1f7:  cmp al,0x1
  2955 00009732 7772                    _0xa1f9:  ja _0xa23a
  2956 00009734 8A4405                  _0xa1fb:  mov al,[si+0x5]
  2957 00009737 2A4505                  _0xa1fe:  sub al,[di+0x5]
  2958 0000973A 7935                    _0xa201:  jns _0xa205
  2959 0000973C F6D8                    _0xa203:  neg al
  2960 0000973E 3C01                    _0xa205:  cmp al,0x1
  2961 00009740 7764                    _0xa207:  ja _0xa23a
  2962 00009742 C604FF                  _0xa209:  mov byte [si],0xff
  2963 00009745 C684F800FF              _0xa20c:  mov byte [si+0xf8],0xff
  2964 0000974A C6450801                _0xa211:  mov byte [di+0x8],0x1
  2965 0000974E C6450904                _0xa215:  mov byte [di+0x9],0x4
  2966 00009752 C6450E05                _0xa219:  mov byte [di+0xe],0x5
  2967 00009756 C6450603                _0xa21d:  mov byte [di+0x6],0x3
  2968 0000975A C6450AFF                _0xa221:  mov byte [di+0xa],0xff
  2969 0000975E C7450F0000              _0xa225:  mov word [di+0xf],0x0
  2970 00009763 C685F800FF              _0xa22a:  mov byte [di+0xf8],0xff
  2971 00009768 80462803                _0xa22f:  add byte [bp+0x28],0x3
  2972 0000976C 31C0                    _0xa233:  xor ax,ax
  2973                                  _0xa235:  call _0x2a2
  2973          ******************       error: symbol `_0x2a2' not defined
  2974 0000976E EB3B                    _0xa238:  jmp short _0xa23f
  2975 00009770 83C711                  _0xa23a:  add di,byte +0x11
  2976 00009773 E2A0                    _0xa23d:  loop _0xa1e2
  2977 00009775 83C611                  _0xa23f:  add si,byte +0x11
  2978 00009778 FF0ED78D                _0xa242:  dec word [0x8dd7]
  2979 0000977C 7589                    _0xa246:  jnz _0xa1d7
  2980 0000977E C3                      _0xa248:  ret
  2981                                  
  2982                                  ; ─────────────────────────────────────────────────────────────────────
  2983                                  
  2984 0000977F BD8389                  _0xa249:  mov bp,0x8983
  2985 00009782 BF4E89                  _0xa24c:  mov di,0x894e
  2986 00009785 BE6F8A                  _0xa24f:  mov si,0x8a6f
  2987 00009788 F6064E89FF              _0xa252:  test byte [0x894e],0xff
  2988 0000978D 7839                    _0xa257:  js _0xa25c
  2989 0000978F E84700                  _0xa259:  call _0xa26d
  2990 00009792 F6068389FF              _0xa25c:  test byte [0x8983],0xff
  2991 00009797 7937                    _0xa261:  jns _0xa264
  2992 00009799 C3                      _0xa263:  ret
  2993                                  
  2994                                  ; ─────────────────────────────────────────────────────────────────────
  2995                                  
  2996 0000979A BF8389                  _0xa264:  mov di,0x8983
  2997 0000979D BE4D8A                  _0xa267:  mov si,0x8a4d
  2998 000097A0 BD4E89                  _0xa26a:  mov bp,0x894e
  2999 000097A3 B90C00                  _0xa26d:  mov cx,0xc
  3000 000097A6 803CFF                  _0xa270:  cmp byte [si],0xff
  3001 000097A9 7458                    _0xa273:  jz _0xa297
  3002 000097AB 807C0801                _0xa275:  cmp byte [si+0x8],0x1
  3003 000097AF 7452                    _0xa279:  jz _0xa297
  3004 000097B1 8A451D                  _0xa27b:  mov al,[di+0x1d]
  3005 000097B4 2A4404                  _0xa27e:  sub al,[si+0x4]
  3006 000097B7 7938                    _0xa281:  jns _0xa285
  3007 000097B9 F6D8                    _0xa283:  neg al
  3008 000097BB 3C01                    _0xa285:  cmp al,0x1
  3009 000097BD 7744                    _0xa287:  ja _0xa297
  3010 000097BF 8A451E                  _0xa289:  mov al,[di+0x1e]
  3011 000097C2 2A4405                  _0xa28c:  sub al,[si+0x5]
  3012 000097C5 7938                    _0xa28f:  jns _0xa293
  3013 000097C7 F6D8                    _0xa291:  neg al
  3014 000097C9 3C02                    _0xa293:  cmp al,0x2
  3015 000097CB 723C                    _0xa295:  jc _0xa29d
  3016 000097CD 83C611                  _0xa297:  add si,byte +0x11
  3017 000097D0 E2D4                    _0xa29a:  loop _0xa270
  3018 000097D2 C3                      _0xa29c:  ret
  3019                                  
  3020                                  ; ─────────────────────────────────────────────────────────────────────
  3021                                  
  3022 000097D3 B80100                  _0xa29d:  mov ax,0x1
  3023                                  _0xa2a0:  call _0x2a2
  3023          ******************       error: symbol `_0x2a2' not defined
  3024 000097D6 C6452D01                _0xa2a3:  mov byte [di+0x2d],0x1
  3025 000097DA E89DF0                  _0xa2a7:  call _0x936b
  3026 000097DD F605FF                  _0xa2aa:  test byte [di],0xff
  3027 000097E0 743E                    _0xa2ad:  jz _0xa2b4
  3028 000097E2 C6453214                _0xa2af:  mov byte [di+0x32],0x14
  3029 000097E6 C3                      _0xa2b3:  ret
  3030 000097E7 FE4D26                  _0xa2b4:  dec byte [di+0x26]
  3031 000097EA 783A                    _0xa2b7:  js _0xa2ba
  3032 000097EC C3                      _0xa2b9:  ret
  3033                                  
  3034                                  ; ─────────────────────────────────────────────────────────────────────
  3035                                  
  3036 000097ED C60501                  _0xa2ba:  mov byte [di],0x1
  3037 000097F0 8A4501                  _0xa2bd:  mov al,[di+0x1]
  3038 000097F3 2C16                    _0xa2c0:  sub al,0x16
  3039 000097F5 8A5D02                  _0xa2c2:  mov bl,[di+0x2]
  3040 000097F8 80C30C                  _0xa2c5:  add bl,0xc
  3041 000097FB 30E4                    _0xa2c8:  xor ah,ah
  3042 000097FD 30FF                    _0xa2ca:  xor bh,bh
  3043 000097FF 57                      _0xa2cc:  push di
  3044 00009800 55                      _0xa2cd:  push bp
  3045 00009801 BEB28C                  _0xa2ce:  mov si,0x8cb2
  3046 00009804 E89EE9                  _0xa2d1:  call _0x84f7
  3047 00009807 5D                      _0xa2d4:  pop bp
  3048 00009808 5F                      _0xa2d5:  pop di
  3049 00009809 F6452EFF                _0xa2d6:  test byte [di+0x2e],0xff
  3050 0000980D 753A                    _0xa2da:  jnz _0xa2dd
  3051 0000980F C3                      _0xa2dc:  ret
  3052                                  
  3053                                  ; ─────────────────────────────────────────────────────────────────────
  3054                                  
  3055 00009810 FE4D2E                  _0xa2dd:  dec byte [di+0x2e]
  3056 00009813 FE462E                  _0xa2e0:  inc byte [bp+0x2e]
  3057 00009816 C3                      _0xa2e3:  ret
  3058                                  
  3059                                  ; ─────────────────────────────────────────────────────────────────────
  3060                                  
  3061 00009817 BA0703                  _0xa2e4:  mov dx,0x307
  3062 0000981A BE4E89                  _0xa2e7:  mov si,0x894e
  3063 0000981D F6064E89FF              _0xa2ea:  test byte [0x894e],0xff
  3064 00009822 753C                    _0xa2ef:  jnz _0xa2f4
  3065 00009824 E84700                  _0xa2f1:  call _0xa302
  3066 00009827 BE8389                  _0xa2f4:  mov si,0x8983
  3067 0000982A F6068389FF              _0xa2f7:  test byte [0x8983],0xff
  3068 0000982F 743A                    _0xa2fc:  jz _0xa2ff
  3069 00009831 C3                      _0xa2fe:  ret
  3070                                  
  3071                                  ; ─────────────────────────────────────────────────────────────────────
  3072                                  
  3073 00009832 BA0605                  _0xa2ff:  mov dx,0x506
  3074 00009835 8A4426                  _0xa302:  mov al,[si+0x26]
  3075 00009838 3A4427                  _0xa305:  cmp al,[si+0x27]
  3076 0000983B 753A                    _0xa308:  jnz _0xa30b
  3077 0000983D C3                      _0xa30a:  ret
  3078                                  
  3079                                  ; ─────────────────────────────────────────────────────────────────────
  3080                                  
  3081 0000983E 8A4427                  _0xa30b:  mov al,[si+0x27]
  3082 00009841 C606CD8D3E              _0xa30e:  mov byte [0x8dcd],0x3e
  3083 00009846 7744                    _0xa313:  ja _0xa320
  3084 00009848 FEC8                    _0xa315:  dec al
  3085 0000984A C606CD8D20              _0xa317:  mov byte [0x8dcd],0x20
  3086 0000984F 806C2702                _0xa31c:  sub byte [si+0x27],0x2
  3087 00009853 FE4427                  _0xa320:  inc byte [si+0x27]
  3088 00009856 50                      _0xa323:  push ax
  3089 00009857 56                      _0xa324:  push si
  3090 00009858 E8FEE8                  _0xa325:  call _0x84b4
  3091 0000985B 5E                      _0xa328:  pop si
  3092 0000985C 58                      _0xa329:  pop ax
  3093 0000985D 88C4                    _0xa32a:  mov ah,al
  3094 0000985F D0E0                    _0xa32c:  shl al,1
  3095 00009861 00E0                    _0xa32e:  add al,ah
  3096 00009863 024401                  _0xa330:  add al,[si+0x1]
  3097 00009866 2C16                    _0xa333:  sub al,0x16
  3098 00009868 8A5C02                  _0xa335:  mov bl,[si+0x2]
  3099 0000986B 80C30C                  _0xa338:  add bl,0xc
  3100 0000986E 30E4                    _0xa33b:  xor ah,ah
  3101 00009870 30FF                    _0xa33d:  xor bh,bh
  3102 00009872 BECD8D                  _0xa33f:  mov si,0x8dcd
  3103 00009875 E82DE9                  _0xa342:  call _0x84f7
  3104 00009878 C3                      _0xa345:  ret
  3105                                  
  3106                                  ; ─────────────────────────────────────────────────────────────────────
  3107                                  
  3108 00009879 BE4E89                  _0xa346:  mov si,0x894e
  3109 0000987C F6064E89FF              _0xa349:  test byte [0x894e],0xff
  3110 00009881 783C                    _0xa34e:  js _0xa353
  3111 00009883 E85D00                  _0xa350:  call _0xa377
  3112 00009886 E85D03                  _0xa353:  call _0xa674
  3113 00009889 BE8389                  _0xa356:  mov si,0x8983
  3114 0000988C F6068389FF              _0xa359:  test byte [0x8983],0xff
  3115 00009891 783C                    _0xa35e:  js _0xa363
  3116 00009893 E84D00                  _0xa360:  call _0xa377
  3117 00009896 E94D03                  _0xa363:  jmp _0xa674
  3118                                  
  3119                                  ; ─────────────────────────────────────────────────────────────────────
  3120                                  
  3121 00009899 58                      _0xa366:  pop ax
  3122 0000989A 8A4424                  _0xa367:  mov al,[si+0x24]
  3123 0000989D 3A4423                  _0xa36a:  cmp al,[si+0x23]
  3124 000098A0 753E                    _0xa36d:  jnz _0xa374
  3125 000098A2 C6442500                _0xa36f:  mov byte [si+0x25],0x0
  3126 000098A6 C3                      _0xa373:  ret
  3127                                  
  3128                                  ; ─────────────────────────────────────────────────────────────────────
  3129                                  
  3130 000098A7 884423                  _0xa374:  mov [si+0x23],al
  3131 000098AA F64425FF                _0xa377:  test byte [si+0x25],0xff
  3132 000098AE 753A                    _0xa37b:  jnz _0xa37e
  3133 000098B0 C3                      _0xa37d:  ret
  3134                                  
  3135                                  ; ─────────────────────────────────────────────────────────────────────
  3136                                  
  3137 000098B1 8B4419                  _0xa37e:  mov ax,[si+0x19]
  3138 000098B4 89441B                  _0xa381:  mov [si+0x1b],ax
  3139 000098B7 8A5C23                  _0xa384:  mov bl,[si+0x23]
  3140 000098BA 30FF                    _0xa387:  xor bh,bh
  3141 000098BC D1E3                    _0xa389:  shl bx,1
  3142 000098BE FFA7C18E                _0xa38b:  jmp [bx-0x713f]
  3143                                  
  3144                                  ; ─────────────────────────────────────────────────────────────────────
  3145                                  
  3146 000098C2 F64421FF                _0xa38f:  test byte [si+0x21],0xff
  3147 000098C6 743B                    _0xa393:  jz _0xa397
  3148 000098C8 EBD0                    _0xa395:  jmp short _0xa367
  3149                                  
  3150                                  ; ─────────────────────────────────────────────────────────────────────
  3151                                  
  3152 000098CA F64422FF                _0xa397:  test byte [si+0x22],0xff
  3153 000098CE 7558                    _0xa39b:  jnz _0xa3bc
  3154 000098D0 FE4C1C                  _0xa39d:  dec byte [si+0x1c]
  3155 000098D3 7950                    _0xa3a0:  jns _0xa3b9
  3156 000098D5 A0008E                  _0xa3a2:  mov al,[0x8e00]
  3157 000098D8 FEC8                    _0xa3a5:  dec al
  3158 000098DA 88441A                  _0xa3a7:  mov [si+0x1a],al
  3159 000098DD 88441C                  _0xa3aa:  mov [si+0x1c],al
  3160 000098E0 FE4422                  _0xa3ad:  inc byte [si+0x22]
  3161 000098E3 D0E0                    _0xa3b0:  shl al,1
  3162 000098E5 FEC0                    _0xa3b2:  inc al
  3163 000098E7 88441E                  _0xa3b4:  mov [si+0x1e],al
  3164 000098EA EB3C                    _0xa3b7:  jmp short _0xa3bc
  3165                                  
  3166                                  ; ─────────────────────────────────────────────────────────────────────
  3167                                  
  3168 000098EC E8F600                  _0xa3b9:  call _0xa479
  3169 000098EF 80742201                _0xa3bc:  xor byte [si+0x22],0x1
  3170 000098F3 743C                    _0xa3c0:  jz _0xa3c5
  3171 000098F5 FE4C1A                  _0xa3c2:  dec byte [si+0x1a]
  3172 000098F8 FE4C1E                  _0xa3c5:  dec byte [si+0x1e]
  3173 000098FB C3                      _0xa3c8:  ret
  3174 000098FC F64422FF                _0xa3c9:  test byte [si+0x22],0xff
  3175 00009900 743B                    _0xa3cd:  jz _0xa3d1
  3176 00009902 EB96                    _0xa3cf:  jmp short _0xa367
  3177                                  
  3178                                  ; ─────────────────────────────────────────────────────────────────────
  3179                                  
  3180 00009904 F64421FF                _0xa3d1:  test byte [si+0x21],0xff
  3181 00009908 7558                    _0xa3d5:  jnz _0xa3f6
  3182 0000990A FE4C1B                  _0xa3d7:  dec byte [si+0x1b]
  3183 0000990D 7950                    _0xa3da:  jns _0xa3f3
  3184 0000990F A0018E                  _0xa3dc:  mov al,[0x8e01]
  3185 00009912 FEC8                    _0xa3df:  dec al
  3186 00009914 884419                  _0xa3e1:  mov [si+0x19],al
  3187 00009917 88441B                  _0xa3e4:  mov [si+0x1b],al
  3188 0000991A FE4421                  _0xa3e7:  inc byte [si+0x21]
  3189 0000991D D0E0                    _0xa3ea:  shl al,1
  3190 0000991F FEC0                    _0xa3ec:  inc al
  3191 00009921 88441D                  _0xa3ee:  mov [si+0x1d],al
  3192 00009924 EB3C                    _0xa3f1:  jmp short _0xa3f6
  3193                                  
  3194                                  ; ─────────────────────────────────────────────────────────────────────
  3195                                  
  3196 00009926 E8BC00                  _0xa3f3:  call _0xa479
  3197 00009929 80742101                _0xa3f6:  xor byte [si+0x21],0x1
  3198 0000992D 743C                    _0xa3fa:  jz _0xa3ff
  3199 0000992F FE4C19                  _0xa3fc:  dec byte [si+0x19]
  3200 00009932 FE4C1D                  _0xa3ff:  dec byte [si+0x1d]
  3201 00009935 C3                      _0xa402:  ret
  3202 00009936 F64421FF                _0xa403:  test byte [si+0x21],0xff
  3203 0000993A 743C                    _0xa407:  jz _0xa40c
  3204 0000993C E95BFF                  _0xa409:  jmp _0xa367
  3205                                  
  3206                                  ; ─────────────────────────────────────────────────────────────────────
  3207                                  
  3208 0000993F F64422FF                _0xa40c:  test byte [si+0x22],0xff
  3209 00009943 7558                    _0xa410:  jnz _0xa431
  3210 00009945 FE441C                  _0xa412:  inc byte [si+0x1c]
  3211 00009948 A0008E                  _0xa415:  mov al,[0x8e00]
  3212 0000994B 38441C                  _0xa418:  cmp [si+0x1c],al
  3213 0000994E 754A                    _0xa41b:  jnz _0xa42e
  3214 00009950 C6441AFF                _0xa41d:  mov byte [si+0x1a],0xff
  3215 00009954 C6441CFF                _0xa421:  mov byte [si+0x1c],0xff
  3216 00009958 FE4422                  _0xa425:  inc byte [si+0x22]
  3217 0000995B C6441EFF                _0xa428:  mov byte [si+0x1e],0xff
  3218 0000995F EB3C                    _0xa42c:  jmp short _0xa431
  3219                                  
  3220                                  ; ─────────────────────────────────────────────────────────────────────
  3221                                  
  3222 00009961 E88100                  _0xa42e:  call _0xa479
  3223 00009964 80742201                _0xa431:  xor byte [si+0x22],0x1
  3224 00009968 753C                    _0xa435:  jnz _0xa43a
  3225 0000996A FE441A                  _0xa437:  inc byte [si+0x1a]
  3226 0000996D FE441E                  _0xa43a:  inc byte [si+0x1e]
  3227 00009970 C3                      _0xa43d:  ret
  3228 00009971 F64422FF                _0xa43e:  test byte [si+0x22],0xff
  3229 00009975 743C                    _0xa442:  jz _0xa447
  3230 00009977 E920FF                  _0xa444:  jmp _0xa367
  3231                                  
  3232                                  ; ─────────────────────────────────────────────────────────────────────
  3233                                  
  3234 0000997A F64421FF                _0xa447:  test byte [si+0x21],0xff
  3235 0000997E 7558                    _0xa44b:  jnz _0xa46c
  3236 00009980 FE441B                  _0xa44d:  inc byte [si+0x1b]
  3237 00009983 A0018E                  _0xa450:  mov al,[0x8e01]
  3238 00009986 38441B                  _0xa453:  cmp [si+0x1b],al
  3239 00009989 754A                    _0xa456:  jnz _0xa469
  3240 0000998B C64419FF                _0xa458:  mov byte [si+0x19],0xff
  3241 0000998F C6441BFF                _0xa45c:  mov byte [si+0x1b],0xff
  3242 00009993 FE4421                  _0xa460:  inc byte [si+0x21]
  3243 00009996 C6441DFF                _0xa463:  mov byte [si+0x1d],0xff
  3244 0000999A EB3C                    _0xa467:  jmp short _0xa46c
  3245                                  
  3246                                  ; ─────────────────────────────────────────────────────────────────────
  3247                                  
  3248 0000999C E84600                  _0xa469:  call _0xa479
  3249 0000999F 80742101                _0xa46c:  xor byte [si+0x21],0x1
  3250 000099A3 753C                    _0xa470:  jnz _0xa475
  3251 000099A5 FE4419                  _0xa472:  inc byte [si+0x19]
  3252 000099A8 FE441D                  _0xa475:  inc byte [si+0x1d]
  3253 000099AB C3                      _0xa478:  ret
  3254                                  
  3255                                  ; ─────────────────────────────────────────────────────────────────────
  3256                                  
  3257 000099AC 30FF                    _0xa479:  xor bh,bh
  3258 000099AE 8A5C1B                  _0xa47b:  mov bl,[si+0x1b]
  3259 000099B1 A0018E                  _0xa47e:  mov al,[0x8e01]
  3260 000099B4 F6641C                  _0xa481:  mul byte [si+0x1c]
  3261 000099B7 01C3                    _0xa484:  add bx,ax
  3262 000099B9 81C3C05C                _0xa486:  add bx,0x5cc0
  3263 000099BD 8A07                    _0xa48a:  mov al,[bx]
  3264 000099BF 3C40                    _0xa48c:  cmp al,0x40
  3265 000099C1 753A                    _0xa48e:  jnz _0xa491
  3266 000099C3 C3                      _0xa490:  ret
  3267                                  
  3268                                  ; ─────────────────────────────────────────────────────────────────────
  3269                                  
  3270 000099C4 3C78                    _0xa491:  cmp al,0x78
  3271 000099C6 753A                    _0xa493:  jnz _0xa496
  3272 000099C8 C3                      _0xa495:  ret
  3273                                  
  3274                                  ; ─────────────────────────────────────────────────────────────────────
  3275                                  
  3276 000099C9 3C50                    _0xa496:  cmp al,0x50
  3277 000099CB 733C                    _0xa498:  jnc _0xa49d
  3278 000099CD EB58                    _0xa49a:  jmp short _0xa4b8
  3279                                  
  3280                                  ; ─────────────────────────────────────────────────────────────────────
  3281                                  
  3282 000099CF 90                      _0xa49c:  nop
  3283 000099D0 3C72                    _0xa49d:  cmp al,0x72
  3284 000099D2 7453                    _0xa49f:  jz _0xa4b8
  3285 000099D4 7703E9(A6A4)            _0xa4a1:  jna 0xa4a6
  3286 000099D9 E98001                  _0xa4a3:  jmp _0xa5ed
  3287                                  
  3288                                  ; ─────────────────────────────────────────────────────────────────────
  3289                                  
  3290 000099DC 3C54                    _0xa4a6:  cmp al,0x54
  3291 000099DE 723C                    _0xa4a8:  jc _0xa4ad
  3292 000099E0 E9B6FE                  _0xa4aa:  jmp _0xa366
  3293                                  
  3294                                  ; ─────────────────────────────────────────────────────────────────────
  3295                                  
  3296 000099E3 2C50                    _0xa4ad:  sub al,0x50
  3297 000099E5 3A4423                  _0xa4af:  cmp al,[si+0x23]
  3298 000099E8 753C                    _0xa4b2:  jnz _0xa4b7
  3299 000099EA E9ACFE                  _0xa4b4:  jmp _0xa366
  3300                                  
  3301                                  ; ─────────────────────────────────────────────────────────────────────
  3302                                  
  3303 000099ED C3                      _0xa4b7:  ret
  3304                                  
  3305                                  ; ─────────────────────────────────────────────────────────────────────
  3306                                  
  3307 000099EE A2088E                  _0xa4b8:  mov [0x8e08],al
  3308 000099F1 3C41                    _0xa4bb:  cmp al,0x41
  3309 000099F3 747F                    _0xa4bd:  jz _0xa505
  3310 000099F5 3C42                    _0xa4bf:  cmp al,0x42
  3311 000099F7 744E                    _0xa4c1:  jz _0xa4d8
  3312 000099F9 3C72                    _0xa4c3:  cmp al,0x72
  3313 000099FB 753C                    _0xa4c5:  jnz _0xa4ca
  3314 000099FD E91001                  _0xa4c7:  jmp _0xa5a1
  3315                                  
  3316                                  ; ─────────────────────────────────────────────────────────────────────
  3317                                  
  3318 00009A00 3C47                    _0xa4ca:  cmp al,0x47
  3319 00009A02 7303E99200              _0xa4cc:  jc _0xa52a
  3320 00009A07 3C50                    _0xa4ce:  cmp al,0x50
  3321 00009A09 7339                    _0xa4d0:  jnc _0xa4d5
  3322 00009A0B E9BD00                  _0xa4d2:  jmp _0xa55c
  3323 00009A0E E988FE                  _0xa4d5:  jmp _0xa366
  3324 00009A11 F604FF                  _0xa4d8:  test byte [si],0xff
  3325 00009A14 7439                    _0xa4db:  jz _0xa4e0
  3326 00009A16 E980FE                  _0xa4dd:  jmp _0xa366
  3327                                  
  3328                                  ; ─────────────────────────────────────────────────────────────────────
  3329                                  
  3330 00009A19 F6442EFF                _0xa4e0:  test byte [si+0x2e],0xff
  3331 00009A1D 7439                    _0xa4e4:  jz _0xa4e9
  3332 00009A1F E977FE                  _0xa4e6:  jmp _0xa366
  3333                                  
  3334                                  ; ─────────────────────────────────────────────────────────────────────
  3335                                  
  3336 00009A22 FE442E                  _0xa4e9:  inc byte [si+0x2e]
  3337 00009A25 FF0EF48D                _0xa4ec:  dec word [0x8df4]
  3338 00009A29 C60740                  _0xa4f0:  mov byte [bx],0x40
  3339 00009A2C B80F00                  _0xa4f3:  mov ax,0xf
  3340 00009A2F 004428                  _0xa4f6:  add [si+0x28],al
  3341 00009A32 E86AEE                  _0xa4f9:  call _0x9390
  3342 00009A35 B80300                  _0xa4fc:  mov ax,0x3
  3343                                  _0xa4ff:  call _0x2a2
  3343          ******************       error: symbol `_0x2a2' not defined
  3344 00009A38 E9E600                  _0xa502:  jmp _0xa5b2
  3345                                  
  3346                                  ; ─────────────────────────────────────────────────────────────────────
  3347                                  
  3348 00009A3B F6442EFF                _0xa505:  test byte [si+0x2e],0xff
  3349 00009A3F 753C                    _0xa509:  jnz _0xa50e
  3350 00009A41 E955FE                  _0xa50b:  jmp _0xa366
  3351                                  
  3352                                  ; ─────────────────────────────────────────────────────────────────────
  3353                                  
  3354 00009A44 C60740                  _0xa50e:  mov byte [bx],0x40
  3355 00009A47 B81900                  _0xa511:  mov ax,0x19
  3356 00009A4A 004428                  _0xa514:  add [si+0x28],al
  3357 00009A4D E84FEE                  _0xa517:  call _0x9390
  3358 00009A50 FF0EF68D                _0xa51a:  dec word [0x8df6]
  3359 00009A54 FE4C2E                  _0xa51e:  dec byte [si+0x2e]
  3360 00009A57 B80400                  _0xa521:  mov ax,0x4
  3361                                  _0xa524:  call _0x2a2
  3361          ******************       error: symbol `_0x2a2' not defined
  3362 00009A5A E9C400                  _0xa527:  jmp _0xa5b2
  3363                                  
  3364                                  ; ─────────────────────────────────────────────────────────────────────
  3365                                  
  3366 00009A5D C60740                  _0xa52a:  mov byte [bx],0x40
  3367 00009A60 8006DC8D0A              _0xa52d:  add byte [0x8ddc],0xa
  3368 00009A65 A0DC8D                  _0xa532:  mov al,[0x8ddc]
  3369 00009A68 004428                  _0xa535:  add [si+0x28],al
  3370 00009A6B 88C3                    _0xa538:  mov bl,al
  3371 00009A6D 80C314                  _0xa53a:  add bl,0x14
  3372 00009A70 D0EB                    _0xa53d:  shr bl,1
  3373 00009A72 D0EB                    _0xa53f:  shr bl,1
  3374 00009A74 881ED58D                _0xa541:  mov [0x8dd5],bl
  3375 00009A78 30E4                    _0xa545:  xor ah,ah
  3376 00009A7A F604FF                  _0xa547:  test byte [si],0xff
  3377 00009A7D 753F                    _0xa54a:  jnz _0xa54f
  3378 00009A7F E81DEE                  _0xa54c:  call _0x9390
  3379 00009A82 FE06E18D                _0xa54f:  inc byte [0x8de1]
  3380 00009A86 B80500                  _0xa553:  mov ax,0x5
  3381                                  _0xa556:  call _0x2a2
  3381          ******************       error: symbol `_0x2a2' not defined
  3382 00009A89 EB96                    _0xa559:  jmp short _0xa5b2
  3382          ******************       error: short jump is out of range
  3382          ******************       warning: byte data exceeds bounds [-w+number-overflow]
  3383                                  
  3384                                  ; ─────────────────────────────────────────────────────────────────────
  3385                                  
  3386 00009A8B 90                      _0xa55b:  nop
  3387 00009A8C C60740                  _0xa55c:  mov byte [bx],0x40
  3388 00009A8F B063                    _0xa55f:  mov al,0x63
  3389 00009A91 004428                  _0xa561:  add [si+0x28],al
  3390 00009A94 30E4                    _0xa564:  xor ah,ah
  3391 00009A96 F604FF                  _0xa566:  test byte [si],0xff
  3392 00009A99 7542                    _0xa569:  jnz _0xa56e
  3393 00009A9B E801EE                  _0xa56b:  call _0x9390
  3394 00009A9E FE06E18D                _0xa56e:  inc byte [0x8de1]
  3395 00009AA2 B80700                  _0xa572:  mov ax,0x7
  3396                                  _0xa575:  call _0x2a2
  3396          ******************       error: symbol `_0x2a2' not defined
  3397 00009AA5 57                      _0xa578:  push di
  3398 00009AA6 53                      _0xa579:  push bx
  3399 00009AA7 A0DD8D                  _0xa57a:  mov al,[0x8ddd]
  3400 00009AAA BF088E                  _0xa57d:  mov di,0x8e08
  3401 00009AAD 83C704                  _0xa580:  add di,byte +0x4
  3402 00009AB0 3805                    _0xa583:  cmp [di],al
  3403 00009AB2 75F9                    _0xa585:  jnz _0xa580
  3404 00009AB4 C7050100                _0xa587:  mov word [di],0x1
  3405 00009AB8 8B1E308E                _0xa58b:  mov bx,[0x8e30]
  3406 00009ABC FF06308E                _0xa58f:  inc word [0x8e30]
  3407 00009AC0 D1E3                    _0xa593:  shl bx,1
  3408 00009AC2 8B874460                _0xa595:  mov ax,[bx+0x6044]
  3409 00009AC6 894502                  _0xa599:  mov [di+0x2],ax
  3410 00009AC9 5B                      _0xa59c:  pop bx
  3411 00009ACA 5F                      _0xa59d:  pop di
  3412 00009ACB EB54                    _0xa59e:  jmp short _0xa5b2
  3413                                  
  3414                                  ; ─────────────────────────────────────────────────────────────────────
  3415                                  
  3416 00009ACD 90                      _0xa5a0:  nop
  3417 00009ACE C60754                  _0xa5a1:  mov byte [bx],0x54
  3418 00009AD1 C606088E54              _0xa5a4:  mov byte [0x8e08],0x54
  3419 00009AD6 FE4428                  _0xa5a9:  inc byte [si+0x28]
  3420 00009AD9 E84500                  _0xa5ac:  call _0xa5b2
  3421 00009ADC E9BAFD                  _0xa5af:  jmp _0xa366
  3422                                  
  3423                                  ; ─────────────────────────────────────────────────────────────────────
  3424                                  
  3425 00009ADF 8A541B                  _0xa5b2:  mov dl,[si+0x1b]
  3426 00009AE2 30F6                    _0xa5b5:  xor dh,dh
  3427 00009AE4 D1E2                    _0xa5b7:  shl dx,1
  3428 00009AE6 D1E2                    _0xa5b9:  shl dx,1
  3429 00009AE8 D1E2                    _0xa5bb:  shl dx,1
  3430 00009AEA D1E2                    _0xa5bd:  shl dx,1
  3431 00009AEC 8A441C                  _0xa5bf:  mov al,[si+0x1c]
  3432 00009AEF F626018E                _0xa5c2:  mul byte [0x8e01]
  3433 00009AF3 D1E0                    _0xa5c6:  shl ax,1
  3434 00009AF5 D1E0                    _0xa5c8:  shl ax,1
  3435 00009AF7 D1E0                    _0xa5ca:  shl ax,1
  3436 00009AF9 D1E0                    _0xa5cc:  shl ax,1
  3437 00009AFB D1E0                    _0xa5ce:  shl ax,1
  3438 00009AFD D1E0                    _0xa5d0:  shl ax,1
  3439 00009AFF 89C7                    _0xa5d2:  mov di,ax
  3440 00009B01 01D7                    _0xa5d4:  add di,dx
  3441 00009B03 A0088E                  _0xa5d6:  mov al,[0x8e08]
  3442 00009B06 2C40                    _0xa5d9:  sub al,0x40
  3443 00009B08 B4C0                    _0xa5db:  mov ah,0xc0
  3444 00009B0A F6E4                    _0xa5dd:  mul ah
  3445 00009B0C 56                      _0xa5df:  push si
  3446 00009B0D 89C6                    _0xa5e0:  mov si,ax
  3447 00009B0F 81C67009                _0xa5e2:  add si,0x970
  3448 00009B13 31DB                    _0xa5e6:  xor bx,bx
  3449 00009B15 E84CF8                  _0xa5e8:  call _0x9e3a
  3450 00009B18 5E                      _0xa5eb:  pop si
  3451 00009B19 C3                      _0xa5ec:  ret
  3452                                  
  3453                                  ; ─────────────────────────────────────────────────────────────────────
  3454                                  
  3455 00009B1A 803EDD8D01              _0xa5ed:  cmp byte [0x8ddd],0x1
  3456 00009B1F 7577                    _0xa5f2:  jnz _0xa626
  3457 00009B21 BB0100                  _0xa5f4:  mov bx,0x1
  3458 00009B24 8B4419                  _0xa5f7:  mov ax,[si+0x19]
  3459 00009B27 BD9260                  _0xa5fa:  mov bp,0x6092
  3460 00009B2A BF7960                  _0xa5fd:  mov di,0x6079
  3461 00009B2D 83C502                  _0xa600:  add bp,byte +0x2
  3462 00009B30 43                      _0xa603:  inc bx
  3463 00009B31 83FB16                  _0xa604:  cmp bx,byte +0x16
  3464 00009B34 7703E9(0CA6)            _0xa607:  jna 0xa60c
  3465 00009B39 E95DFD                  _0xa609:  jmp _0xa366
  3466                                  
  3467                                  ; ─────────────────────────────────────────────────────────────────────
  3468                                  
  3469 00009B3C F601FF                  _0xa60c:  test byte [bx+di],0xff
  3470 00009B3F 78EC                    _0xa60f:  js _0xa600
  3471 00009B41 3B4600                  _0xa611:  cmp ax,[bp+0x0]
  3472 00009B44 75E7                    _0xa614:  jnz _0xa600
  3473 00009B46 881EDD8D                _0xa616:  mov [0x8ddd],bl
  3474 00009B4A FE067A60                _0xa61a:  inc byte [0x607a]
  3475 00009B4E 80267A600F              _0xa61e:  and byte [0x607a],0xf
  3476 00009B53 E9DFEA                  _0xa623:  jmp _0x90f9
  3477                                  
  3478                                  ; ─────────────────────────────────────────────────────────────────────
  3479                                  
  3480 00009B56 8A1EDD8D                _0xa626:  mov bl,[0x8ddd]
  3481 00009B5A 30FF                    _0xa62a:  xor bh,bh
  3482 00009B5C 80FB19                  _0xa62c:  cmp bl,0x19
  3483 00009B5F 7545                    _0xa62f:  jnz _0xa634
  3484 00009B61 E9CBEA                  _0xa631:  jmp _0x90f3
  3485                                  
  3486                                  ; ─────────────────────────────────────────────────────────────────────
  3487                                  
  3488 00009B64 80FB16                  _0xa634:  cmp bl,0x16
  3489 00009B67 7760                    _0xa637:  ja _0xa657
  3490 00009B69 81C37960                _0xa639:  add bx,0x6079
  3491 00009B6D 8A07                    _0xa63d:  mov al,[bx]
  3492 00009B6F FEC0                    _0xa63f:  inc al
  3493 00009B71 240F                    _0xa641:  and al,0xf
  3494 00009B73 7544                    _0xa643:  jnz _0xa647
  3495 00009B75 FEC8                    _0xa645:  dec al
  3496 00009B77 8807                    _0xa647:  mov [bx],al
  3497 00009B79 7846                    _0xa649:  js _0xa64f
  3498 00009B7B 2403                    _0xa64b:  and al,0x3
  3499 00009B7D 7542                    _0xa64d:  jnz _0xa64f
  3500 00009B7F C606DD8D01              _0xa64f:  mov byte [0x8ddd],0x1
  3501 00009B84 E9AEEA                  _0xa654:  jmp _0x90f9
  3502                                  
  3503                                  ; ─────────────────────────────────────────────────────────────────────
  3504                                  
  3505 00009B87 FEC3                    _0xa657:  inc bl
  3506 00009B89 881EDD8D                _0xa659:  mov [0x8ddd],bl
  3507 00009B8D C706A88DD281            _0xa65d:  mov word [0x8da8],0x81d2
  3508 00009B93 80FB18                  _0xa663:  cmp bl,0x18
  3509 00009B96 7448                    _0xa666:  jz _0xa66e
  3510 00009B98 C706A88D5282            _0xa668:  mov word [0x8da8],0x8252
  3511 00009B9E E86EEB                  _0xa66e:  call _0x9200
  3512 00009BA1 E98EEA                  _0xa671:  jmp _0x90f6
  3513                                  
  3514                                  ; ─────────────────────────────────────────────────────────────────────
  3515                                  
  3516 00009BA4 8A441D                  _0xa674:  mov al,[si+0x1d]
  3517 00009BA7 2A4417                  _0xa677:  sub al,[si+0x17]
  3518 00009BAA 3A06AC8D                _0xa67a:  cmp al,[0x8dac]
  3519 00009BAE 7F03E9(9AA6)            _0xa67e:  jng 0xa69a
  3520 00009BB3 3A06AD8D                _0xa680:  cmp al,[0x8dad]
  3521 00009BB7 7C03E9(A8A6)            _0xa684:  jnl 0xa6a8
  3522 00009BBC 8A441E                  _0xa686:  mov al,[si+0x1e]
  3523 00009BBF 2A4418                  _0xa689:  sub al,[si+0x18]
  3524 00009BC2 3A06AE8D                _0xa68c:  cmp al,[0x8dae]
  3525 00009BC6 7F03E9(CCA6)            _0xa690:  jng 0xa6cc
  3526 00009BCB 3A06AF8D                _0xa692:  cmp al,[0x8daf]
  3527 00009BCF 7C03E9(D8A6)            _0xa696:  jnl 0xa6d8
  3528 00009BD4 EBA0                    _0xa698:  jmp short _0xa6f8
  3528          ******************       error: short jump is out of range
  3528          ******************       warning: byte data exceeds bounds [-w+number-overflow]
  3529                                  
  3530                                  ; ─────────────────────────────────────────────────────────────────────
  3531                                  
  3532 00009BD6 8A441F                  _0xa69a:  mov al,[si+0x1f]
  3533 00009BD9 2A441D                  _0xa69d:  sub al,[si+0x1d]
  3534 00009BDC 74DE                    _0xa6a0:  jz _0xa686
  3535 00009BDE 3CFF                    _0xa6a2:  cmp al,0xff
  3536 00009BE0 74DA                    _0xa6a4:  jz _0xa686
  3537 00009BE2 EB4E                    _0xa6a6:  jmp short _0xa6b4
  3538                                  
  3539                                  ; ─────────────────────────────────────────────────────────────────────
  3540                                  
  3541 00009BE4 8A441F                  _0xa6a8:  mov al,[si+0x1f]
  3542 00009BE7 2A441D                  _0xa6ab:  sub al,[si+0x1d]
  3543 00009BEA 74D0                    _0xa6ae:  jz _0xa686
  3544 00009BEC 3C01                    _0xa6b0:  cmp al,0x1
  3545 00009BEE 74CC                    _0xa6b2:  jz _0xa686
  3546 00009BF0 284417                  _0xa6b4:  sub [si+0x17],al
  3547 00009BF3 7948                    _0xa6b7:  jns _0xa6bf
  3548 00009BF5 C6441700                _0xa6b9:  mov byte [si+0x17],0x0
  3549 00009BF9 EB7B                    _0xa6bd:  jmp short _0xa6f8
  3550                                  
  3551                                  ; ─────────────────────────────────────────────────────────────────────
  3552                                  
  3553 00009BFB A0AA8D                  _0xa6bf:  mov al,[0x8daa]
  3554 00009BFE 3A4417                  _0xa6c2:  cmp al,[si+0x17]
  3555 00009C01 7373                    _0xa6c5:  jnc _0xa6f8
  3556 00009C03 884417                  _0xa6c7:  mov [si+0x17],al
  3557 00009C06 EB6E                    _0xa6ca:  jmp short _0xa6f8
  3558                                  
  3559                                  ; ─────────────────────────────────────────────────────────────────────
  3560                                  
  3561 00009C08 8A4420                  _0xa6cc:  mov al,[si+0x20]
  3562 00009C0B 2A441E                  _0xa6cf:  sub al,[si+0x1e]
  3563 00009C0E 3CFF                    _0xa6d2:  cmp al,0xff
  3564 00009C10 7464                    _0xa6d4:  jz _0xa6f8
  3565 00009C12 EB4C                    _0xa6d6:  jmp short _0xa6e2
  3566                                  
  3567                                  ; ─────────────────────────────────────────────────────────────────────
  3568                                  
  3569 00009C14 8A4420                  _0xa6d8:  mov al,[si+0x20]
  3570 00009C17 2A441E                  _0xa6db:  sub al,[si+0x1e]
  3571 00009C1A 3C01                    _0xa6de:  cmp al,0x1
  3572 00009C1C 7458                    _0xa6e0:  jz _0xa6f8
  3573 00009C1E 284418                  _0xa6e2:  sub [si+0x18],al
  3574 00009C21 7948                    _0xa6e5:  jns _0xa6ed
  3575 00009C23 C6441800                _0xa6e7:  mov byte [si+0x18],0x0
  3576 00009C27 EB4D                    _0xa6eb:  jmp short _0xa6f8
  3577                                  
  3578                                  ; ─────────────────────────────────────────────────────────────────────
  3579                                  
  3580 00009C29 A0AB8D                  _0xa6ed:  mov al,[0x8dab]
  3581 00009C2C 3A4418                  _0xa6f0:  cmp al,[si+0x18]
  3582 00009C2F 7345                    _0xa6f3:  jnc _0xa6f8
  3583 00009C31 884418                  _0xa6f5:  mov [si+0x18],al
  3584 00009C34 30F6                    _0xa6f8:  xor dh,dh
  3585 00009C36 8A5417                  _0xa6fa:  mov dl,[si+0x17]
  3586 00009C39 D1E2                    _0xa6fd:  shl dx,1
  3587 00009C3B D1E2                    _0xa6ff:  shl dx,1
  3588 00009C3D D1E2                    _0xa701:  shl dx,1
  3589 00009C3F 8A4418                  _0xa703:  mov al,[si+0x18]
  3590 00009C42 F626018E                _0xa706:  mul byte [0x8e01]
  3591 00009C46 D1E0                    _0xa70a:  shl ax,1
  3592 00009C48 D1E0                    _0xa70c:  shl ax,1
  3593 00009C4A D1E0                    _0xa70e:  shl ax,1
  3594 00009C4C D1E0                    _0xa710:  shl ax,1
  3595 00009C4E D1E0                    _0xa712:  shl ax,1
  3596 00009C50 01D0                    _0xa714:  add ax,dx
  3597 00009C52 89440D                  _0xa716:  mov [si+0xd],ax
  3598 00009C55 30F6                    _0xa719:  xor dh,dh
  3599 00009C57 8A541D                  _0xa71b:  mov dl,[si+0x1d]
  3600 00009C5A D1E2                    _0xa71e:  shl dx,1
  3601 00009C5C D1E2                    _0xa720:  shl dx,1
  3602 00009C5E D1E2                    _0xa722:  shl dx,1
  3603 00009C60 8A441E                  _0xa724:  mov al,[si+0x1e]
  3604 00009C63 F626018E                _0xa727:  mul byte [0x8e01]
  3605 00009C67 D1E0                    _0xa72b:  shl ax,1
  3606 00009C69 D1E0                    _0xa72d:  shl ax,1
  3607 00009C6B D1E0                    _0xa72f:  shl ax,1
  3608 00009C6D D1E0                    _0xa731:  shl ax,1
  3609 00009C6F D1E0                    _0xa733:  shl ax,1
  3610 00009C71 01D0                    _0xa735:  add ax,dx
  3611 00009C73 89440F                  _0xa737:  mov [si+0xf],ax
  3612 00009C76 F64425FF                _0xa73a:  test byte [si+0x25],0xff
  3613 00009C7A 756D                    _0xa73e:  jnz _0xa76b
  3614 00009C7C FE4C2A                  _0xa740:  dec byte [si+0x2a]
  3615 00009C7F 7843                    _0xa743:  js _0xa746
  3616 00009C81 C3                      _0xa745:  ret
  3617                                  
  3618                                  ; ─────────────────────────────────────────────────────────────────────
  3619                                  
  3620 00009C82 C6442A00                _0xa746:  mov byte [si+0x2a],0x0
  3621 00009C86 FE4429                  _0xa74a:  inc byte [si+0x29]
  3622 00009C89 8A4429                  _0xa74d:  mov al,[si+0x29]
  3623 00009C8C 88C4                    _0xa750:  mov ah,al
  3624 00009C8E D0E8                    _0xa752:  shr al,1
  3625 00009C90 D0E8                    _0xa754:  shr al,1
  3626 00009C92 241F                    _0xa756:  and al,0x1f
  3627 00009C94 BB5C8D                  _0xa758:  mov bx,0x8d5c
  3628 00009C97 D7                      _0xa75b:  xlatb
  3629 00009C98 BB7C8D                  _0xa75c:  mov bx,0x8d7c
  3630 00009C9B D0E0                    _0xa75f:  shl al,1
  3631 00009C9D D0E0                    _0xa761:  shl al,1
  3632 00009C9F 80E403                  _0xa763:  and ah,0x3
  3633 00009CA2 00E0                    _0xa766:  add al,ah
  3634 00009CA4 D7                      _0xa768:  xlatb
  3635 00009CA5 EB55                    _0xa769:  jmp short _0xa77e
  3636                                  
  3637                                  ; ─────────────────────────────────────────────────────────────────────
  3638                                  
  3639 00009CA7 A0CF8D                  _0xa76b:  mov al,[0x8dcf]
  3640 00009CAA 2403                    _0xa76e:  and al,0x3
  3641 00009CAC 30FF                    _0xa770:  xor bh,bh
  3642 00009CAE 8A5C23                  _0xa772:  mov bl,[si+0x23]
  3643 00009CB1 D0E3                    _0xa775:  shl bl,1
  3644 00009CB3 D0E3                    _0xa777:  shl bl,1
  3645 00009CB5 81C34C8D                _0xa779:  add bx,0x8d4c
  3646 00009CB9 D7                      _0xa77d:  xlatb
  3647 00009CBA 30E4                    _0xa77e:  xor ah,ah
  3648 00009CBC D1E0                    _0xa780:  shl ax,1
  3649 00009CBE D1E0                    _0xa782:  shl ax,1
  3650 00009CC0 D1E0                    _0xa784:  shl ax,1
  3651 00009CC2 D1E0                    _0xa786:  shl ax,1
  3652 00009CC4 D1E0                    _0xa788:  shl ax,1
  3653 00009CC6 D1E0                    _0xa78a:  shl ax,1
  3654 00009CC8 89C2                    _0xa78c:  mov dx,ax
  3655 00009CCA D1E0                    _0xa78e:  shl ax,1
  3656 00009CCC 01D0                    _0xa790:  add ax,dx
  3657 00009CCE 05302E                  _0xa792:  add ax,0x2e30
  3658 00009CD1 894413                  _0xa795:  mov [si+0x13],ax
  3659 00009CD4 C3                      _0xa798:  ret
  3660                                  
  3661                                  ; ─────────────────────────────────────────────────────────────────────
  3662                                  
  3663 00009CD5 E8E900                  _0xa799:  call _0xa843
  3664 00009CD8 E879E8                  _0xa79c:  call _0x885c
  3665 00009CDB C706D37B3089            _0xa79f:  mov word [0x7bd3],0x8930
  3666 00009CE1 C606DA8D01              _0xa7a5:  mov byte [0x8dda],0x1
  3667 00009CE6 F606037CFF              _0xa7aa:  test byte [0x7c03],0xff
  3668 00009CEB 7552                    _0xa7af:  jnz _0xa7c1
  3669 00009CED C606DA8D03              _0xa7b1:  mov byte [0x8dda],0x3
  3670 00009CF2 F606047CFF              _0xa7b6:  test byte [0x7c04],0xff
  3671 00009CF7 7546                    _0xa7bb:  jnz _0xa7c1
  3672 00009CF9 FE06DA8D                _0xa7bd:  inc byte [0x8dda]
  3673 00009CFD E86000                  _0xa7c1:  call _0xa7e2
  3674 00009D00 31C0                    _0xa7c4:  xor ax,ax
  3675 00009D02 A3308E                  _0xa7c6:  mov [0x8e30],ax
  3676 00009D05 BF7A60                  _0xa7c9:  mov di,0x607a
  3677 00009D08 B91900                  _0xa7cc:  mov cx,0x19
  3678 00009D0B F3AA                    _0xa7cf:  rep stosb
  3679                                  
  3680 00009D0D BF0C8E                  _0xa7d1:  mov di,0x8e0c
  3681 00009D10 BE5660                  _0xa7d4:  mov si,0x6056
  3682 00009D13 B91200                  _0xa7d7:  mov cx,0x12
  3683 00009D16 F3A5                    _0xa7da:  rep movsw
  3684                                  
  3685 00009D18 C606D48D01              _0xa7dc:  mov byte [0x8dd4],0x1
  3686 00009D1D C3                      _0xa7e1:  ret
  3687 00009D1E C6064E8900              _0xa7e2:  mov byte [0x894e],0x0
  3688 00009D23 B0FF                    _0xa7e7:  mov al,0xff
  3689 00009D25 F606D98DFF              _0xa7e9:  test byte [0x8dd9],0xff
  3690 00009D2A 7443                    _0xa7ee:  jz _0xa7f1
  3691 00009D2C 40                      _0xa7f0:  inc ax
  3692 00009D2D A28389                  _0xa7f1:  mov [0x8983],al
  3693 00009D30 BB4E89                  _0xa7f4:  mov bx,0x894e
  3694 00009D33 E84500                  _0xa7f7:  call _0xa7fd
  3695 00009D36 BB8389                  _0xa7fa:  mov bx,0x8983
  3696 00009D39 B90500                  _0xa7fd:  mov cx,0x5
  3697 00009D3C B030                    _0xa800:  mov al,0x30
  3698 00009D3E 8D7F05                  _0xa802:  lea di,[bx+0x5]
  3699 00009D41 F3AA                    _0xa805:  rep stosb
  3700                                  
  3701 00009D43 31C0                    _0xa807:  xor ax,ax
  3702 00009D45 894703                  _0xa809:  mov [bx+0x3],ax
  3703 00009D48 C647260A                _0xa80c:  mov byte [bx+0x26],0xa
  3704 00009D4C 884728                  _0xa810:  mov [bx+0x28],al
  3705 00009D4F 88472D                  _0xa813:  mov [bx+0x2d],al
  3706 00009D52 88472C                  _0xa816:  mov [bx+0x2c],al
  3707 00009D55 884731                  _0xa819:  mov [bx+0x31],al
  3708 00009D58 C3                      _0xa81c:  ret
  3709                                  
  3710                                  ; ─────────────────────────────────────────────────────────────────────
  3711                                  
  3712                                  _0xa81d:  call _0x297
  3712          ******************       error: symbol `_0x297' not defined
  3713 00009D59 31C0                    _0xa820:  xor ax,ax
  3714 00009D5B A3CF8D                  _0xa822:  mov [0x8dcf],ax
  3715 00009D5E A2D38D                  _0xa825:  mov [0x8dd3],al
  3716 00009D61 BF2B8C                  _0xa828:  mov di,0x8c2b
  3717 00009D64 B92800                  _0xa82b:  mov cx,0x28
  3718 00009D67 F3AB                    _0xa82e:  rep stosw
  3719 00009D69 BE4D8A                  _0xa830:  mov si,0x8a4d
  3720 00009D6C B90E00                  _0xa833:  mov cx,0xe
  3721 00009D6F 51                      _0xa836:  push cx
  3722 00009D70 E807EB                  _0xa837:  call _0x936b
  3723 00009D73 59                      _0xa83a:  pop cx
  3724 00009D74 83C611                  _0xa83b:  add si,byte +0x11
  3725 00009D77 E2F6                    _0xa83e:  loop _0xa836
  3726 00009D79 E90EEC                  _0xa840:  jmp _0x947b
  3727                                  
  3728                                  ; ─────────────────────────────────────────────────────────────────────
  3729                                  
  3730 00009D7C B8A9AD                  _0xa843:  mov ax,0xada9
  3731 00009D7F 8CCA                    _0xa846:  mov dx,cs
  3732 00009D81 D1E8                    _0xa848:  shr ax,1
  3733 00009D83 D1E8                    _0xa84a:  shr ax,1
  3734 00009D85 D1E8                    _0xa84c:  shr ax,1
  3735 00009D87 D1E8                    _0xa84e:  shr ax,1
  3736 00009D89 40                      _0xa850:  inc ax
  3737 00009D8A 01C2                    _0xa851:  add dx,ax
  3738 00009D8C 89163689                _0xa853:  mov [0x8936],dx
  3739 00009D90 89164889                _0xa857:  mov [0x8948],dx
  3740 00009D94 81C2A005                _0xa85b:  add dx,0x5a0
  3741 00009D98 89163889                _0xa85f:  mov [0x8938],dx
  3742 00009D9C 89163E89                _0xa863:  mov [0x893e],dx
  3743 00009DA0 89164C89                _0xa867:  mov [0x894c],dx
  3744 00009DA4 81C2A005                _0xa86b:  add dx,0x5a0
  3745 00009DA8 89163A89                _0xa86f:  mov [0x893a],dx
  3746 00009DAC 89164089                _0xa873:  mov [0x8940],dx
  3747 00009DB0 89164289                _0xa877:  mov [0x8942],dx
  3748 00009DB4 89164489                _0xa87b:  mov [0x8944],dx
  3749 00009DB8 89164689                _0xa87f:  mov [0x8946],dx
  3750 00009DBC C3                      _0xa883:  ret
  3751                                  
  3752                                  ; ─────────────────────────────────────────────────────────────────────
  3753                                  
  3754 00009DBD BE4E89                  _0xa884:  mov si,0x894e
  3755 00009DC0 F6064E89FF              _0xa887:  test byte [0x894e],0xff
  3756 00009DC5 7848                    _0xa88c:  js _0xa891
  3757 00009DC7 E85000                  _0xa88e:  call _0xa89c
  3758 00009DCA BE8389                  _0xa891:  mov si,0x8983
  3759 00009DCD F6068389FF              _0xa894:  test byte [0x8983],0xff
  3760 00009DD2 7946                    _0xa899:  jns _0xa89c
  3761 00009DD4 C3                      _0xa89b:  ret
  3762 00009DD5 F6442DFF                _0xa89c:  test byte [si+0x2d],0xff
  3763 00009DD9 7453                    _0xa8a0:  jz _0xa8b0
  3764 00009DDB A13689                  _0xa8a2:  mov ax,[0x8936]
  3765 00009DDE 87063889                _0xa8a5:  xchg [0x8938],ax
  3766 00009DE2 87063A89                _0xa8a9:  xchg [0x893a],ax
  3767 00009DE6 A33689                  _0xa8ad:  mov [0x8936],ax
  3768 00009DE9 8B2EB28D                _0xa8b0:  mov bp,[0x8db2]
  3769 00009DED 8B16B08D                _0xa8b4:  mov dx,[0x8db0]
  3770 00009DF1 8B7C0B                  _0xa8b8:  mov di,[si+0xb]
  3771 00009DF4 56                      _0xa8bb:  push si
  3772 00009DF5 8B740D                  _0xa8bc:  mov si,[si+0xd]
  3773 00009DF8 89F0                    _0xa8bf:  mov ax,si
  3774 00009DFA 89FB                    _0xa8c1:  mov bx,di
  3775 00009DFC 89E9                    _0xa8c3:  mov cx,bp
  3776 00009DFE 2E8E1E3689              _0xa8c5:  mov ds,[cs:0x8936]
  3777 00009E03 2E8E063089              _0xa8ca:  mov es,[cs:0x8930]
  3778 00009E08 F3A5                    _0xa8cf:  rep movsw
  3779                                  
  3780 00009E0A 89C6                    _0xa8d1:  mov si,ax
  3781 00009E0C 89DF                    _0xa8d3:  mov di,bx
  3782 00009E0E 89E9                    _0xa8d5:  mov cx,bp
  3783 00009E10 2E8E1E3889              _0xa8d7:  mov ds,[cs:0x8938]
  3784 00009E15 2E8E063289              _0xa8dc:  mov es,[cs:0x8932]
  3785 00009E1A F3A5                    _0xa8e1:  rep movsw
  3786                                  
  3787 00009E1C 89C6                    _0xa8e3:  mov si,ax
  3788 00009E1E 89DF                    _0xa8e5:  mov di,bx
  3789 00009E20 89E9                    _0xa8e7:  mov cx,bp
  3790 00009E22 2E8E1E3A89              _0xa8e9:  mov ds,[cs:0x893a]
  3791 00009E27 2E8E063489              _0xa8ee:  mov es,[cs:0x8934]
  3792 00009E2C F3A5                    _0xa8f3:  rep movsw
  3793                                  
  3794 00009E2E 8CC8                    _0xa8f5:  mov ax,cs
  3795 00009E30 8ED8                    _0xa8f7:  mov ds,ax
  3796 00009E32 033EB48D                _0xa8f9:  add di,[0x8db4]
  3797 00009E36 0336B68D                _0xa8fd:  add si,[0x8db6]
  3798 00009E3A 4A                      _0xa901:  dec dx
  3799 00009E3B 75BB                    _0xa902:  jnz _0xa8bf
  3800 00009E3D 8CC8                    _0xa904:  mov ax,cs
  3801 00009E3F 8EC0                    _0xa906:  mov es,ax
  3802 00009E41 5E                      _0xa908:  pop si
  3803 00009E42 F6442DFF                _0xa909:  test byte [si+0x2d],0xff
  3804 00009E46 7456                    _0xa90d:  jz _0xa920
  3805 00009E48 A13A89                  _0xa90f:  mov ax,[0x893a]
  3806 00009E4B 87063889                _0xa912:  xchg [0x8938],ax
  3807 00009E4F 87063689                _0xa916:  xchg [0x8936],ax
  3808 00009E53 A33A89                  _0xa91a:  mov [0x893a],ax
  3809 00009E56 FE4C2D                  _0xa91d:  dec byte [si+0x2d]
  3810 00009E59 C3                      _0xa920:  ret
  3811                                  
  3812                                  ; ─────────────────────────────────────────────────────────────────────
  3813                                  
  3814 00009E5A 31C0                    _0xa921:  xor ax,ax
  3815 00009E5C A3FA8D                  _0xa923:  mov [0x8dfa],ax
  3816 00009E5F A2DC8D                  _0xa926:  mov [0x8ddc],al
  3817 00009E62 A2DF8D                  _0xa929:  mov [0x8ddf],al
  3818 00009E65 A2E08D                  _0xa92c:  mov [0x8de0],al
  3819 00009E68 C606E18D01              _0xa92f:  mov byte [0x8de1],0x1
  3820 00009E6D A0DD8D                  _0xa934:  mov al,[0x8ddd]
  3821 00009E70 BB7960                  _0xa937:  mov bx,0x6079
  3822 00009E73 D7                      _0xa93a:  xlatb
  3823 00009E74 A2DE8D                  _0xa93b:  mov [0x8dde],al
  3824 00009E77 88C3                    _0xa93e:  mov bl,al
  3825 00009E79 803EDD8D01              _0xa940:  cmp byte [0x8ddd],0x1
  3826 00009E7E 7551                    _0xa945:  jnz _0xa953
  3827 00009E80 30C0                    _0xa947:  xor al,al
  3828 00009E82 A2DE8D                  _0xa949:  mov [0x8dde],al
  3829 00009E85 D0E3                    _0xa94c:  shl bl,1
  3830 00009E87 D0E3                    _0xa94e:  shl bl,1
  3831 00009E89 80E30C                  _0xa950:  and bl,0xc
  3832 00009E8C D0E8                    _0xa953:  shr al,1
  3833 00009E8E D016DF8D                _0xa955:  rcl byte [0x8ddf],1
  3834 00009E92 D0E8                    _0xa959:  shr al,1
  3835 00009E94 D016E08D                _0xa95b:  rcl byte [0x8de0],1
  3836 00009E98 30E4                    _0xa95f:  xor ah,ah
  3837 00009E9A 88D8                    _0xa961:  mov al,bl
  3838 00009E9C D0E8                    _0xa963:  shr al,1
  3839 00009E9E D0E8                    _0xa965:  shr al,1
  3840 00009EA0 89C6                    _0xa967:  mov si,ax
  3841 00009EA2 D1E6                    _0xa969:  shl si,1
  3842 00009EA4 8BB46379                _0xa96b:  mov si,[si+0x7963]
  3843 00009EA8 A0DD8D                  _0xa96f:  mov al,[0x8ddd]
  3844 00009EAB 48                      _0xa972:  dec ax
  3845 00009EAC D1E0                    _0xa973:  shl ax,1
  3846 00009EAE 89C3                    _0xa975:  mov bx,ax
  3847 00009EB0 D1E0                    _0xa977:  shl ax,1
  3848 00009EB2 01C6                    _0xa979:  add si,ax
  3849 00009EB4 01DE                    _0xa97b:  add si,bx
  3850 00009EB6 AD                      _0xa97d:  lodsw
  3851 00009EB7 A3E28D                  _0xa97e:  mov [0x8de2],ax
  3852 00009EBA AD                      _0xa981:  lodsw
  3853 00009EBB A3E48D                  _0xa982:  mov [0x8de4],ax
  3854 00009EBE AD                      _0xa985:  lodsw
  3855 00009EBF A3E68D                  _0xa986:  mov [0x8de6],ax
  3856 00009EC2 8A1EDD8D                _0xa989:  mov bl,[0x8ddd]
  3857 00009EC6 30FF                    _0xa98d:  xor bh,bh
  3858 00009EC8 D1E3                    _0xa98f:  shl bx,1
  3859 00009ECA 8B872F79                _0xa991:  mov ax,[bx+0x792f]
  3860 00009ECE A3E88D                  _0xa995:  mov [0x8de8],ax
  3861 00009ED1 8B872C68                _0xa998:  mov ax,[bx+0x682c]
  3862 00009ED5 A3EA8D                  _0xa99c:  mov [0x8dea],ax
  3863 00009ED8 8B875664                _0xa99f:  mov ax,[bx+0x6456]
  3864 00009EDC A3EC8D                  _0xa9a3:  mov [0x8dec],ax
  3865 00009EDF 8B871E66                _0xa9a6:  mov ax,[bx+0x661e]
  3866 00009EE3 A3EE8D                  _0xa9aa:  mov [0x8dee],ax
  3867 00009EE6 8B872667                _0xa9ad:  mov ax,[bx+0x6726]
  3868 00009EEA A3F08D                  _0xa9b1:  mov [0x8df0],ax
  3869 00009EED 8BB74E58                _0xa9b4:  mov si,[bx+0x584e]
  3870 00009EF1 E8F301                  _0xa9b8:  call _0xab64
  3871 00009EF4 E885F3                  _0xa9bb:  call _0x9d4f
  3872 00009EF7 E87903                  _0xa9be:  call _0xacf0
  3873 00009EFA 8936FC8D                _0xa9c1:  mov [0x8dfc],si
  3874 00009EFE E83404                  _0xa9c5:  call _0xadb2
  3875 00009F01 BD1E8D                  _0xa9c8:  mov bp,0x8d1e
  3876 00009F04 E8E1E5                  _0xa9cb:  call _0x87f0
  3877 00009F07 8B36EA8D                _0xa9ce:  mov si,[0x8dea]
  3878 00009F0B A1E48D                  _0xa9d2:  mov ax,[0x8de4]
  3879 00009F0E BF0A61                  _0xa9d5:  mov di,0x610a
  3880 00009F11 E8AE01                  _0xa9d8:  call _0xab3f
  3881 00009F14 890EF28D                _0xa9db:  mov [0x8df2],cx
  3882 00009F18 BE0A61                  _0xa9df:  mov si,0x610a
  3883 00009F1B C606088E43              _0xa9e2:  mov byte [0x8e08],0x43
  3884 00009F20 FE060B8E                _0xa9e7:  inc byte [0x8e0b]
  3885 00009F24 E86901                  _0xa9eb:  call _0xab0c
  3886 00009F27 FE0E0B8E                _0xa9ee:  dec byte [0x8e0b]
  3887 00009F2B 8B36EC8D                _0xa9f2:  mov si,[0x8dec]
  3888 00009F2F A1E68D                  _0xa9f6:  mov ax,[0x8de6]
  3889 00009F32 BF0A61                  _0xa9f9:  mov di,0x610a
  3890 00009F35 E88A01                  _0xa9fc:  call _0xab3f
  3891 00009F38 890EF88D                _0xa9ff:  mov [0x8df8],cx
  3892 00009F3C BE0A61                  _0xaa03:  mov si,0x610a
  3893 00009F3F BFE960                  _0xaa06:  mov di,0x60e9
  3894 00009F42 F3A5                    _0xaa09:  rep movsw
  3895                                  
  3896 00009F44 8B36EE8D                _0xaa0b:  mov si,[0x8dee]
  3897 00009F48 A1E28D                  _0xaa0f:  mov ax,[0x8de2]
  3898 00009F4B BF0A61                  _0xaa12:  mov di,0x610a
  3899 00009F4E E87101                  _0xaa15:  call _0xab3f
  3900 00009F51 890EF68D                _0xaa18:  mov [0x8df6],cx
  3901 00009F55 890EF48D                _0xaa1c:  mov [0x8df4],cx
  3902 00009F59 BE0A61                  _0xaa20:  mov si,0x610a
  3903 00009F5C C606088E42              _0xaa23:  mov byte [0x8e08],0x42
  3904 00009F61 E82C01                  _0xaa28:  call _0xab0c
  3905 00009F64 8B36F08D                _0xaa2b:  mov si,[0x8df0]
  3906 00009F68 B80000                  _0xaa2f:  mov ax,0x0
  3907 00009F6B 8B0EF68D                _0xaa32:  mov cx,[0x8df6]
  3908 00009F6F F9                      _0xaa36:  stc
  3909 00009F70 D1D0                    _0xaa37:  rcl ax,1
  3910 00009F72 E2FB                    _0xaa39:  loop _0xaa36
  3911 00009F74 BF0A61                  _0xaa3b:  mov di,0x610a
  3912 00009F77 E84801                  _0xaa3e:  call _0xab3f
  3913 00009F7A BE0A61                  _0xaa41:  mov si,0x610a
  3914 00009F7D C606088E41              _0xaa44:  mov byte [0x8e08],0x41
  3915 00009F82 E80B01                  _0xaa49:  call _0xab0c
  3916 00009F85 BF9460                  _0xaa4c:  mov di,0x6094
  3917 00009F88 BEBE60                  _0xaa4f:  mov si,0x60be
  3918 00009F8B BB7B60                  _0xaa52:  mov bx,0x607b
  3919 00009F8E B91500                  _0xaa55:  mov cx,0x15
  3920 00009F91 8A07                    _0xaa58:  mov al,[bx]
  3921 00009F93 43                      _0xaa5a:  inc bx
  3922 00009F94 08C0                    _0xaa5b:  or al,al
  3923 00009F96 7851                    _0xaa5d:  js _0xaa6b
  3924 00009F98 AC                      _0xaa5f:  lodsb
  3925 00009F99 E8B702                  _0xaa60:  call _0xacd0
  3926 00009F9C AA                      _0xaa63:  stosb
  3927 00009F9D AC                      _0xaa64:  lodsb
  3928 00009F9E E8C202                  _0xaa65:  call _0xace0
  3929 00009FA1 AA                      _0xaa68:  stosb
  3930 00009FA2 EB4F                    _0xaa69:  jmp short _0xaa75
  3931                                  
  3932                                  ; ─────────────────────────────────────────────────────────────────────
  3933                                  
  3934 00009FA4 C705FFFF                _0xaa6b:  mov word [di],0xffff
  3935 00009FA8 83C702                  _0xaa6f:  add di,byte +0x2
  3936 00009FAB 83C602                  _0xaa72:  add si,byte +0x2
  3937 00009FAE E2E1                    _0xaa75:  loop _0xaa58
  3938 00009FB0 BB99AD                  _0xaa77:  mov bx,0xad99
  3939 00009FB3 E85003                  _0xaa7a:  call _0xad83
  3940 00009FB6 31FF                    _0xaa7d:  xor di,di
  3941 00009FB8 BE4E89                  _0xaa7f:  mov si,0x894e
  3942 00009FBB F6064E89FF              _0xaa82:  test byte [0x894e],0xff
  3943 00009FC0 7848                    _0xaa87:  js _0xaa8c
  3944 00009FC2 E85300                  _0xaa89:  call _0xaa9a
  3945 00009FC5 BE8389                  _0xaa8c:  mov si,0x8983
  3946 00009FC8 F6068389FF              _0xaa8f:  test byte [0x8983],0xff
  3947 00009FCD 7946                    _0xaa94:  jns _0xaa97
  3948 00009FCF C3                      _0xaa96:  ret
  3949                                  
  3950                                  ; ─────────────────────────────────────────────────────────────────────
  3951                                  
  3952 00009FD0 BF0200                  _0xaa97:  mov di,0x2
  3953 00009FD3 8A1EDD8D                _0xaa9a:  mov bl,[0x8ddd]
  3954 00009FD7 30FF                    _0xaa9e:  xor bh,bh
  3955 00009FD9 D1E3                    _0xaaa0:  shl bx,1
  3956 00009FDB D1E3                    _0xaaa2:  shl bx,1
  3957 00009FDD 8B819269                _0xaaa4:  mov ax,[bx+di+0x6992]
  3958 00009FE1 E86F02                  _0xaaa8:  call _0xacd0
  3959 00009FE4 884419                  _0xaaab:  mov [si+0x19],al
  3960 00009FE7 D0E0                    _0xaaae:  shl al,1
  3961 00009FE9 88441D                  _0xaab0:  mov [si+0x1d],al
  3962 00009FEC 88441F                  _0xaab3:  mov [si+0x1f],al
  3963 00009FEF 2C08                    _0xaab6:  sub al,0x8
  3964 00009FF1 7947                    _0xaab8:  jns _0xaabc
  3965 00009FF3 30C0                    _0xaaba:  xor al,al
  3966 00009FF5 3A06AA8D                _0xaabc:  cmp al,[0x8daa]
  3967 00009FF9 7703E9(C5AA)            _0xaac0:  jna 0xaac5
  3968 00009FFE A0AA8D                  _0xaac2:  mov al,[0x8daa]
  3969 0000A001 884417                  _0xaac5:  mov [si+0x17],al
  3970 0000A004 88E0                    _0xaac8:  mov al,ah
  3971 0000A006 E85A02                  _0xaaca:  call _0xace0
  3972 0000A009 88441A                  _0xaacd:  mov [si+0x1a],al
  3973 0000A00C D0E0                    _0xaad0:  shl al,1
  3974 0000A00E 88441E                  _0xaad2:  mov [si+0x1e],al
  3975 0000A011 884420                  _0xaad5:  mov [si+0x20],al
  3976 0000A014 2C04                    _0xaad8:  sub al,0x4
  3977 0000A016 7947                    _0xaada:  jns _0xaade
  3978 0000A018 30C0                    _0xaadc:  xor al,al
  3979 0000A01A 3A06AB8D                _0xaade:  cmp al,[0x8dab]
  3980 0000A01E 7703E9(E7AA)            _0xaae2:  jna 0xaae7
  3981 0000A023 A0AB8D                  _0xaae4:  mov al,[0x8dab]
  3982 0000A026 884418                  _0xaae7:  mov [si+0x18],al
  3983 0000A029 31C0                    _0xaaea:  xor ax,ax
  3984 0000A02B 894421                  _0xaaec:  mov [si+0x21],ax
  3985 0000A02E 894423                  _0xaaef:  mov [si+0x23],ax
  3986 0000A031 C6442E00                _0xaaf2:  mov byte [si+0x2e],0x0
  3987 0000A035 884429                  _0xaaf6:  mov [si+0x29],al
  3988 0000A038 884427                  _0xaaf9:  mov [si+0x27],al
  3989 0000A03B E8F6FB                  _0xaafc:  call _0xa6f8
  3990 0000A03E 8B440F                  _0xaaff:  mov ax,[si+0xf]
  3991 0000A041 894411                  _0xab02:  mov [si+0x11],ax
  3992 0000A044 8B4413                  _0xab05:  mov ax,[si+0x13]
  3993 0000A047 894415                  _0xab08:  mov [si+0x15],ax
  3994 0000A04A C3                      _0xab0b:  ret
  3995                                  
  3996                                  ; ─────────────────────────────────────────────────────────────────────
  3997                                  
  3998 0000A04B BFC05C                  _0xab0c:  mov di,0x5cc0
  3999 0000A04E AC                      _0xab0f:  lodsb
  4000 0000A04F 30E4                    _0xab10:  xor ah,ah
  4001 0000A051 01C7                    _0xab12:  add di,ax
  4002 0000A053 AC                      _0xab14:  lodsb
  4003 0000A054 F626018E                _0xab15:  mul byte [0x8e01]
  4004 0000A058 01C7                    _0xab19:  add di,ax
  4005 0000A05A 8A26088E                _0xab1b:  mov ah,[0x8e08]
  4006 0000A05E F6060B8EFF              _0xab1f:  test byte [0x8e0b],0xff
  4007 0000A063 7458                    _0xab24:  jz _0xab3a
  4008 0000A065 56                      _0xab26:  push si
  4009 0000A066 57                      _0xab27:  push di
  4010 0000A067 51                      _0xab28:  push cx
  4011 0000A068 E8C7E2                  _0xab29:  call _0x8658
  4012 0000A06B D1EA                    _0xab2c:  shr dx,1
  4013 0000A06D 83E203                  _0xab2e:  and dx,0x3
  4014 0000A070 80C243                  _0xab32:  add dl,0x43
  4015 0000A073 59                      _0xab35:  pop cx
  4016 0000A074 5F                      _0xab36:  pop di
  4017 0000A075 5E                      _0xab37:  pop si
  4018 0000A076 88D4                    _0xab38:  mov ah,dl
  4019 0000A078 8825                    _0xab3a:  mov [di],ah
  4020 0000A07A E2CF                    _0xab3c:  loop _0xab0c
  4021 0000A07C C3                      _0xab3e:  ret
  4022 0000A07D 31C9                    _0xab3f:  xor cx,cx
  4023 0000A07F 57                      _0xab41:  push di
  4024 0000A080 D1E8                    _0xab42:  shr ax,1
  4025 0000A082 7359                    _0xab44:  jnc _0xab5a
  4026 0000A084 50                      _0xab46:  push ax
  4027 0000A085 8A04                    _0xab47:  mov al,[si]
  4028 0000A087 E8C901                  _0xab49:  call _0xacd0
  4029 0000A08A AA                      _0xab4c:  stosb
  4030 0000A08B 8A4401                  _0xab4d:  mov al,[si+0x1]
  4031 0000A08E E8D201                  _0xab50:  call _0xace0
  4032 0000A091 AA                      _0xab53:  stosb
  4033 0000A092 58                      _0xab54:  pop ax
  4034 0000A093 41                      _0xab55:  inc cx
  4035 0000A094 09C0                    _0xab56:  or ax,ax
  4036 0000A096 744A                    _0xab58:  jz _0xab5f
  4037 0000A098 83C602                  _0xab5a:  add si,byte +0x2
  4038 0000A09B EBE3                    _0xab5d:  jmp short _0xab42
  4039                                  
  4040                                  ; ─────────────────────────────────────────────────────────────────────
  4041                                  
  4042 0000A09D 5E                      _0xab5f:  pop si
  4043 0000A09E 884CFF                  _0xab60:  mov [si-0x1],cl
  4044 0000A0A1 C3                      _0xab63:  ret
  4045 0000A0A2 89F2                    _0xab64:  mov dx,si
  4046 0000A0A4 A0DD8D                  _0xab66:  mov al,[0x8ddd]
  4047 0000A0A7 B405                    _0xab69:  mov ah,0x5
  4048 0000A0A9 F6E4                    _0xab6b:  mul ah
  4049 0000A0AB 89C6                    _0xab6d:  mov si,ax
  4050 0000A0AD 81C6D663                _0xab6f:  add si,0x63d6
  4051 0000A0B1 30E4                    _0xab73:  xor ah,ah
  4052 0000A0B3 AC                      _0xab75:  lodsb
  4053 0000A0B4 A2018E                  _0xab76:  mov [0x8e01],al
  4054 0000A0B7 48                      _0xab79:  dec ax
  4055 0000A0B8 D1E0                    _0xab7a:  shl ax,1
  4056 0000A0BA D1E0                    _0xab7c:  shl ax,1
  4057 0000A0BC D1E0                    _0xab7e:  shl ax,1
  4058 0000A0BE D1E0                    _0xab80:  shl ax,1
  4059 0000A0C0 A3048E                  _0xab82:  mov [0x8e04],ax
  4060 0000A0C3 31C0                    _0xab85:  xor ax,ax
  4061 0000A0C5 AC                      _0xab87:  lodsb
  4062 0000A0C6 A2008E                  _0xab88:  mov [0x8e00],al
  4063 0000A0C9 AC                      _0xab8b:  lodsb
  4064 0000A0CA A2DB8D                  _0xab8c:  mov [0x8ddb],al
  4065 0000A0CD AC                      _0xab8f:  lodsb
  4066 0000A0CE F606D98DFF              _0xab90:  test byte [0x8dd9],0xff
  4067 0000A0D3 7548                    _0xab95:  jnz _0xab9a
  4068 0000A0D5 A2DB8D                  _0xab97:  mov [0x8ddb],al
  4069 0000A0D8 AC                      _0xab9a:  lodsb
  4070 0000A0D9 A2FE8D                  _0xab9b:  mov [0x8dfe],al
  4071 0000A0DC B303                    _0xab9e:  mov bl,0x3
  4072 0000A0DE B403                    _0xaba0:  mov ah,0x3
  4073 0000A0E0 3C55                    _0xaba2:  cmp al,0x55
  4074 0000A0E2 745D                    _0xaba4:  jz _0xabbe
  4075 0000A0E4 80C302                  _0xaba6:  add bl,0x2
  4076 0000A0E7 3C58                    _0xaba9:  cmp al,0x58
  4077 0000A0E9 7456                    _0xabab:  jz _0xabbe
  4078 0000A0EB 80C302                  _0xabad:  add bl,0x2
  4079 0000A0EE B401                    _0xabb0:  mov ah,0x1
  4080 0000A0F0 3C5B                    _0xabb2:  cmp al,0x5b
  4081 0000A0F2 744D                    _0xabb4:  jz _0xabbe
  4082 0000A0F4 B404                    _0xabb6:  mov ah,0x4
  4083 0000A0F6 3C6D                    _0xabb8:  cmp al,0x6d
  4084 0000A0F8 7447                    _0xabba:  jz _0xabbe
  4085 0000A0FA 30E4                    _0xabbc:  xor ah,ah
  4086 0000A0FC 8826098E                _0xabbe:  mov [0x8e09],ah
  4087 0000A100 881EFF8D                _0xabc2:  mov [0x8dff],bl
  4088 0000A104 89D6                    _0xabc6:  mov si,dx
  4089 0000A106 A0008E                  _0xabc8:  mov al,[0x8e00]
  4090 0000A109 F626018E                _0xabcb:  mul byte [0x8e01]
  4091 0000A10D A3028E                  _0xabcf:  mov [0x8e02],ax
  4092 0000A110 31C9                    _0xabd2:  xor cx,cx
  4093 0000A112 30E4                    _0xabd4:  xor ah,ah
  4094 0000A114 30C0                    _0xabd6:  xor al,al
  4095 0000A116 50                      _0xabd8:  push ax
  4096 0000A117 E85C00                  _0xabd9:  call _0xabf3
  4097 0000A11A 52                      _0xabdc:  push dx
  4098 0000A11B E86400                  _0xabdd:  call _0xabff
  4099 0000A11E 5A                      _0xabe0:  pop dx
  4100 0000A11F 58                      _0xabe1:  pop ax
  4101 0000A120 41                      _0xabe2:  inc cx
  4102 0000A121 40                      _0xabe3:  inc ax
  4103 0000A122 3A06018E                _0xabe4:  cmp al,[0x8e01]
  4104 0000A126 72EE                    _0xabe8:  jc _0xabd8
  4105 0000A128 FEC4                    _0xabea:  inc ah
  4106 0000A12A 3A26008E                _0xabec:  cmp ah,[0x8e00]
  4107 0000A12E 72E4                    _0xabf0:  jc _0xabd6
  4108 0000A130 C3                      _0xabf2:  ret
  4109                                  
  4110                                  ; ─────────────────────────────────────────────────────────────────────
  4111                                  
  4112 0000A131 F7C10700                _0xabf3:  test cx,0x7
  4113 0000A135 7548                    _0xabf7:  jnz _0xabfc
  4114 0000A137 8A14                    _0xabf9:  mov dl,[si]
  4115 0000A139 46                      _0xabfb:  inc si
  4116 0000A13A D0E2                    _0xabfc:  shl dl,1
  4117 0000A13C C3                      _0xabfe:  ret
  4118                                  
  4119                                  ; ─────────────────────────────────────────────────────────────────────
  4120                                  
  4121 0000A13D 9C                      _0xabff:  pushf
  4122 0000A13E E81201                  _0xac00:  call _0xacd0
  4123 0000A141 88C3                    _0xac03:  mov bl,al
  4124 0000A143 88E0                    _0xac05:  mov al,ah
  4125 0000A145 E81B01                  _0xac07:  call _0xace0
  4126 0000A148 F626018E                _0xac0a:  mul byte [0x8e01]
  4127 0000A14C 30FF                    _0xac0e:  xor bh,bh
  4128 0000A14E 01C3                    _0xac10:  add bx,ax
  4129 0000A150 B440                    _0xac12:  mov ah,0x40
  4130 0000A152 9D                      _0xac14:  popf
  4131 0000A153 736F                    _0xac15:  jnc _0xac41
  4132 0000A155 51                      _0xac17:  push cx
  4133 0000A156 53                      _0xac18:  push bx
  4134 0000A157 E8D8E1                  _0xac19:  call _0x8658
  4135 0000A15A 803E098E00              _0xac1c:  cmp byte [0x8e09],0x0
  4136 0000A15F 7550                    _0xac21:  jnz _0xac2e
  4137 0000A161 B472                    _0xac23:  mov ah,0x72
  4138 0000A163 80E606                  _0xac25:  and dh,0x6
  4139 0000A166 755A                    _0xac28:  jnz _0xac3f
  4140 0000A168 B454                    _0xac2a:  mov ah,0x54
  4141 0000A16A EB56                    _0xac2c:  jmp short _0xac3f
  4142                                  
  4143                                  ; ─────────────────────────────────────────────────────────────────────
  4144                                  
  4145 0000A16C D1EA                    _0xac2e:  shr dx,1
  4146 0000A16E D1EA                    _0xac30:  shr dx,1
  4147 0000A170 89D0                    _0xac32:  mov ax,dx
  4148 0000A172 83E01F                  _0xac34:  and ax,0x1f
  4149 0000A175 F636098E                _0xac37:  div byte [0x8e09]
  4150 0000A179 0226FE8D                _0xac3b:  add ah,[0x8dfe]
  4151 0000A17D 5B                      _0xac3f:  pop bx
  4152 0000A17E 59                      _0xac40:  pop cx
  4153 0000A17F 88A7C05C                _0xac41:  mov [bx+0x5cc0],ah
  4154 0000A183 C3                      _0xac45:  ret
  4155                                  
  4156                                  ; ─────────────────────────────────────────────────────────────────────
  4157                                  
  4158 0000A184 F606E08DFF              _0xac46:  test byte [0x8de0],0xff
  4159 0000A189 7460                    _0xac4b:  jz _0xac68
  4160 0000A18B E8C500                  _0xac4d:  call _0xacd0
  4161 0000A18E 8A26088E                _0xac50:  mov ah,[0x8e08]
  4162 0000A192 80FC71                  _0xac54:  cmp ah,0x71
  4163 0000A195 7455                    _0xac57:  jz _0xac69
  4164 0000A197 80FC5E                  _0xac59:  cmp ah,0x5e
  4165 0000A19A 7452                    _0xac5c:  jz _0xac6b
  4166 0000A19C 80FC68                  _0xac5e:  cmp ah,0x68
  4167 0000A19F 744D                    _0xac61:  jz _0xac6b
  4168 0000A1A1 80FC62                  _0xac63:  cmp ah,0x62
  4169 0000A1A4 744A                    _0xac66:  jz _0xac6d
  4170 0000A1A6 C3                      _0xac68:  ret
  4171 0000A1A7 FEC8                    _0xac69:  dec al
  4172 0000A1A9 FEC8                    _0xac6b:  dec al
  4173 0000A1AB FEC8                    _0xac6d:  dec al
  4174 0000A1AD C3                      _0xac6f:  ret
  4175                                  
  4176                                  ; ─────────────────────────────────────────────────────────────────────
  4177                                  
  4178 0000A1AE F606DF8DFF              _0xac70:  test byte [0x8ddf],0xff
  4179 0000A1B3 7465                    _0xac75:  jz _0xac97
  4180 0000A1B5 E8AB00                  _0xac77:  call _0xace0
  4181 0000A1B8 8A26088E                _0xac7a:  mov ah,[0x8e08]
  4182 0000A1BC 80FC5E                  _0xac7e:  cmp ah,0x5e
  4183 0000A1BF 745A                    _0xac81:  jz _0xac98
  4184 0000A1C1 80FC68                  _0xac83:  cmp ah,0x68
  4185 0000A1C4 7455                    _0xac86:  jz _0xac98
  4186 0000A1C6 80FC71                  _0xac88:  cmp ah,0x71
  4187 0000A1C9 7450                    _0xac8b:  jz _0xac98
  4188 0000A1CB 80FC62                  _0xac8d:  cmp ah,0x62
  4189 0000A1CE 744D                    _0xac90:  jz _0xac9a
  4190 0000A1D0 80FC66                  _0xac92:  cmp ah,0x66
  4191 0000A1D3 7448                    _0xac95:  jz _0xac9a
  4192 0000A1D5 C3                      _0xac97:  ret
  4193 0000A1D6 FEC8                    _0xac98:  dec al
  4194 0000A1D8 FEC8                    _0xac9a:  dec al
  4195 0000A1DA C3                      _0xac9c:  ret
  4196                                  
  4197                                  ; ─────────────────────────────────────────────────────────────────────
  4198                                  
  4199 0000A1DB F606E08DFF              _0xac9d:  test byte [0x8de0],0xff
  4200 0000A1E0 7457                    _0xaca2:  jz _0xacb6
  4201 0000A1E2 3C51                    _0xaca4:  cmp al,0x51
  4202 0000A1E4 754A                    _0xaca6:  jnz _0xacad
  4203 0000A1E6 C606088E53              _0xaca8:  mov byte [0x8e08],0x53
  4204 0000A1EB 3C53                    _0xacad:  cmp al,0x53
  4205 0000A1ED 754A                    _0xacaf:  jnz _0xacb6
  4206 0000A1EF C606088E51              _0xacb1:  mov byte [0x8e08],0x51
  4207 0000A1F4 F606DF8DFF              _0xacb6:  test byte [0x8ddf],0xff
  4208 0000A1F9 7457                    _0xacbb:  jz _0xaccf
  4209 0000A1FB 3C52                    _0xacbd:  cmp al,0x52
  4210 0000A1FD 754A                    _0xacbf:  jnz _0xacc6
  4211 0000A1FF C606088E50              _0xacc1:  mov byte [0x8e08],0x50
  4212 0000A204 3C50                    _0xacc6:  cmp al,0x50
  4213 0000A206 754A                    _0xacc8:  jnz _0xaccf
  4214 0000A208 C606088E52              _0xacca:  mov byte [0x8e08],0x52
  4215 0000A20D C3                      _0xaccf:  ret
  4216 0000A20E F606E08DFF              _0xacd0:  test byte [0x8de0],0xff
  4217 0000A213 744D                    _0xacd5:  jz _0xacdf
  4218 0000A215 2A06018E                _0xacd7:  sub al,[0x8e01]
  4219 0000A219 FEC0                    _0xacdb:  inc al
  4220 0000A21B F6D8                    _0xacdd:  neg al
  4221 0000A21D C3                      _0xacdf:  ret
  4222                                  
  4223                                  ; ─────────────────────────────────────────────────────────────────────
  4224                                  
  4225 0000A21E F606DF8DFF              _0xace0:  test byte [0x8ddf],0xff
  4226 0000A223 744D                    _0xace5:  jz _0xacef
  4227 0000A225 2A06008E                _0xace7:  sub al,[0x8e00]
  4228 0000A229 FEC0                    _0xaceb:  inc al
  4229 0000A22B F6D8                    _0xaced:  neg al
  4230 0000A22D C3                      _0xacef:  ret
  4231                                  
  4232                                  ; ─────────────────────────────────────────────────────────────────────
  4233                                  
  4234 0000A22E 8B36E88D                _0xacf0:  mov si,[0x8de8]
  4235 0000A232 AC                      _0xacf4:  lodsb
  4236 0000A233 3C40                    _0xacf5:  cmp al,0x40
  4237 0000A235 74F6                    _0xacf7:  jz _0xacef
  4238 0000A237 7269                    _0xacf9:  jc _0xad1f
  4239 0000A239 A2088E                  _0xacfb:  mov [0x8e08],al
  4240 0000A23C E89CFF                  _0xacfe:  call _0xac9d
  4241 0000A23F 3C73                    _0xad01:  cmp al,0x73
  4242 0000A241 75EF                    _0xad03:  jnz _0xacf4
  4243 0000A243 803EDD8D01              _0xad05:  cmp byte [0x8ddd],0x1
  4244 0000A248 74E8                    _0xad0a:  jz _0xacf4
  4245 0000A24A 8A04                    _0xad0c:  mov al,[si]
  4246 0000A24C E8BFFF                  _0xad0e:  call _0xacd0
  4247 0000A24F A2068E                  _0xad11:  mov [0x8e06],al
  4248 0000A252 8A4401                  _0xad14:  mov al,[si+0x1]
  4249 0000A255 E8C6FF                  _0xad17:  call _0xace0
  4250 0000A258 A2078E                  _0xad1a:  mov [0x8e07],al
  4251 0000A25B EBD5                    _0xad1d:  jmp short _0xacf4
  4252                                  
  4253                                  ; ─────────────────────────────────────────────────────────────────────
  4254                                  
  4255 0000A25D BFC05C                  _0xad1f:  mov di,0x5cc0
  4256 0000A260 E821FF                  _0xad22:  call _0xac46
  4257 0000A263 30E4                    _0xad25:  xor ah,ah
  4258 0000A265 01C7                    _0xad27:  add di,ax
  4259 0000A267 AC                      _0xad29:  lodsb
  4260 0000A268 E843FF                  _0xad2a:  call _0xac70
  4261 0000A26B F626018E                _0xad2d:  mul byte [0x8e01]
  4262 0000A26F 01C7                    _0xad31:  add di,ax
  4263 0000A271 A0088E                  _0xad33:  mov al,[0x8e08]
  4264 0000A274 3C77                    _0xad36:  cmp al,0x77
  4265 0000A276 754F                    _0xad38:  jnz _0xad44
  4266 0000A278 E8B7E0                  _0xad3a:  call _0x8658
  4267 0000A27B 80E660                  _0xad3d:  and dh,0x60
  4268 0000A27E B040                    _0xad40:  mov al,0x40
  4269 0000A280 75B0                    _0xad42:  jnz _0xacf4
  4270 0000A282 8805                    _0xad44:  mov [di],al
  4271 0000A284 BB328E                  _0xad46:  mov bx,0x8e32
  4272 0000A287 8A07                    _0xad49:  mov al,[bx]
  4273 0000A289 08C0                    _0xad4b:  or al,al
  4274 0000A28B 74A5                    _0xad4d:  jz _0xacf4
  4275 0000A28D 3A06088E                _0xad4f:  cmp al,[0x8e08]
  4276 0000A291 744A                    _0xad53:  jz _0xad5a
  4277 0000A293 83C303                  _0xad55:  add bx,byte +0x3
  4278 0000A296 EBEF                    _0xad58:  jmp short _0xad49
  4279                                  
  4280                                  ; ─────────────────────────────────────────────────────────────────────
  4281                                  
  4282 0000A298 8B5F01                  _0xad5a:  mov bx,[bx+0x1]
  4283 0000A29B 8A17                    _0xad5d:  mov dl,[bx]
  4284 0000A29D 08D2                    _0xad5f:  or dl,dl
  4285 0000A29F 7491                    _0xad61:  jz _0xacf4
  4286 0000A2A1 30E4                    _0xad63:  xor ah,ah
  4287 0000A2A3 8A4701                  _0xad65:  mov al,[bx+0x1]
  4288 0000A2A6 89C5                    _0xad68:  mov bp,ax
  4289 0000A2A8 8A4702                  _0xad6a:  mov al,[bx+0x2]
  4290 0000A2AB F626018E                _0xad6d:  mul byte [0x8e01]
  4291 0000A2AF 01C5                    _0xad71:  add bp,ax
  4292 0000A2B1 8813                    _0xad73:  mov [bp+di],dl
  4293 0000A2B3 83C303                  _0xad75:  add bx,byte +0x3
  4294 0000A2B6 EBE3                    _0xad78:  jmp short _0xad5d
  4295                                  
  4296                                  ; ─────────────────────────────────────────────────────────────────────
  4297                                  
  4298 0000A2B8 59                      _0xad7a:  pop cx
  4299 0000A2B9 81F983AB                _0xad7b:  cmp cx,0xab83
  4300 0000A2BD 7460                    _0xad7f:  jz _0xad9c
  4301 0000A2BF FFE1                    _0xad81:  jmp cx
  4302                                  
  4303                                  ; ─────────────────────────────────────────────────────────────────────
  4304                                  
  4305 0000A2C1 8B4F0C                  _0xad83:  mov cx,[bx+0xc]
  4306 0000A2C4 FE4F0E                  _0xad86:  dec byte [bx+0xe]
  4307 0000A2C7 E0(86)                  _0xad89:  loopne 0xad86
  4308 0000A2C9 E3(7A)                  _0xad8b:  jcxz 0xad7a
  4309 0000A2CB 51                      _0xad8d:  push cx
  4310 0000A2CC 8B5706                  _0xad8e:  mov dx,[bx+0x6]
  4311 0000A2CF 8B4F0A                  _0xad91:  mov cx,[bx+0xa]
  4312 0000A2D2 2B4F08                  _0xad94:  sub cx,[bx+0x8]
  4313 0000A2D5 D1E9                    _0xad97:  shr cx,1
  4314 0000A2D7 8B7708                  _0xad99:  mov si,[bx+0x8]
  4315 0000A2DA D1CA                    _0xad9c:  ror dx,1
  4316 0000A2DC AD                      _0xad9e:  lodsw
  4317 0000A2DD 01C2                    _0xad9f:  add dx,ax
  4318 0000A2DF E2F9                    _0xada1:  loop _0xad9c
  4319 0000A2E1 58                      _0xada3:  pop ax
  4320 0000A2E2 2B5704                  _0xada4:  sub dx,[bx+0x4]
  4321 0000A2E5 74D1                    _0xada7:  jz _0xad7a
  4322 0000A2E7 C7069EABAB00            _0xada9:  mov word [0xab9e],0xab
  4323 0000A2ED EBE8                    _0xadaf:  jmp short _0xad99
  4324                                  
  4325                                  ; ─────────────────────────────────────────────────────────────────────
  4326                                  
  4327 0000A2EF C3                      _0xadb1:  ret
  4328                                  
  4329                                  ; ─────────────────────────────────────────────────────────────────────
  4330                                  
  4331 0000A2F0 BE0C8E                  _0xadb2:  mov si,0x8e0c
  4332 0000A2F3 8A16DD8D                _0xadb5:  mov dl,[0x8ddd]
  4333 0000A2F7 8A36DE8D                _0xadb9:  mov dh,[0x8dde]
  4334 0000A2FB B90900                  _0xadbd:  mov cx,0x9
  4335 0000A2FE 8B1E308E                _0xadc0:  mov bx,[0x8e30]
  4336 0000A302 80C347                  _0xadc4:  add bl,0x47
  4337 0000A305 80FA01                  _0xadc7:  cmp dl,0x1
  4338 0000A308 7546                    _0xadca:  jnz _0xadcd
  4339 0000A30A 4B                      _0xadcc:  dec bx
  4340 0000A30B 3B14                    _0xadcd:  cmp dx,[si]
  4341 0000A30D 7548                    _0xadcf:  jnz _0xadd4
  4342 0000A30F E84B00                  _0xadd1:  call _0xadda
  4343 0000A312 83C604                  _0xadd4:  add si,byte +0x4
  4344 0000A315 E2F4                    _0xadd7:  loop _0xadcd
  4345 0000A317 C3                      _0xadd9:  ret
  4346                                  
  4347                                  ; ─────────────────────────────────────────────────────────────────────
  4348                                  
  4349 0000A318 BFC05C                  _0xadda:  mov di,0x5cc0
  4350 0000A31B 8A4402                  _0xaddd:  mov al,[si+0x2]
  4351 0000A31E E8EDFE                  _0xade0:  call _0xacd0
  4352 0000A321 30E4                    _0xade3:  xor ah,ah
  4353 0000A323 01C7                    _0xade5:  add di,ax
  4354 0000A325 8A4403                  _0xade7:  mov al,[si+0x3]
  4355 0000A328 E8F3FE                  _0xadea:  call _0xace0
  4356 0000A32B F626018E                _0xaded:  mul byte [0x8e01]
  4357 0000A32F 01C7                    _0xadf1:  add di,ax
  4358 0000A331 881D                    _0xadf3:  mov [di],bl
  4359 0000A333 4B                      _0xadf5:  dec bx
  4360 0000A334 C3                      _0xadf6:  ret
  4361                                  
  4362                                  ; ─────────────────────────────────────────────────────────────────────
  4363                                  
  4364 0000A335 FA                      _0xadf7:  cli
  4365 0000A336 31C0                    _0xadf8:  xor ax,ax
  4366 0000A338 8EC0                    _0xadfa:  mov es,ax
  4367 0000A33A B90001                  _0xadfc:  mov cx,0x100
  4368 0000A33D 31FF                    _0xadff:  xor di,di
  4369 0000A33F FC                      _0xae01:  cld
  4370                                  
  4371 0000A340 31C0                    _0xae02:  xor ax,ax
  4372 0000A342 AB                      _0xae04:  stosw
  4373 0000A343 B84000                  _0xae05:  mov ax,0x40
  4374 0000A346 AB                      _0xae08:  stosw
  4375 0000A347 E2F7                    _0xae09:  loop _0xae02
  4376                                  
  4377 0000A349 B88386                  _0xae0b:  mov ax,0x8683
  4378 0000A34C BFEC03                  _0xae0e:  mov di,0x3ec
  4379 0000A34F AB                      _0xae11:  stosw
  4380                                  
  4381 0000A350 B84000                  _0xae12:  mov ax,0x40
  4382 0000A353 AB                      _0xae15:  stosw
  4383 0000A354 5D                      _0xae16:  pop bp
  4384 0000A355 31FF                    _0xae17:  xor di,di
  4385 0000A357 31F6                    _0xae19:  xor si,si
  4386 0000A359 8EC0                    _0xae1b:  mov es,ax
  4387 0000A35B B9A9AD                  _0xae1d:  mov cx,0xada9
  4388 0000A35E F3A4                    _0xae20:  rep movsb
  4389                                  
  4390 0000A360 8ED8                    _0xae22:  mov ds,ax
  4391 0000A362 8ED0                    _0xae24:  mov ss,ax
  4392 0000A364 50                      _0xae26:  push ax
  4393 0000A365 55                      _0xae27:  push bp
  4394 0000A366 FB                      _0xae28:  sti
  4395 0000A367 CB                      _0xae29:  retf
  4396                                  
  4397                                  ; ─────────────────────────────────────────────────────────────────────
  4398                                  
  4399 0000A368 BEC05C                  _0xae2a:  mov si,0x5cc0
  4400 0000A36B 31FF                    _0xae2d:  xor di,di
  4401 0000A36D 8B16048E                _0xae2f:  mov dx,[0x8e04]
  4402 0000A371 BB3689                  _0xae33:  mov bx,0x8936
  4403 0000A374 30E4                    _0xae36:  xor ah,ah
  4404 0000A376 30C0                    _0xae38:  xor al,al
  4405 0000A378 50                      _0xae3a:  push ax
  4406 0000A379 AC                      _0xae3b:  lodsb
  4407 0000A37A 3C72                    _0xae3c:  cmp al,0x72
  4408 0000A37C 7267                    _0xae3e:  jc _0xae62
  4409 0000A37E 7547                    _0xae40:  jnz _0xae44
  4410 0000A380 B040                    _0xae42:  mov al,0x40
  4411 0000A382 3C78                    _0xae44:  cmp al,0x78
  4412 0000A384 7547                    _0xae46:  jnz _0xae4a
  4413 0000A386 B040                    _0xae48:  mov al,0x40
  4414 0000A388 3C73                    _0xae4a:  cmp al,0x73
  4415 0000A38A 7547                    _0xae4c:  jnz _0xae50
  4416 0000A38C B040                    _0xae4e:  mov al,0x40
  4417 0000A38E 3C74                    _0xae50:  cmp al,0x74
  4418 0000A390 7547                    _0xae52:  jnz _0xae56
  4419 0000A392 B055                    _0xae54:  mov al,0x55
  4420 0000A394 3C75                    _0xae56:  cmp al,0x75
  4421 0000A396 7547                    _0xae58:  jnz _0xae5c
  4422 0000A398 B058                    _0xae5a:  mov al,0x58
  4423 0000A39A 3C76                    _0xae5c:  cmp al,0x76
  4424 0000A39C 7547                    _0xae5e:  jnz _0xae62
  4425 0000A39E B05B                    _0xae60:  mov al,0x5b
  4426 0000A3A0 3C71                    _0xae62:  cmp al,0x71
  4427 0000A3A2 7547                    _0xae64:  jnz _0xae68
  4428 0000A3A4 B068                    _0xae66:  mov al,0x68
  4429 0000A3A6 56                      _0xae68:  push si
  4430 0000A3A7 E86700                  _0xae69:  call _0xae8e
  4431 0000A3AA 5E                      _0xae6c:  pop si
  4432 0000A3AB 58                      _0xae6d:  pop ax
  4433 0000A3AC 83C710                  _0xae6e:  add di,byte +0x10
  4434 0000A3AF 40                      _0xae71:  inc ax
  4435 0000A3B0 3A06018E                _0xae72:  cmp al,[0x8e01]
  4436 0000A3B4 72C2                    _0xae76:  jc _0xae3a
  4437 0000A3B6 83C730                  _0xae78:  add di,byte +0x30
  4438 0000A3B9 01D7                    _0xae7b:  add di,dx
  4439 0000A3BB 01D7                    _0xae7d:  add di,dx
  4440 0000A3BD 01D7                    _0xae7f:  add di,dx
  4441 0000A3BF FEC4                    _0xae81:  inc ah
  4442 0000A3C1 3A26008E                _0xae83:  cmp ah,[0x8e00]
  4443 0000A3C5 72AF                    _0xae87:  jc _0xae38
  4444 0000A3C7 8CC8                    _0xae89:  mov ax,cs
  4445 0000A3C9 8EC0                    _0xae8b:  mov es,ax
  4446 0000A3CB C3                      _0xae8d:  ret
  4447                                  
  4448                                  ; ─────────────────────────────────────────────────────────────────────
  4449                                  
  4450                                  ; draw something ?
  4451                                  
  4452                                  
  4453 0000A3CC BE7009                  _0xae8e:  mov si,0x970
  4454 0000A3CF 2C40                    _0xae91:  sub al,0x40
  4455 0000A3D1 30E4                    _0xae93:  xor ah,ah
  4456 0000A3D3 D1E0                    _0xae95:  shl ax,1
  4457 0000A3D5 D1E0                    _0xae97:  shl ax,1
  4458 0000A3D7 D1E0                    _0xae99:  shl ax,1
  4459 0000A3D9 D1E0                    _0xae9b:  shl ax,1
  4460 0000A3DB D1E0                    _0xae9d:  shl ax,1
  4461 0000A3DD D1E0                    _0xae9f:  shl ax,1
  4462 0000A3DF 01C6                    _0xaea1:  add si,ax
  4463 0000A3E1 D1E0                    _0xaea3:  shl ax,1
  4464 0000A3E3 01C6                    _0xaea5:  add si,ax
  4465 0000A3E5 8E07                    _0xaea7:  mov es,[bx]
  4466 0000A3E7 89FD                    _0xaea9:  mov bp,di
  4467 0000A3E9 B90800                  _0xaeab:  mov cx,0x8
  4468 0000A3EC F3A5                    _0xaeae:  rep movsw
  4469                                  
  4470 0000A3EE 01D7                    _0xaeb0:  add di,dx
  4471 0000A3F0 B90800                  _0xaeb2:  mov cx,0x8
  4472 0000A3F3 F3A5                    _0xaeb5:  rep movsw
  4473                                  
  4474 0000A3F5 01D7                    _0xaeb7:  add di,dx
  4475 0000A3F7 B90800                  _0xaeb9:  mov cx,0x8
  4476 0000A3FA F3A5                    _0xaebc:  rep movsw
  4477                                  
  4478 0000A3FC 01D7                    _0xaebe:  add di,dx
  4479 0000A3FE B90800                  _0xaec0:  mov cx,0x8
  4480 0000A401 F3A5                    _0xaec3:  rep movsw
  4481                                  
  4482 0000A403 89EF                    _0xaec5:  mov di,bp
  4483 0000A405 8E4702                  _0xaec7:  mov es,[bx+0x2]
  4484 0000A408 B90800                  _0xaeca:  mov cx,0x8
  4485 0000A40B F3A5                    _0xaecd:  rep movsw
  4486                                  
  4487 0000A40D 01D7                    _0xaecf:  add di,dx
  4488 0000A40F B90800                  _0xaed1:  mov cx,0x8
  4489 0000A412 F3A5                    _0xaed4:  rep movsw
  4490                                  
  4491 0000A414 01D7                    _0xaed6:  add di,dx
  4492 0000A416 B90800                  _0xaed8:  mov cx,0x8
  4493 0000A419 F3A5                    _0xaedb:  rep movsw
  4494                                  
  4495 0000A41B 01D7                    _0xaedd:  add di,dx
  4496 0000A41D B90800                  _0xaedf:  mov cx,0x8
  4497 0000A420 F3A5                    _0xaee2:  rep movsw
  4498                                  
  4499 0000A422 89EF                    _0xaee4:  mov di,bp
  4500 0000A424 8E4704                  _0xaee6:  mov es,[bx+0x4]
  4501 0000A427 B90800                  _0xaee9:  mov cx,0x8
  4502 0000A42A F3A5                    _0xaeec:  rep movsw
  4503                                  
  4504 0000A42C 01D7                    _0xaeee:  add di,dx
  4505 0000A42E B90800                  _0xaef0:  mov cx,0x8
  4506 0000A431 F3A5                    _0xaef3:  rep movsw
  4507                                  
  4508 0000A433 01D7                    _0xaef5:  add di,dx
  4509 0000A435 B90800                  _0xaef7:  mov cx,0x8
  4510 0000A438 F3A5                    _0xaefa:  rep movsw
  4511                                  
  4512 0000A43A 01D7                    _0xaefc:  add di,dx
  4513 0000A43C B90800                  _0xaefe:  mov cx,0x8
  4514 0000A43F F3A5                    _0xaf01:  rep movsw
  4515                                  
  4516 0000A441 89EF                    _0xaf03:  mov di,bp
  4517 0000A443 8CC9                    _0xaf05:  mov cx,cs
  4518 0000A445 8EC1                    _0xaf07:  mov es,cx
  4519 0000A447 C3                      _0xaf09:  ret
  4520                                  
  4521                                  ; ─────────────────────────────────────────────────────────────────────
  4522                                  
  4523 0000A448 BE4E89                  _0xaf0a:  mov si,0x894e
  4524 0000A44B BA0703                  _0xaf0d:  mov dx,0x307
  4525 0000A44E F6064E89FF              _0xaf10:  test byte [0x894e],0xff
  4526 0000A453 7848                    _0xaf15:  js _0xaf1a
  4527 0000A455 E85300                  _0xaf17:  call _0xaf28
  4528 0000A458 BA0605                  _0xaf1a:  mov dx,0x506
  4529 0000A45B BE8389                  _0xaf1d:  mov si,0x8983
  4530 0000A45E F6068389FF              _0xaf20:  test byte [0x8983],0xff
  4531 0000A463 7946                    _0xaf25:  jns _0xaf28
  4532 0000A465 C3                      _0xaf27:  ret
  4533                                  
  4534                                  ; ─────────────────────────────────────────────────────────────────────
  4535                                  
  4536 0000A466 F64428FF                _0xaf28:  test byte [si+0x28],0xff
  4537 0000A46A 7546                    _0xaf2c:  jnz _0xaf2f
  4538 0000A46C C3                      _0xaf2e:  ret
  4539                                  
  4540                                  ; ─────────────────────────────────────────────────────────────────────
  4541                                  
  4542 0000A46D FE4C28                  _0xaf2f:  dec byte [si+0x28]
  4543 0000A470 833ECF8D00              _0xaf32:  cmp word [0x8dcf],byte +0x0
  4544 0000A475 744A                    _0xaf37:  jz _0xaf3e
  4545 0000A477 F604FF                  _0xaf39:  test byte [si],0xff
  4546 0000A47A 7403E97F00              _0xaf3c:  jnz _0xaf7b
  4547 0000A47F FF4403                  _0xaf3e:  inc word [si+0x3]
  4548 0000A482 837C03FF                _0xaf41:  cmp word [si+0x3],byte -0x1
  4549 0000A486 7545                    _0xaf45:  jnz _0xaf4a
  4550 0000A488 FF4C03                  _0xaf47:  dec word [si+0x3]
  4551 0000A48B 8D5C0A                  _0xaf4a:  lea bx,[si+0xa]
  4552 0000A48E B90500                  _0xaf4d:  mov cx,0x5
  4553 0000A491 4B                      _0xaf50:  dec bx
  4554 0000A492 FE07                    _0xaf51:  inc byte [bx]
  4555 0000A494 803F3A                  _0xaf53:  cmp byte [bx],0x3a
  4556 0000A497 7565                    _0xaf56:  jnz _0xaf7b
  4557 0000A499 C60730                  _0xaf58:  mov byte [bx],0x30
  4558 0000A49C 83F904                  _0xaf5b:  cmp cx,byte +0x4
  4559 0000A49F 754B                    _0xaf5e:  jnz _0xaf69
  4560 0000A4A1 807C260F                _0xaf60:  cmp byte [si+0x26],0xf
  4561 0000A4A5 7345                    _0xaf64:  jnc _0xaf69
  4562 0000A4A7 FE4426                  _0xaf66:  inc byte [si+0x26]
  4563 0000A4AA E2E5                    _0xaf69:  loop _0xaf50
  4564 0000A4AC 8A4401                  _0xaf6b:  mov al,[si+0x1]
  4565 0000A4AF 8A5C02                  _0xaf6e:  mov bl,[si+0x2]
  4566 0000A4B2 30E4                    _0xaf71:  xor ah,ah
  4567 0000A4B4 30FF                    _0xaf73:  xor bh,bh
  4568 0000A4B6 BEA58C                  _0xaf75:  mov si,0x8ca5
  4569 0000A4B9 E9E9DC                  _0xaf78:  jmp _0x84f7
  4570                                  
  4571                                  ; ─────────────────────────────────────────────────────────────────────
  4572                                  
  4573 0000A4BC 56                      _0xaf7b:  push si
  4574 0000A4BD E899DC                  _0xaf7c:  call _0x84b4
  4575 0000A4C0 5E                      _0xaf7f:  pop si
  4576 0000A4C1 8A4401                  _0xaf80:  mov al,[si+0x1]
  4577 0000A4C4 8A5C02                  _0xaf83:  mov bl,[si+0x2]
  4578 0000A4C7 30E4                    _0xaf86:  xor ah,ah
  4579 0000A4C9 30FF                    _0xaf88:  xor bh,bh
  4580 0000A4CB 8D7404                  _0xaf8a:  lea si,[si+0x4]
  4581 0000A4CE B90500                  _0xaf8d:  mov cx,0x5
  4582 0000A4D1 46                      _0xaf90:  inc si
  4583 0000A4D2 803C30                  _0xaf91:  cmp byte [si],0x30
  4584 0000A4D5 E1(90)                  _0xaf94:  loope 0xaf90
  4585 0000A4D7 E9CBDC                  _0xaf96:  jmp _0x84f7
  4586                                  
  4587                                  ; ─────────────────────────────────────────────────────────────────────
  4588                                  
  4589                                  ; DATA
  4590                                  
  4591 0000A4DA 00<rep 67h>             times 0x67 db 0     ; L A S T . X  ....
