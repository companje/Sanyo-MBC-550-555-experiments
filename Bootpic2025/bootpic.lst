     1                                  ; %include "sanyo.asm"
     2                                  RED   equ 0xf000
     3                                  GREEN equ 0x1c00
     4                                  BLUE  equ 0xf400
     5                                  COLS  equ 72
     6                                  ROWS  equ 50
     7                                  
     8                                  setup:
     9 00000000 0E                        push cs
    10 00000001 1F                        pop ds
    11                                  
    12 00000002 E81F00                    call clear_green
    13 00000005 B005                      mov al, 5
    14 00000007 E610                      out 10h, al           ; select address 0x1c000 as green video page
    15                                  
    16 00000009 31FF                      xor di,di
    17 0000000B BE[7900]                  mov si,img
    18 0000000E E82600                    call draw_spr
    19                                  
    20 00000011 B93100                    mov cx,49
    21                                  .lp:
    22 00000014 51                        push cx
    23 00000015 BE[7900]                  mov si,img
    24 00000018 E81C00                    call draw_spr
    25 0000001B 81C72001                  add di,288
    26 0000001F 59                        pop cx
    27 00000020 E2F2                      loop .lp
    28                                  
    29                                  draw:
    30 00000022 EBFE                      jmp draw
    31                                  
    32                                  
    33                                  clear_green:
    34 00000024 B8001C                    mov ax,GREEN
    35 00000027 E80100                    call clear_channel
    36 0000002A C3                        ret
    37                                  
    38                                  clear_channel:
    39 0000002B 8EC0                      mov es,ax
    40 0000002D B9201C                    mov cx,COLS*ROWS*2
    41 00000030 31FF                      xor di,di
    42 00000032 31C0                      xor ax,ax
    43 00000034 F3AB                      rep stosw         ; clear screen
    44 00000036 C3                        ret
    45                                  
    46                                  ; ───────────────────────────────────────────────────────────────────────────
    47                                  
    48                                  draw_spr:
    49 00000037 53                        push bx
    50 00000038 8B1C                      mov bx,[si]
    51 0000003A 46                        inc si
    52 0000003B 46                        inc si
    53 0000003C E80200                    call draw_pic
    54 0000003F 5B                        pop bx
    55 00000040 C3                        ret
    56                                  
    57                                  draw_pic:
    58 00000041 50                        push ax
    59 00000042 B800F0                    mov ax, RED
    60 00000045 E80E00                    call draw_channel
    61 00000048 B8001C                    mov ax, GREEN
    62 0000004B E80800                    call draw_channel
    63 0000004E B800F4                    mov ax, BLUE
    64 00000051 E80200                    call draw_channel
    65 00000054 58                        pop ax
    66 00000055 C3                        ret
    67                                  
    68                                  ; ───────────────────────────────────────────────────────────────────────────
    69                                  
    70                                  draw_channel:
    71 00000056 57                        push di
    72 00000057 8EC0                      mov es,ax
    73 00000059 31C9                      xor cx,cx
    74 0000005B 88F9                      mov cl,bh        ; rows (bl)
    75                                  .rows_loop:
    76 0000005D 51                        push cx
    77 0000005E 31C9                      xor cx,cx
    78 00000060 88D9                      mov cl,bl        ; cols (bh)
    79                                  .cols_loop:
    80 00000062 A5                        movsw
    81 00000063 A5                        movsw
    82 00000064 E2FC                      loop .cols_loop
    83 00000066 81C72001                  add di,COLS*4    ; one row down
    84 0000006A B400                      mov ah,0
    85 0000006C 88D8                      mov al,bl
    86 0000006E D1E0<rep 2h>              times 2 shl ax,1
    87 00000072 29C7                      sub di,ax       ; di-=4*bh   ; bh cols to the left on the new row
    88 00000074 59                        pop cx
    89 00000075 E2E6                      loop .rows_loop
    90 00000077 5F                        pop di
    91 00000078 C3                        ret
    92                                  
    93                                  ; ───────────────────────────────────────────────────────────────────────────
    94                                  
    95                                  
    96                                  ; img: incbin "16colors.png-dithered.spr"
    97                                  ; img: incbin "material16.png-dithered.spr"
    98 00000079 <bin C2h>               img: incbin "material16-dit2.spr"
    99                                  
   100                                  
   101 0000013B 00<rep 2CEC5h>          times (180*1024)-($-$$) db 0
   102                                  
   103                                  
   104                                  
