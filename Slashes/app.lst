     1                                  COLS  equ 72
     2                                  ROWS  equ 50
     3                                  BYTES_PER_ROW equ 8*COLS  ; 25 lines
     4                                  RED   equ 0xf000
     5                                  GREEN equ 0x1c00
     6                                  BLUE  equ 0xf400
     7                                  
     8                                  %macro set_cursor 2
     9                                    mov di,(%1-1) * BYTES_PER_ROW + (%2-1) * 4   ; one based
    10                                  %endmacro
    11                                  
    12                                  %define row bh
    13                                  %define col bl
    14                                  
    15                                  setup:
    16 00000000 0E                        push cs
    17 00000001 1F                        pop ds
    18                                  
    19 00000002 E8B300                    call clear_green
    20                                  
    21 00000005 B005                      mov al, 5
    22 00000007 E610                      out 10h, al           ; select address 0x1c000 as green video page
    23                                  
    24                                  
    25                                  draw:
    26                                  
    27 00000009 30FF                      xor row,row
    28                                  .for_row:
    29 0000000B 30DB                      xor col,col
    30                                  .for_col:
    31                                    ;draw
    32 0000000D E84800                    call calc_di_from_bx
    33 00000010 BE[CB00]                  mov si,slash
    34 00000013 E85C00                    call draw_spr
    35                                  
    36 00000016 80C304                    add col,4
    37                                  
    38 00000019 E83C00                  call calc_di_from_bx
    39 0000001C BE[CB00]                  mov si,slash
    40 0000001F E85000                    call draw_spr
    41                                  
    42 00000022 80C304                    add col,4
    43                                  
    44 00000025 E83000                  call calc_di_from_bx
    45 00000028 BE[CB00]                  mov si,slash
    46 0000002B E84400                    call draw_spr
    47                                  
    48 0000002E 80C304                    add col,4
    49                                  
    50 00000031 E82400                  call calc_di_from_bx
    51 00000034 BE[CB00]                  mov si,slash
    52 00000037 E83800                    call draw_spr
    53                                  
    54 0000003A 80C304                    add col,4
    55                                  
    56 0000003D E81800                  call calc_di_from_bx
    57 00000040 BE[CB00]                  mov si,slash
    58 00000043 E82C00                    call draw_spr
    59                                  
    60 00000046 80C304                    add col,4
    61                                  
    62 00000049 E80C00                  call calc_di_from_bx
    63 0000004C BE[CB00]                  mov si,slash
    64 0000004F E82000                    call draw_spr
    65                                  
    66 00000052 80C304                    add col,4
    67                                  
    68                                    ; cmp col,12*4
    69                                    ; jle .for_col
    70                                  
    71                                    ; add row,4
    72                                    ; cmp row,8*4
    73                                    ; jle .for_row
    74                                  
    75 00000055 F4                        hlt
    76                                  
    77                                    ; add di,4*4
    78                                  
    79                                    ; mov si,backslash
    80                                    ; add di,4*4*72-4*4
    81                                    ; call draw_spr
    82                                  
    83                                    ; mov si,slash
    84                                    ; add di,4*4
    85                                    ; call draw_spr
    86                                  
    87                                    ; add di,4*4
    88                                  
    89                                    ; inc bl
    90                                    ; cmp bl,5
    91                                    ; jne draw
    92                                  
    93                                    ; xor bl,bl
    94                                    
    95                                    ; test di,288
    96                                    ; jz draw
    97                                    ; add di,72*4*4
    98                                  
    99 00000056 EBB1                      jmp draw
   100                                  
   101                                  calc_di_from_bx:  ; input bl,bh [0,0,71,49]
   102 00000058 B89000                    mov ax,144      ; 2*72 cols
   103 0000005B F6E7                      mul bh          ; bh*=144 resultaat in AX
   104 0000005D D1E0                      shl ax,1        ; verdubbel AX
   105 0000005F 89C7                      mov di,ax       ; di=ax (=bh*288)
   106 00000061 D0E3                      shl bl,1        ; bl*=2
   107 00000063 D0E3                      shl bl,1        ; bl*=2
   108 00000065 B700                      mov bh,0
   109 00000067 01DF                      add di,bx       ; di+=bl
   110 00000069 83FF00                    cmp di,0
   111 0000006C 7C01                      jl .clamp_top
   112 0000006E C3                        ret
   113                                  .clamp_top
   114 0000006F 31FF                      xor di,di
   115 00000071 C3                        ret
   116                                  
   117                                  draw_spr:
   118 00000072 56                        push si
   119 00000073 53                        push bx
   120 00000074 8B1C                      mov bx,[si]
   121 00000076 46                        inc si
   122 00000077 46                        inc si
   123 00000078 E80300                    call draw_pic
   124 0000007B 5B                        pop bx
   125 0000007C 5E                        pop si
   126 0000007D C3                        ret
   127                                  
   128                                  ; ───────────────────────────────────────────────────────────────────────────
   129                                  
   130                                  draw_pic:
   131 0000007E 50                        push ax
   132 0000007F B800F0                    mov ax, RED
   133 00000082 E80E00                    call draw_channel
   134 00000085 B8001C                    mov ax, GREEN
   135 00000088 E80800                    call draw_channel
   136 0000008B B800F4                    mov ax, BLUE
   137 0000008E E80200                    call draw_channel
   138 00000091 58                        pop ax
   139 00000092 C3                        ret
   140                                  
   141                                  ; ───────────────────────────────────────────────────────────────────────────
   142                                  
   143                                  draw_channel:
   144 00000093 51                        push cx
   145 00000094 57                        push di
   146 00000095 8EC0                      mov es,ax
   147 00000097 31C9                      xor cx,cx
   148 00000099 88F9                      mov cl,bh        ; rows (bl)
   149                                  .rows_loop:
   150 0000009B 51                        push cx
   151 0000009C 31C9                      xor cx,cx
   152 0000009E 88D9                      mov cl,bl        ; cols (bh)
   153                                  .cols_loop:
   154 000000A0 A5                        movsw
   155 000000A1 A5                        movsw
   156 000000A2 E2FC                      loop .cols_loop
   157 000000A4 81C72001                  add di,COLS*4    ; one row down
   158 000000A8 B400                      mov ah,0
   159 000000AA 88D8                      mov al,bl
   160 000000AC D1E0<rep 2h>              times 2 shl ax,1
   161 000000B0 29C7                      sub di,ax       ; di-=4*bh   ; bh cols to the left on the new row
   162 000000B2 59                        pop cx
   163 000000B3 E2E6                      loop .rows_loop
   164 000000B5 5F                        pop di
   165 000000B6 59                        pop cx
   166 000000B7 C3                        ret
   167                                  
   168                                  clear_green:
   169 000000B8 B8001C                    mov ax,GREEN
   170 000000BB E80100                    call clear_channel
   171 000000BE C3                        ret
   172                                  
   173                                  clear_channel:
   174 000000BF 8EC0                      mov es,ax
   175 000000C1 B9201C                    mov cx,COLS*ROWS*2
   176 000000C4 31FF                      xor di,di
   177 000000C6 31C0                      xor ax,ax
   178 000000C8 F3AB                      rep stosw         ; clear screen
   179 000000CA C3                        ret
   180                                  
   181 000000CB <bin C2h>               slash: incbin "data/slash.spr"
   182                                  ; backslash: incbin "data/backslash.spr"
   183                                           
   184                                  %assign num $-$$
   185                                  %warning total num
   185          ******************       warning: total 397 [-w+user]
   186                                     
   187 0000018D 00<rep 2CE73h>          times (180*1024)-($-$$) db 0
