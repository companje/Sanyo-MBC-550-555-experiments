     1                                  RED   equ 0xf000
     2                                  GREEN equ 0x0800
     3                                  BLUE  equ 0xf400
     4                                  STEP equ 4608
     5                                  COLS equ 72
     6                                  ROWS equ 50
     7                                  cos_table equ sin_table+64
     8                                  
     9                                  setup:
    10 00000000 0E                      push cs
    11 00000001 1F                      pop ds
    12 00000002 B80008                  mov ax,GREEN
    13 00000005 8EC0                    mov es,ax
    14                                  
    15 00000007 E82200                  call generate_sine_table
    16                                  
    17 0000000A BE[BF00]                mov si,sin_table
    18 0000000D E80100                  call draw_wave
    19                                  
    20 00000010 F4                      hlt
    21                                  
    22                                  draw_wave:
    23 00000011 B9FF00                    mov cx,255
    24                                  .x:
    25 00000014 51                        push cx
    26 00000015 56                        push si
    27                                  
    28 00000016 01CE                      add si,cx
    29 00000018 AC                        lodsb
    30                                  
    31 00000019 89CB                      mov bx,cx      ;x
    32 0000001B 88C2                      mov dl,al      ;y
    33 0000001D 30F6                      xor dh,dh
    34 0000001F D0EA                      shr dl,1
    35                                  
    36 00000021 E86D00                    call calc_bit_for_pixel
    37 00000024 260815                    or [es:di],dl
    38                                  
    39 00000027 5E                        pop si
    40 00000028 59                        pop cx
    41                                  
    42 00000029 E2E9                      loop .x
    43 0000002B C3                        ret
    44                                  
    45                                  generate_sine_table:
    46 0000002C BD4C04                    mov bp,1100
    47 0000002F BE0100                    mov si,1
    48 00000032 31FF                      xor di,di
    49 00000034 B94000                    mov cx,64
    50                                  .a:
    51 00000037 51                        push cx
    52 00000038 B99401                    mov cx,404
    53 0000003B BB0040                    mov bx,2<<13
    54 0000003E 89F0                      mov ax,si
    55 00000040 31D2                      xor dx,dx
    56 00000042 F7E9                      imul cx
    57 00000044 F7FB                      idiv bx
    58                                  
    59 00000046 50                        push ax
    60 00000047 89E8                      mov ax,bp
    61 00000049 31D2                      xor dx,dx
    62 0000004B F7E9                      imul cx
    63 0000004D F7FB                      idiv bx
    64 0000004F 29C6                      sub si,ax
    65 00000051 58                        pop ax
    66 00000052 01C5                      add bp,ax
    67                                  
    68 00000054 B91C00                    mov cx,28
    69 00000057 89F0                      mov ax,si
    70 00000059 F7E9                      imul cx
    71 0000005B B108                      mov cl,8
    72 0000005D D3E8                      shr ax,cl
    73 0000005F 0480                      add al,128
    74                                  
    75                                    ;from here the qsin is repeated/flipped
    76                                  
    77 00000061 49                        dec cx  ; cx was 8 here
    78                                  .d:
    79 00000062 89CB                      mov bx,cx
    80 00000064 4B                        dec bx
    81 00000065 50                        push ax
    82 00000066 57                        push di
    83 00000067 51                        push cx
    84 00000068 B106                      mov cl,6
    85 0000006A D3E3                      shl bx,cl
    86 0000006C 59                        pop cx
    87 0000006D 49                        dec cx ; because loop repeats unless 0 not including 0
    88                                  
    89 0000006E F6C101                    test cl,1  ; cx [5..1]
    90 00000071 7405                      jz .b
    91 00000073 F7DF                      neg di
    92 00000075 83C33F                    add bx,63  ; add bl equal bytes
    93                                  .b:
    94 00000078 F6C102                    test cl,2
    95 0000007B 7402                      jz .c
    96 0000007D F6D0                      not al
    97                                  .c:
    98                                  
    99 0000007F 01DF                      add di,bx
   100 00000081 81C7[BF00]                add di,sin_table
   101 00000085 8805                      mov [di],al
   102 00000087 5F                        pop di
   103 00000088 58                        pop ax
   104 00000089 41                        inc cx ; restore cx after decrease
   105 0000008A E2D6                      loop .d
   106                                  
   107                                  ;-------
   108                                  
   109 0000008C 59                        pop cx
   110 0000008D 47                        inc di
   111 0000008E E2A7                      loop .a 
   112 00000090 C3                        ret
   113                                  
   114                                  
   115                                  ; --------------------------------------------------
   116                                  
   117                                  calc_bit_for_pixel:
   118                                    ;input BX,DX = x,y
   119                                    ;output DI = (y\4)*(4*COLS) + (y%4) + (x\8)*4
   120                                    ;output DL = 2^(7-(x % 8))
   121                                    ;or [es:di],dl  ; set pixel
   122 00000091 89D0                      mov ax,dx        ; y
   123 00000093 B90300                    mov cx,3
   124 00000096 21CA                      and dx,cx        ; dx=y%4
   125 00000098 FEC9                      dec cl
   126 0000009A D3E8                      shr ax,cl        ; ax=y/4        
   127 0000009C 89D7                      mov di,dx        ; vram offset (dx=y%4)
   128 0000009E B92001                    mov cx,4*COLS    
   129 000000A1 F7E1                      mul cx           ; ax*=(4*COLS)
   130 000000A3 01C7                      add di,ax        ; di+=ax
   131 000000A5 89D8                      mov ax,bx        ; x
   132 000000A7 89C2                      mov dx,ax
   133 000000A9 83E207                    and dx,7         ; %=8
   134 000000AC B103                      mov cl,3
   135 000000AE D3E8                      shr ax,cl        ; /=8      
   136 000000B0 FEC9                      dec cl
   137 000000B2 D3E0                      shl ax,cl        ; *=4
   138 000000B4 01C7                      add di,ax        ; di+=(x/8)*4
   139 000000B6 B080                      mov al,128       ; highest bit
   140 000000B8 88D1                      mov cl,dl        ; dl contains x%8
   141 000000BA D2E8                      shr al,cl        ; shift right number of bits to the correct pixel in char
   142 000000BC 88C2                      mov dl,al
   143 000000BE C3                        ret
   144                                  
   145                                  sin_table:
   146                                  
   147                                  %assign num $-$$
   148                                  %warning total num
   148          ******************       warning: total 191 [-w+user]
   149 000000BF 00<rep 2CF41h>          times (180*1024)-num db 0
   150                                  
   151                                  
   152                                  
